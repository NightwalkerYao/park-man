{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\comment begin body}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Référence du fichier src/fort.c\par \pard\plain 
{\tc\tcl2 \v src/fort.c}
{\xe \v src/fort.c}
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <stddef.h>}\par
{\f2 #include <stdlib.h>}\par
{\f2 #include <string.h>}\par
{\f2 #include <assert.h>}\par
{\f2 #include <stdio.h>}\par
{\f2 #include "../include/fort.h"}\par
{\f2 #include <wchar.h>}\par
{\f2 #include <stdint.h>}\par
{\f2 #include <limits.h>}\par
{\f2 #include <stdarg.h>}\par
{\f2 #include <ctype.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Graphe des dépendances par inclusion de fort.c:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "fort_8c__incl.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Structures de données\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_string_view}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_separator}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_context}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_conv_context}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_string_buffer}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_cell_props}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_entire_table_properties}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_table_properties}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ft_table}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_cell}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_row}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b f_vector}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b interval}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_AMALGAMED_SOURCE}\~ /* Macros to make internal libfort functions static */\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FORT_IMPL_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_INTERNAL}\~ static\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FORT_DEFAULT_COL_SEPARATOR}\~ '|'\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FORT_COL_SEPARATOR_LENGTH}\~ 1\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FORT_UNUSED}\~ __attribute__((unused))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_MALLOC}\~ {\b fort_malloc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_FREE}\~ {\b fort_free}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_CALLOC}\~ {\b fort_calloc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_REALLOC}\~ {\b fort_realloc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_STRDUP}\~ {\b fort_strdup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_WCSDUP}\~ {\b fort_wcsdup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_UTF8DUP}\~ {\b utf8dup}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b F_CREATE}(type)\~ ((type *){\b F_CALLOC}(sizeof(type), 1))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MAX}(a,  b)\~ ((a) > (b) ? (a) : (b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MIN}(a,  b)\~ ((a) < (b) ? (a) : (b))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_NEWLINE}\~ "\\n"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_SPACE}\~ " "\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_STR_BUF_SIZE}\~ 1024\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEFAULT_VECTOR_CAPACITY}\~ 10\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_STR_2_CAT_}(arg1,  arg2)\~     arg1##arg2\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_STR_2_CAT}(arg1,  arg2)\~     {\b FT_STR_2_CAT_}(arg1, arg2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNIQUE_NAME_}(prefix)\~     {\b FT_STR_2_CAT}(prefix,__COUNTER__)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNIQUE_NAME}(prefix)\~     {\b UNIQUE_NAME_}(prefix)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PRINT_DEBUG_INFO}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_CHECK}(statement)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHCK_RSLT_ADD_TO_WRITTEN}(statement)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}(statement)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CHECK_NOT_NEGATIVE}(x)\~     do \{ if ((x) < 0) goto fort_fail; \} while (0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VECTOR_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b INVALID_VEC_INDEX}\~ ((size_t) -1)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VECTOR_AT}(vector,  pos,  data_type)\~     *(data_type *){\b vector_at}((vector), (pos))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b VECTOR_AT_C}(vector,  pos,  const_data_type)\~     *(const_data_type *){\b vector_at_c}((vector), (pos))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WCWIDTH_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SHEREDOM_UTF8_H_INCLUDED}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b utf8_nonnull}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b utf8_pure}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b utf8_restrict}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b utf8_weak}\~ inline\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b utf8_null}\~ 0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRING_BUFFER_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROPERTIES_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROP_IS_SET}(ft_props,  property)\~ ((ft_props) & (property))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROP_SET}(ft_props,  property)\~ ((ft_props) |=(property))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PROP_UNSET}(ft_props,  property)\~ ((ft_props) &= ~((uint32_t)(property)))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TEXT_STYLE_TAG_MAX_SIZE}\~ (64 * 2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CELL_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ROW_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TABLE_H}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TOTAL_WRITTEN}\~ (written + invisible_written)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RIGHT}\~ (padding_right + extra_right)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WRITE_CELL_STYLE_TAG}\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, cell_style_tag))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WRITE_RESET_CELL_STYLE_TAG}\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, reset_cell_style_tag))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WRITE_CONTENT_STYLE_TAG}\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, content_style_tag))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WRITE_RESET_CONTENT_STYLE_TAG}\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, reset_content_style_tag))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_PRINTF}\~ ft_printf_impl\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_PRINTF_LN}\~ ft_printf_ln_impl\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BUILT_IN_STYLES_SZ}\~ (sizeof(built_in_styles) / sizeof(built_in_styles[0]))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BOR_CHARS}\~ properties->border_style.border_chars\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b H_BOR_CHARS}\~ properties->border_style.header_border_chars\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SEP_CHARS}\~ properties->border_style.separator_chars\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WCS_SIZE}\~ 64\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FT_RESET_COLOR}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b UNIVERSAL_RESET_TAG}\~ "\\033[0m"\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BASIC_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BASIC2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SIMPLE_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b PLAIN_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOT_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMPTY_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EMPTY2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SOLID_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SOLID_ROUND_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NICE_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOUBLE_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DOUBLE2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BOLD_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BOLD2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FRAME_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRCHR}\~ strchr\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b STRCHR}\~ wcschr\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Définitions de type\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_string_view} {\b f_string_view_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int {\b f_status}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_table_properties} {\b f_table_properties_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_vector} {\b f_vector_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_cell} {\b f_cell_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_string_buffer} {\b f_string_buffer_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_row} {\b f_row_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_separator} {\b f_separator_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_context} {\b f_context_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_conv_context} {\b f_conv_context_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef int32_t {\b utf8_int32_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b f_cell_props} {\b f_cell_props_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b f_vector_t} {\b f_cell_prop_container_t}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef struct {\b fort_entire_table_properties} {\b fort_entire_table_properties_t}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Énumérations\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_get_policy} \{ {\b CREATE_ON_NULL}
, {\b DONT_CREATE_ON_NULL}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_bool} \{ {\b F_FALSE} = 0
, {\b F_TRUE} = 1
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_cell_type} \{ {\b COMMON_CELL}
, {\b GROUP_MASTER_CELL}
, {\b GROUP_SLAVE_CELL}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_geometry_type} \{ {\b VISIBLE_GEOMETRY}
, {\b INTERN_REPR_GEOMETRY}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_string_type} \{ {\b CHAR_BUF}
, {\b W_CHAR_BUF}
, {\b UTF8_BUF}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_hor_separator_pos} \{ {\b TOP_SEPARATOR}
, {\b INSIDE_SEPARATOR}
, {\b BOTTOM_SEPARATOR}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_border_item_pos} \{ {\b TL_bip} = 0
, {\b TT_bip} = 1
, {\b TV_bip} = 2
, {\b TR_bip} = 3
, {\b LL_bip} = 4
, {\b IV_bip} = 5
, {\b RR_bip} = 6
, {\b LH_bip} = 7
, {\b IH_bip} = 8
, {\b II_bip} = 9
, {\b RH_bip} = 10
, {\b BL_bip} = 11
, {\b BB_bip} = 12
, {\b BV_bip} = 13
, {\b BR_bip} = 14
, {\b LI_bip} = 15
, {\b TI_bip} = 16
, {\b RI_bip} = 17
, {\b BI_bip} = 18
, {\b BORDER_ITEM_POS_SIZE}
 \}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b f_separator_item_pos} \{ {\b LH_sip} = 0
, {\b IH_sip} = 1
, {\b II_sip} = 2
, {\b RH_sip} = 3
, {\b TI_sip} = 4
, {\b BI_sip} = 5
, {\b SEPARATOR_ITEM_POS_SIZE}
 \}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fonctions\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b set_memory_funcs} (void *(*f_malloc)(size_t size), void(*f_free)(void *ptr))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} char * {\b fort_strdup} (const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b number_of_columns_in_format_string} (const {\b f_string_view_t} *fmt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b number_of_columns_in_format_buffer} (const {\b f_string_buffer_t} *fmt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} wchar_t * {\b fort_wcsdup} (const wchar_t *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b print_n_strings} ({\b f_conv_context_t} *cntx, size_t n, const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b ft_nprint} ({\b f_conv_context_t} *cntx, const char *str, size_t strlen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b ft_nwprint} ({\b f_conv_context_t} *cntx, const wchar_t *str, size_t strlen)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b ft_nu8print} ({\b f_conv_context_t} *cntx, const void *beg, const void *end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_vector_t} * {\b create_vector} (size_t item_size, size_t capacity)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b destroy_vector} ({\b f_vector_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b vector_size} (const {\b f_vector_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b vector_capacity} (const {\b f_vector_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b vector_push} ({\b f_vector_t} *, const void *item)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b vector_insert} ({\b f_vector_t} *, const void *item, size_t pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_vector_t} * {\b vector_split} ({\b f_vector_t} *, size_t pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} const void * {\b vector_at_c} (const {\b f_vector_t} *vector, size_t index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void * {\b vector_at} ({\b f_vector_t} *, size_t index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b vector_swap} ({\b f_vector_t} *cur_vec, {\b f_vector_t} *mv_vec, size_t pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b vector_clear} ({\b f_vector_t} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b vector_erase} ({\b f_vector_t} *, size_t index)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b mk_wcswidth} (const wchar_t *pwcs, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} int {\b utf8casecmp} (const void *src1, const void *src2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8cat} (void *{\b utf8_restrict} dst, const void *{\b utf8_restrict} src)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} void * {\b utf8chr} (const void *src, {\b utf8_int32_t} chr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} int {\b utf8cmp} (const void *src1, const void *src2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8cpy} (void *{\b utf8_restrict} dst, const void *{\b utf8_restrict} src)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} size_t {\b utf8cspn} (const void *src, const void *reject)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8dup} (const void *src)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} size_t {\b utf8len} (const void *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} size_t {\b utf8width} (const void *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} int {\b utf8cwidth} ({\b utf8_int32_t} c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} int {\b utf8ncasecmp} (const void *src1, const void *src2, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8ncat} (void *{\b utf8_restrict} dst, const void *{\b utf8_restrict} src, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} int {\b utf8ncmp} (const void *src1, const void *src2, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8ncpy} (void *{\b utf8_restrict} dst, const void *{\b utf8_restrict} src, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8ndup} (const void *src, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} void * {\b utf8pbrk} (const void *str, const void *accept)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} void * {\b utf8rchr} (const void *src, int chr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} size_t {\b utf8size} (const void *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} size_t {\b utf8spn} (const void *src, const void *accept)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} void * {\b utf8str} (const void *haystack, const void *needle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} void * {\b utf8casestr} (const void *haystack, const void *needle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_pure} {\b utf8_weak} void * {\b utf8valid} (const void *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8codepoint} (const void *{\b utf8_restrict} str, {\b utf8_int32_t} *{\b utf8_restrict} out_codepoint)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_weak} size_t {\b utf8codepointsize} ({\b utf8_int32_t} chr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void * {\b utf8catcodepoint} (void *{\b utf8_restrict} str, {\b utf8_int32_t} chr, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_weak} int {\b utf8islower} ({\b utf8_int32_t} chr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_weak} int {\b utf8isupper} ({\b utf8_int32_t} chr)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void {\b utf8lwr} (void *{\b utf8_restrict} str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_nonnull} {\b utf8_weak} void {\b utf8upr} (void *{\b utf8_restrict} str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_weak} {\b utf8_int32_t} {\b utf8lwrcodepoint} ({\b utf8_int32_t} cp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b utf8_weak} {\b utf8_int32_t} {\b utf8uprcodepoint} ({\b utf8_int32_t} cp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b utf8coll} (const void *src1, const void *src2)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void * {\b utf8fry} (const void *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_string_buffer_t} * {\b create_string_buffer} (size_t number_of_chars, enum {\b f_string_type} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b destroy_string_buffer} ({\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_string_buffer_t} * {\b copy_string_buffer} (const {\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b realloc_string_buffer_without_copy} ({\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b fill_buffer_from_string} ({\b f_string_buffer_t} *buffer, const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b fill_buffer_from_wstring} ({\b f_string_buffer_t} *buffer, const wchar_t *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b fill_buffer_from_u8string} ({\b f_string_buffer_t} *buffer, const void *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b buffer_text_visible_width} (const {\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b buffer_text_visible_height} (const {\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b string_buffer_cod_width_capacity} (const {\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b string_buffer_raw_capacity} (const {\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b string_buffer_width_capacity} (const {\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void * {\b buffer_get_data} ({\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b buffer_check_align} ({\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b buffer_printf} ({\b f_string_buffer_t} *buffer, size_t buffer_row, {\b f_conv_context_t} *cntx, size_t cod_width, const char *content_style_tag, const char *reset_content_style_tag)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b buffer_set_u8strwid_func} (int(*u8strwid)(const void *beg, const void *end, size_t *width))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b get_style_tag_for_cell} (const {\b f_table_properties_t} *props, size_t row, size_t col, char *style_tag, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b get_reset_style_tag_for_cell} (const {\b f_table_properties_t} *props, size_t row, size_t col, char *style_tag, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b get_style_tag_for_content} (const {\b f_table_properties_t} *props, size_t row, size_t col, char *style_tag, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b get_reset_style_tag_for_content} (const {\b f_table_properties_t} *props, size_t row, size_t col, char *style_tag, size_t sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_cell_prop_container_t} * {\b create_cell_prop_container} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b destroy_cell_prop_container} ({\b f_cell_prop_container_t} *cont)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} const {\b f_cell_props_t} * {\b cget_cell_prop} (const {\b f_cell_prop_container_t} *cont, size_t row, size_t col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_cell_props_t} * {\b get_cell_prop_and_create_if_not_exists} ({\b f_cell_prop_container_t} *cont, size_t row, size_t col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b set_cell_property} ({\b f_cell_prop_container_t} *cont, size_t row, size_t col, uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b get_cell_property_hierarchically} (const {\b f_table_properties_t} *properties, size_t row, size_t column, uint32_t property)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b set_default_cell_property} (uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b set_entire_table_property} ({\b f_table_properties_t} *table_properties, uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b set_default_entire_table_property} (uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b max_border_elem_strlen} (struct {\b f_table_properties} *)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_table_properties_t} * {\b create_table_properties} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b destroy_table_properties} ({\b f_table_properties_t} *properties)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_table_properties_t} * {\b copy_table_properties} (const {\b f_table_properties_t} *property)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_cell_t} * {\b create_cell} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b destroy_cell} ({\b f_cell_t} *cell)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_cell_t} * {\b copy_cell} ({\b f_cell_t} *cell)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b cell_vis_width} (const {\b f_cell_t} *cell, const {\b f_context_t} *context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b cell_invis_codes_width} (const {\b f_cell_t} *cell, const {\b f_context_t} *context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b hint_height_cell} (const {\b f_cell_t} *cell, const {\b f_context_t} *context)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b set_cell_type} ({\b f_cell_t} *cell, enum {\b f_cell_type} type)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} enum {\b f_cell_type} {\b get_cell_type} (const {\b f_cell_t} *cell)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b cell_printf} ({\b f_cell_t} *cell, size_t row, {\b f_conv_context_t} *cntx, size_t cod_width)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b fill_cell_from_string} ({\b f_cell_t} *cell, const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b fill_cell_from_wstring} ({\b f_cell_t} *cell, const wchar_t *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b fill_cell_from_buffer} ({\b f_cell_t} *cell, const {\b f_string_buffer_t} *buf)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_string_buffer_t} * {\b cell_get_string_buffer} ({\b f_cell_t} *cell)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b create_row} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b destroy_row} ({\b f_row_t} *row)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b copy_row} ({\b f_row_t} *row)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b split_row} ({\b f_row_t} *row, size_t pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b ft_row_erase_range} ({\b f_row_t} *row, size_t left, size_t right)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b create_row_from_string} (const char *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b create_row_from_fmt_string} (const struct {\b f_string_view} *fmt, va_list *va_args)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b columns_in_row} (const {\b f_row_t} *row)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_cell_t} * {\b get_cell} ({\b f_row_t} *row, size_t col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} const {\b f_cell_t} * {\b get_cell_c} (const {\b f_row_t} *row, size_t col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_cell_t} * {\b get_cell_and_create_if_not_exists} ({\b f_row_t} *row, size_t col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_cell_t} * {\b create_cell_in_position} ({\b f_row_t} *row, size_t col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b swap_row} ({\b f_row_t} *cur_row, {\b f_row_t} *ins_row, size_t pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b insert_row} ({\b f_row_t} *cur_row, {\b f_row_t} *ins_row, size_t pos)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b group_cell_number} (const {\b f_row_t} *row, size_t master_cell_col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b get_row_cell_types} (const {\b f_row_t} *row, enum {\b f_cell_type} *types, size_t types_sz)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b row_set_cell_span} ({\b f_row_t} *row, size_t cell_column, size_t hor_span)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b print_row_separator} ({\b f_conv_context_t} *cntx, const size_t *col_width_arr, size_t cols, const {\b f_row_t} *upper_row, const {\b f_row_t} *lower_row, enum {\b f_hor_separator_pos} separatorPos, const {\b f_separator_t} *sep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} int {\b snprintf_row} (const {\b f_row_t} *row, {\b f_conv_context_t} *cntx, size_t *col_width_arr, size_t col_width_arr_sz, size_t row_height)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b create_row_from_wstring} (const wchar_t *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_separator_t} * {\b create_separator} (int enabled)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b destroy_separator} ({\b f_separator_t} *sep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_separator_t} * {\b copy_separator} ({\b f_separator_t} *sep)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b get_table_sizes} (const {\b ft_table_t} *table, size_t *rows, size_t *cols)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b get_row} ({\b ft_table_t} *table, size_t row)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} const {\b f_row_t} * {\b get_row_c} (const {\b ft_table_t} *table, size_t row)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b get_row_and_create_if_not_exists} ({\b ft_table_t} *table, size_t row)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_string_buffer_t} * {\b get_cur_str_buffer_and_create_if_not_exists} ({\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b table_rows_and_cols_geometry} (const {\b ft_table_t} *table, size_t **col_width_arr_p, size_t *col_width_arr_sz, size_t **row_height_arr_p, size_t *row_height_arr_sz, enum {\b f_geometry_type} geom)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b table_geometry} (const {\b ft_table_t} *table, size_t *height, size_t *width)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_status} {\b table_internal_codepoints_geometry} (const {\b ft_table_t} *table, size_t *height, size_t *width)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ft_table_t} * {\b ft_create_table} (void)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ft_destroy_table} ({\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ft_table_t} * {\b ft_copy_table} ({\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_ln} ({\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b ft_cur_row} (const {\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b ft_cur_col} (const {\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ft_set_cur_cell} ({\b ft_table_t} *table, size_t row, size_t col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_is_empty} (const {\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
size_t {\b ft_row_count} (const {\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_erase_range} ({\b ft_table_t} *table, size_t top_left_row, size_t top_left_col, size_t bottom_right_row, size_t bottom_right_col)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FT_PRINTF} ({\b ft_table_t} *table, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b FT_PRINTF_LN} ({\b ft_table_t} *table, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_wprintf} ({\b ft_table_t} *table, const wchar_t *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_wprintf_ln} ({\b ft_table_t} *table, const wchar_t *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ft_set_default_printf_field_separator} (char separator)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_nwrite} ({\b ft_table_t} *table, size_t count, const char *cell_content,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_nwrite_ln} ({\b ft_table_t} *table, size_t count, const char *cell_content,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_nwwrite} ({\b ft_table_t} *table, size_t n, const wchar_t *cell_content,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_nwwrite_ln} ({\b ft_table_t} *table, size_t n, const wchar_t *cell_content,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_row_write} ({\b ft_table_t} *table, size_t cols, const char *cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_row_write_ln} ({\b ft_table_t} *table, size_t cols, const char *cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_row_wwrite} ({\b ft_table_t} *table, size_t cols, const wchar_t *cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_row_wwrite_ln} ({\b ft_table_t} *table, size_t cols, const wchar_t *cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_table_write} ({\b ft_table_t} *table, size_t rows, size_t cols, const char *table_cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_table_write_ln} ({\b ft_table_t} *table, size_t rows, size_t cols, const char *table_cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_table_wwrite} ({\b ft_table_t} *table, size_t rows, size_t cols, const wchar_t *table_cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_table_wwrite_ln} ({\b ft_table_t} *table, size_t rows, size_t cols, const wchar_t *table_cells[])\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b ft_to_string} (const {\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const wchar_t * {\b ft_to_wstring} (const {\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_add_separator} ({\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_set_default_border_style} (const struct {\b ft_border_style} *style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_set_border_style} ({\b ft_table_t} *table, const struct {\b ft_border_style} *style)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_set_cell_prop} ({\b ft_table_t} *table, size_t row, size_t col, uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_set_default_cell_prop} (uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_set_default_tbl_prop} (uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_set_tbl_prop} ({\b ft_table_t} *table, uint32_t property, int value)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ft_set_memory_funcs} (void *(*f_malloc)(size_t size), void(*f_free)(void *ptr))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b ft_strerror} (int error_code)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_set_cell_span} ({\b ft_table_t} *table, size_t row, size_t col, size_t hor_span)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_u8nwrite} ({\b ft_table_t} *table, size_t n, const void *cell_content,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_u8nwrite_ln} ({\b ft_table_t} *table, size_t n, const void *cell_content,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_u8printf} ({\b ft_table_t} *table, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b ft_u8printf_ln} ({\b ft_table_t} *table, const char *fmt,...)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const void * {\b ft_to_u8string} (const {\b ft_table_t} *table)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b ft_set_u8strwid_func} (int(*u8strwid)(const void *beg, const void *end, size_t *width))\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} {\b f_row_t} * {\b create_row_from_buffer} (const {\b f_string_buffer_t} *buffer)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b strchr_count} (const char *str, char ch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b wstrchr_count} (const wchar_t *str, wchar_t ch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void * {\b ut8next} (const void *str)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} size_t {\b utf8chr_count} (const void *str, {\b utf8_int32_t} ch)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} const char * {\b str_n_substring_beg} (const char *str, char ch_separator, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} const wchar_t * {\b wstr_n_substring_beg} (const wchar_t *str, wchar_t ch_separator, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} const void * {\b utf8_n_substring_beg} (const void *str, {\b utf8_int32_t} ch_separator, size_t n)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b str_n_substring} (const char *str, char ch_separator, size_t n, const char **begin, const char **end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b wstr_n_substring} (const wchar_t *str, wchar_t ch_separator, size_t n, const wchar_t **begin, const wchar_t **end)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b FT_INTERNAL} void {\b utf8_n_substring} (const void *str, {\b utf8_int32_t} ch_separator, size_t n, const void **begin, const void **end)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b g_col_separator} = {\b FORT_DEFAULT_COL_SEPARATOR}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void *(* {\b fort_malloc} )(size_t size) = &local_malloc\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void(* {\b fort_free} )(void *ptr) = &local_free\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void *(* {\b fort_calloc} )(size_t nmemb, size_t size) = &local_calloc\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void *(* {\b fort_realloc} )(void *ptr, size_t size) = &local_realloc\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_BASIC_STYLE} = {\b BASIC_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_BASIC2_STYLE} = {\b BASIC2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_SIMPLE_STYLE} = {\b SIMPLE_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_PLAIN_STYLE} = {\b PLAIN_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_DOT_STYLE} = {\b DOT_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_EMPTY_STYLE} = {\b EMPTY_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_EMPTY2_STYLE} = {\b EMPTY2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_SOLID_STYLE} = {\b SOLID_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_SOLID_ROUND_STYLE} = {\b SOLID_ROUND_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_NICE_STYLE} = {\b NICE_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_DOUBLE_STYLE} = {\b DOUBLE_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_DOUBLE2_STYLE} = {\b DOUBLE2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_BOLD_STYLE} = {\b BOLD_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_BOLD2_STYLE} = {\b BOLD2_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b fort_border_style} {\b FORT_FRAME_STYLE} = {\b FRAME_STYLE}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b fort_entire_table_properties_t} {\b g_entire_table_properties}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b f_table_properties_t} {\b g_table_properties}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_BASIC_STYLE} = &built_in_external_styles[0]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_BASIC2_STYLE} = &built_in_external_styles[1]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_SIMPLE_STYLE} = &built_in_external_styles[2]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_PLAIN_STYLE} = &built_in_external_styles[3]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_DOT_STYLE} = &built_in_external_styles[4]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_EMPTY_STYLE} = &built_in_external_styles[5]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_EMPTY2_STYLE} = &built_in_external_styles[6]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_SOLID_STYLE} = &built_in_external_styles[7]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_SOLID_ROUND_STYLE} = &built_in_external_styles[8]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_NICE_STYLE} = &built_in_external_styles[9]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_DOUBLE_STYLE} = &built_in_external_styles[10]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_DOUBLE2_STYLE} = &built_in_external_styles[11]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_BOLD_STYLE} = &built_in_external_styles[12]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_BOLD2_STYLE} = &built_in_external_styles[13]\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const struct {\b ft_border_style} *const {\b FT_FRAME_STYLE} = &built_in_external_styles[14]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des macros\par
\pard\plain 
{\xe \v BASIC2_STYLE\:fort.c}
{\xe \v fort.c\:BASIC2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BASIC2_STYLE}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{           \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},          \\\par
     {\cf22 "|"}, {\cf22 "|"}, {\cf22 "|"},               \\\par
     {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},          \\\par
     {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},          \\\par
     {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "|"}, {\cf22 "|"}, {\cf22 "|"},                \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "+"}, {\cf22 "+"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v BASIC_STYLE\:fort.c}
{\xe \v fort.c\:BASIC_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BASIC_STYLE}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{            \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},          \\\par
     {\cf22 "|"}, {\cf22 "|"}, {\cf22 "|"},               \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},      \\\par
     {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},          \\\par
     {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "|"}, {\cf22 "|"}, {\cf22 "|"},                \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "+"}, {\cf22 "-"}, {\cf22 "+"}, {\cf22 "+"},           \\\par
    {\cf22 "+"}, {\cf22 "+"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v BOLD2_STYLE\:fort.c}
{\xe \v fort.c\:BOLD2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BOLD2_STYLE}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{            \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "┏"}, {\cf22 "━"}, {\cf22 "┯"}, {\cf22 "┓"},          \\\par
     {\cf22 "┃"}, {\cf22 "│"}, {\cf22 "┃"},               \\\par
     {\cf22 "┠"}, {\cf22 "─"}, {\cf22 "┼"}, {\cf22 "┨"},          \\\par
     {\cf22 "┗"}, {\cf22 "━"}, {\cf22 "┷"}, {\cf22 "┛"},          \\\par
     {\cf22 "┣"}, {\cf22 "┬"}, {\cf22 "┣"}, {\cf22 "┴"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "┏"}, {\cf22 "━"}, {\cf22 "┯"}, {\cf22 "┓"},           \\\par
    {\cf22 "┃"}, {\cf22 "│"}, {\cf22 "┃"},                \\\par
    {\cf22 "┣"}, {\cf22 "━"}, {\cf22 "┿"}, {\cf22 "┫"},           \\\par
    {\cf22 "┗"}, {\cf22 "━"}, {\cf22 "┷"}, {\cf22 "┛"},           \\\par
    {\cf22 "┣"}, {\cf22 "┯"}, {\cf22 "┣"}, {\cf22 "┷"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "┣"}, {\cf22 "━"}, {\cf22 "┿"}, {\cf22 "┫"},           \\\par
    {\cf22 "┯"}, {\cf22 "┷"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v BOLD_STYLE\:fort.c}
{\xe \v fort.c\:BOLD_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BOLD_STYLE}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{             \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "┏"}, {\cf22 "━"}, {\cf22 "┳"}, {\cf22 "┓"},          \\\par
     {\cf22 "┃"}, {\cf22 "┃"}, {\cf22 "┃"},               \\\par
     {\cf22 ""}, {\cf22 ""}, {\cf22 ""}, {\cf22 ""},              \\\par
     {\cf22 "┗"}, {\cf22 "━"}, {\cf22 "┻"}, {\cf22 "┛"},          \\\par
     {\cf22 "┣"}, {\cf22 "┻"}, {\cf22 "┣"}, {\cf22 "┳"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "┏"}, {\cf22 "━"}, {\cf22 "┳"}, {\cf22 "┓"},           \\\par
    {\cf22 "┃"}, {\cf22 "┃"}, {\cf22 "┃"},                \\\par
    {\cf22 "┣"}, {\cf22 "━"}, {\cf22 "╋"}, {\cf22 "┫"},           \\\par
    {\cf22 "┗"}, {\cf22 "━"}, {\cf22 "┻"}, {\cf22 "┛"},           \\\par
    {\cf22 "┣"}, {\cf22 "┳"}, {\cf22 "┣"}, {\cf22 "┻"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "┣"}, {\cf22 "━"}, {\cf22 "╋"}, {\cf22 "┫"},           \\\par
    {\cf22 "┳"}, {\cf22 "┻"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v BOR_CHARS\:fort.c}
{\xe \v fort.c\:BOR_CHARS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BOR_CHARS\~ properties->border_style.border_chars}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v BUILT_IN_STYLES_SZ\:fort.c}
{\xe \v fort.c\:BUILT_IN_STYLES_SZ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BUILT_IN_STYLES_SZ\~ (sizeof(built_in_styles) / sizeof(built_in_styles[0]))}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CELL_H\:fort.c}
{\xe \v fort.c\:CELL_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CELL_H}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN\:fort.c}
{\xe \v fort.c\:CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN( statement)}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 do} \{ \\\par
        tmp = statement; \\\par
        if (tmp < 0) \{\\\par
            PRINT_DEBUG_INFO \\\par
            goto clear; \\\par
        \} \\\par
        invisible_written += (size_t)tmp; \\\par
    \} {\cf19 while}(0)\par
}
}
{\xe \v CHCK_RSLT_ADD_TO_WRITTEN\:fort.c}
{\xe \v fort.c\:CHCK_RSLT_ADD_TO_WRITTEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHCK_RSLT_ADD_TO_WRITTEN( statement)}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 do} \{ \\\par
        tmp = statement; \\\par
        if (tmp < 0) \{\\\par
            PRINT_DEBUG_INFO \\\par
            goto clear; \\\par
        \} \\\par
        written += (size_t)tmp; \\\par
    \} {\cf19 while}(0)\par
}
}
{\xe \v CHECK_NOT_NEGATIVE\:fort.c}
{\xe \v fort.c\:CHECK_NOT_NEGATIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CHECK_NOT_NEGATIVE( x)\~     do \{ if ((x) < 0) goto fort_fail; \} while (0)}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_STR_BUF_SIZE\:fort.c}
{\xe \v fort.c\:DEFAULT_STR_BUF_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_STR_BUF_SIZE\~ 1024}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DEFAULT_VECTOR_CAPACITY\:fort.c}
{\xe \v fort.c\:DEFAULT_VECTOR_CAPACITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEFAULT_VECTOR_CAPACITY\~ 10}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v DOT_STYLE\:fort.c}
{\xe \v fort.c\:DOT_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOT_STYLE}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{              \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "."}, {\cf22 "."}, {\cf22 "."}, {\cf22 "."},          \\\par
     {\cf22 ":"}, {\cf22 ":"}, {\cf22 ":"},               \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},      \\\par
     {\cf22 ":"}, {\cf22 "."}, {\cf22 ":"}, {\cf22 ":"},          \\\par
     {\cf22 "+"}, {\cf22 ":"}, {\cf22 "+"}, {\cf22 ":"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "."}, {\cf22 "."}, {\cf22 "."}, {\cf22 "."},           \\\par
    {\cf22 ":"}, {\cf22 ":"}, {\cf22 ":"},                \\\par
    {\cf22 ":"}, {\cf22 "."}, {\cf22 ":"}, {\cf22 ":"},           \\\par
    {\cf22 ":"}, {\cf22 "."}, {\cf22 ":"}, {\cf22 ":"},           \\\par
    {\cf22 "+"}, {\cf22 "."}, {\cf22 "+"}, {\cf22 "."},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 ":"}, {\cf22 "."}, {\cf22 ":"}, {\cf22 ":"},           \\\par
    {\cf22 ":"}, {\cf22 ":"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v DOUBLE2_STYLE\:fort.c}
{\xe \v fort.c\:DOUBLE2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOUBLE2_STYLE}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{          \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "╔"}, {\cf22 "═"}, {\cf22 "╤"}, {\cf22 "╗"},          \\\par
     {\cf22 "║"}, {\cf22 "│"}, {\cf22 "║"},               \\\par
     {\cf22 "╟"}, {\cf22 "─"}, {\cf22 "┼"}, {\cf22 "╢"},          \\\par
     {\cf22 "╚"}, {\cf22 "═"}, {\cf22 "╧"}, {\cf22 "╝"},          \\\par
     {\cf22 "├"}, {\cf22 "┬"}, {\cf22 "┤"}, {\cf22 "┴"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "╔"}, {\cf22 "═"}, {\cf22 "╤"}, {\cf22 "╗"},           \\\par
    {\cf22 "║"}, {\cf22 "│"}, {\cf22 "║"},                \\\par
    {\cf22 "╠"}, {\cf22 "═"}, {\cf22 "╪"}, {\cf22 "╣"},           \\\par
    {\cf22 "╚"}, {\cf22 "═"}, {\cf22 "╧"}, {\cf22 "╝"},           \\\par
    {\cf22 "├"}, {\cf22 "╤"}, {\cf22 "┤"}, {\cf22 "╧"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "╠"}, {\cf22 "═"}, {\cf22 "╪"}, {\cf22 "╣"},           \\\par
    {\cf22 "╤"}, {\cf22 "╧"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v DOUBLE_STYLE\:fort.c}
{\xe \v fort.c\:DOUBLE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DOUBLE_STYLE}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{         \\\par
    {\cf20 /* border_chars */}          \\\par
    \{                           \\\par
     {\cf22 "╔"}, {\cf22 "═"}, {\cf22 "╦"}, {\cf22 "╗"},        \\\par
     {\cf22 "║"}, {\cf22 "║"}, {\cf22 "║"},             \\\par
     {\cf22 ""}, {\cf22 ""}, {\cf22 ""}, {\cf22 ""},            \\\par
     {\cf22 "╚"}, {\cf22 "═"}, {\cf22 "╩"}, {\cf22 "╝"},        \\\par
     {\cf22 "┣"}, {\cf22 "┻"}, {\cf22 "┣"}, {\cf22 "┳"},        \\\par
    \},                          \\\par
    {\cf20 /* header_border_chars */}   \\\par
    \{                           \\\par
    {\cf22 "╔"}, {\cf22 "═"}, {\cf22 "╦"}, {\cf22 "╗"},         \\\par
    {\cf22 "║"}, {\cf22 "║"}, {\cf22 "║"},              \\\par
    {\cf22 "╠"}, {\cf22 "═"}, {\cf22 "╬"}, {\cf22 "╣"},         \\\par
    {\cf22 "╚"}, {\cf22 "═"}, {\cf22 "╩"}, {\cf22 "╝"},         \\\par
    {\cf22 "┣"}, {\cf22 "╦"}, {\cf22 "┣"}, {\cf22 "╩"},         \\\par
    \},                          \\\par
    {\cf20 /* separator_chars */}       \\\par
    \{                           \\\par
    {\cf22 "╠"}, {\cf22 "═"}, {\cf22 "╬"}, {\cf22 "╣"},         \\\par
    {\cf22 "╦"}, {\cf22 "╩"},                   \\\par
    \},                          \\\par
\}\par
}
}
{\xe \v EMPTY2_STYLE\:fort.c}
{\xe \v fort.c\:EMPTY2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMPTY2_STYLE}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{            \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "},          \\\par
     {\cf22 " "}, {\cf22 " "}, {\cf22 " "},               \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},      \\\par
     {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "},          \\\par
     {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "},           \\\par
    {\cf22 " "}, {\cf22 " "}, {\cf22 " "},                \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "},           \\\par
    {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 " "}, {\cf22 " "}, {\cf22 " "}, {\cf22 " "},           \\\par
    {\cf22 " "}, {\cf22 " "},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v EMPTY_STYLE\:fort.c}
{\xe \v fort.c\:EMPTY_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EMPTY_STYLE}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{            \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},      \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},            \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},      \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},      \\\par
     {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},      \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},             \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 " "}, {\cf22 "\\0 "}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"},                   \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v F_CALLOC\:fort.c}
{\xe \v fort.c\:F_CALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_CALLOC\~ {\b fort_calloc}}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v F_CREATE\:fort.c}
{\xe \v fort.c\:F_CREATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_CREATE( type)\~ ((type *){\b F_CALLOC}(sizeof(type), 1))}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v F_FREE\:fort.c}
{\xe \v fort.c\:F_FREE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_FREE\~ {\b fort_free}}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v F_MALLOC\:fort.c}
{\xe \v fort.c\:F_MALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_MALLOC\~ {\b fort_malloc}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v F_REALLOC\:fort.c}
{\xe \v fort.c\:F_REALLOC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_REALLOC\~ {\b fort_realloc}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v F_STRDUP\:fort.c}
{\xe \v fort.c\:F_STRDUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_STRDUP\~ {\b fort_strdup}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v F_UTF8DUP\:fort.c}
{\xe \v fort.c\:F_UTF8DUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_UTF8DUP\~ {\b utf8dup}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v F_WCSDUP\:fort.c}
{\xe \v fort.c\:F_WCSDUP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define F_WCSDUP\~ {\b fort_wcsdup}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_COL_SEPARATOR_LENGTH\:fort.c}
{\xe \v fort.c\:FORT_COL_SEPARATOR_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FORT_COL_SEPARATOR_LENGTH\~ 1}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_DEFAULT_COL_SEPARATOR\:fort.c}
{\xe \v fort.c\:FORT_DEFAULT_COL_SEPARATOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FORT_DEFAULT_COL_SEPARATOR\~ '|'}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_IMPL_H\:fort.c}
{\xe \v fort.c\:FORT_IMPL_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FORT_IMPL_H}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_UNUSED\:fort.c}
{\xe \v fort.c\:FORT_UNUSED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FORT_UNUSED\~ __attribute__((unused))}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FRAME_STYLE\:fort.c}
{\xe \v fort.c\:FRAME_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FRAME_STYLE}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{             \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "▛"}, {\cf22 "▀"}, {\cf22 "▀"}, {\cf22 "▜"},          \\\par
     {\cf22 "▌"}, {\cf22 "┃"}, {\cf22 "▐"},               \\\par
     {\cf22 ""}, {\cf22 ""}, {\cf22 ""}, {\cf22 ""},              \\\par
     {\cf22 "▙"}, {\cf22 "▄"}, {\cf22 "▄"}, {\cf22 "▟"},          \\\par
     {\cf22 "┣"}, {\cf22 "━"}, {\cf22 "┣"}, {\cf22 "━"}           \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "▛"}, {\cf22 "▀"}, {\cf22 "▀"}, {\cf22 "▜"},           \\\par
    {\cf22 "▌"}, {\cf22 "┃"}, {\cf22 "▐"},                \\\par
    {\cf22 "▌"}, {\cf22 "━"}, {\cf22 "╋"}, {\cf22 "▐"},           \\\par
    {\cf22 "▙"}, {\cf22 "▄"}, {\cf22 "▄"}, {\cf22 "▟"},           \\\par
    {\cf22 "┣"}, {\cf22 "━"}, {\cf22 "┣"}, {\cf22 "━"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "▌"}, {\cf22 "━"}, {\cf22 "╋"}, {\cf22 "▐"},           \\\par
    {\cf22 "╋"}, {\cf22 "╋"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v FT_AMALGAMED_SOURCE\:fort.c}
{\xe \v fort.c\:FT_AMALGAMED_SOURCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_AMALGAMED_SOURCE\~ /* Macros to make internal libfort functions static */}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_CHECK\:fort.c}
{\xe \v fort.c\:FT_CHECK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_CHECK( statement)}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     {\cf19 do} \{ \\\par
        tmp = statement; \\\par
        if (tmp < 0) \{\\\par
            PRINT_DEBUG_INFO \\\par
            goto clear; \\\par
        \} \\\par
    \} {\cf19 while}(0)\par
}
}
{\xe \v FT_INTERNAL\:fort.c}
{\xe \v fort.c\:FT_INTERNAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_INTERNAL\~ static}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_NEWLINE\:fort.c}
{\xe \v fort.c\:FT_NEWLINE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_NEWLINE\~ "\\n"}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_PRINTF\:fort.c}
{\xe \v fort.c\:FT_PRINTF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_PRINTF\~ ft_printf_impl}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_PRINTF_LN\:fort.c}
{\xe \v fort.c\:FT_PRINTF_LN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_PRINTF_LN\~ ft_printf_ln_impl}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_RESET_COLOR\:fort.c}
{\xe \v fort.c\:FT_RESET_COLOR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_RESET_COLOR\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_SPACE\:fort.c}
{\xe \v fort.c\:FT_SPACE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_SPACE\~ " "}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_STR_2_CAT\:fort.c}
{\xe \v fort.c\:FT_STR_2_CAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_STR_2_CAT( arg1,  arg2)\~     {\b FT_STR_2_CAT_}(arg1, arg2)}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_STR_2_CAT_\:fort.c}
{\xe \v fort.c\:FT_STR_2_CAT_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FT_STR_2_CAT_( arg1,  arg2)\~     arg1##arg2}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v H_BOR_CHARS\:fort.c}
{\xe \v fort.c\:H_BOR_CHARS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define H_BOR_CHARS\~ properties->border_style.header_border_chars}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v INVALID_VEC_INDEX\:fort.c}
{\xe \v fort.c\:INVALID_VEC_INDEX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define INVALID_VEC_INDEX\~ ((size_t) -1)}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MAX\:fort.c}
{\xe \v fort.c\:MAX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MAX( a,  b)\~ ((a) > (b) ? (a) : (b))}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v MIN\:fort.c}
{\xe \v fort.c\:MIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MIN( a,  b)\~ ((a) < (b) ? (a) : (b))}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v NICE_STYLE\:fort.c}
{\xe \v fort.c\:NICE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NICE_STYLE}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{             \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "╔"}, {\cf22 "═"}, {\cf22 "╦"}, {\cf22 "╗"},          \\\par
     {\cf22 "║"}, {\cf22 "║"}, {\cf22 "║"},               \\\par
     {\cf22 ""}, {\cf22 ""}, {\cf22 ""}, {\cf22 ""},              \\\par
     {\cf22 "╚"}, {\cf22 "═"}, {\cf22 "╩"}, {\cf22 "╝"},          \\\par
     {\cf22 "┣"}, {\cf22 "┻"}, {\cf22 "┣"}, {\cf22 "┳"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "╔"}, {\cf22 "═"}, {\cf22 "╦"}, {\cf22 "╗"},           \\\par
    {\cf22 "║"}, {\cf22 "║"}, {\cf22 "║"},                \\\par
    {\cf22 "╠"}, {\cf22 "═"}, {\cf22 "╬"}, {\cf22 "╣"},           \\\par
    {\cf22 "╚"}, {\cf22 "═"}, {\cf22 "╩"}, {\cf22 "╝"},           \\\par
    {\cf22 "┣"}, {\cf22 "╦"}, {\cf22 "┣"}, {\cf22 "╩"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "╟"}, {\cf22 "─"}, {\cf22 "╫"}, {\cf22 "╢"},           \\\par
    {\cf22 "╥"}, {\cf22 "╨"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v PLAIN_STYLE\:fort.c}
{\xe \v fort.c\:PLAIN_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PLAIN_STYLE}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{            \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 " "}, {\cf22 "\\0"},              \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 "-"}, {\cf22 "-"}, {\cf22 "\\0"},         \\\par
    {\cf22 "\\0"}, {\cf22 " "}, {\cf22 "\\0"},              \\\par
    {\cf22 "\\0"}, {\cf22 "-"}, {\cf22 "-"}, {\cf22 "\\0"},         \\\par
    {\cf22 "\\0"}, {\cf22 "-"}, {\cf22 "-"}, {\cf22 "\\0"},         \\\par
    {\cf22 " "}, {\cf22 "-"}, {\cf22 " "}, {\cf22 "-"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 "-"}, {\cf22 "-"}, {\cf22 "\\0"},         \\\par
    {\cf22 "-"}, {\cf22 "-"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v PRINT_DEBUG_INFO\:fort.c}
{\xe \v fort.c\:PRINT_DEBUG_INFO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PRINT_DEBUG_INFO}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PROP_IS_SET\:fort.c}
{\xe \v fort.c\:PROP_IS_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROP_IS_SET( ft_props,  property)\~ ((ft_props) & (property))}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PROP_SET\:fort.c}
{\xe \v fort.c\:PROP_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROP_SET( ft_props,  property)\~ ((ft_props) |=(property))}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PROP_UNSET\:fort.c}
{\xe \v fort.c\:PROP_UNSET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROP_UNSET( ft_props,  property)\~ ((ft_props) &= ~((uint32_t)(property)))}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v PROPERTIES_H\:fort.c}
{\xe \v fort.c\:PROPERTIES_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define PROPERTIES_H}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v RIGHT\:fort.c}
{\xe \v fort.c\:RIGHT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RIGHT\~ (padding_right + extra_right)}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ROW_H\:fort.c}
{\xe \v fort.c\:ROW_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ROW_H}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SEP_CHARS\:fort.c}
{\xe \v fort.c\:SEP_CHARS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SEP_CHARS\~ properties->border_style.separator_chars}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SHEREDOM_UTF8_H_INCLUDED\:fort.c}
{\xe \v fort.c\:SHEREDOM_UTF8_H_INCLUDED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SHEREDOM_UTF8_H_INCLUDED}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v SIMPLE_STYLE\:fort.c}
{\xe \v fort.c\:SIMPLE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SIMPLE_STYLE}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{           \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 " "}, {\cf22 "\\0"},              \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"}, {\cf22 "\\0"},       \\\par
    {\cf22 "\\0"}, {\cf22 " "}, {\cf22 "\\0"},              \\\par
    {\cf22 "\\0"}, {\cf22 "-"}, {\cf22 " "}, {\cf22 "\\0"},         \\\par
    {\cf22 "\\0"}, {\cf22 " "}, {\cf22 " "}, {\cf22 "\\0"},         \\\par
    {\cf22 " "}, {\cf22 "-"}, {\cf22 " "}, {\cf22 "-"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "\\0"}, {\cf22 "-"}, {\cf22 " "}, {\cf22 "\\0"},         \\\par
    {\cf22 " "}, {\cf22 " "},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v SOLID_ROUND_STYLE\:fort.c}
{\xe \v fort.c\:SOLID_ROUND_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SOLID_ROUND_STYLE}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{      \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "╭"}, {\cf22 "─"}, {\cf22 "┬"}, {\cf22 "╮"},          \\\par
     {\cf22 "│"}, {\cf22 "│"}, {\cf22 "│"},               \\\par
     {\cf22 ""}, {\cf22 ""}, {\cf22 ""}, {\cf22 ""},              \\\par
     {\cf22 "╰"}, {\cf22 "─"}, {\cf22 "┴"}, {\cf22 "╯"},          \\\par
     {\cf22 "│"}, {\cf22 "─"}, {\cf22 "│"}, {\cf22 "─"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "╭"}, {\cf22 "─"}, {\cf22 "┬"}, {\cf22 "╮"},           \\\par
    {\cf22 "│"}, {\cf22 "│"}, {\cf22 "│"},                \\\par
    {\cf22 "├"}, {\cf22 "─"}, {\cf22 "┼"}, {\cf22 "┤"},           \\\par
    {\cf22 "╰"}, {\cf22 "─"}, {\cf22 "┴"}, {\cf22 "╯"},           \\\par
    {\cf22 "┼"}, {\cf22 "┬"}, {\cf22 "┼"}, {\cf22 "┴"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "├"}, {\cf22 "─"}, {\cf22 "┼"}, {\cf22 "┤"},           \\\par
    {\cf22 "┬"}, {\cf22 "┴"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v SOLID_STYLE\:fort.c}
{\xe \v fort.c\:SOLID_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SOLID_STYLE}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid     \{            \\\par
    {\cf20 /* border_chars */}            \\\par
    \{                             \\\par
     {\cf22 "┌"}, {\cf22 "─"}, {\cf22 "┬"}, {\cf22 "┐"},          \\\par
     {\cf22 "│"}, {\cf22 "│"}, {\cf22 "│"},               \\\par
     {\cf22 ""}, {\cf22 ""}, {\cf22 ""}, {\cf22 ""},              \\\par
     {\cf22 "└"}, {\cf22 "─"}, {\cf22 "┴"}, {\cf22 "┘"},          \\\par
     {\cf22 "│"}, {\cf22 "─"}, {\cf22 "│"}, {\cf22 "─"},          \\\par
    \},                            \\\par
    {\cf20 /* header_border_chars */}     \\\par
    \{                             \\\par
    {\cf22 "┌"}, {\cf22 "─"}, {\cf22 "┬"}, {\cf22 "┐"},           \\\par
    {\cf22 "│"}, {\cf22 "│"}, {\cf22 "│"},                \\\par
    {\cf22 "├"}, {\cf22 "─"}, {\cf22 "┼"}, {\cf22 "┤"},           \\\par
    {\cf22 "└"}, {\cf22 "─"}, {\cf22 "┴"}, {\cf22 "┘"},           \\\par
    {\cf22 "┼"}, {\cf22 "┬"}, {\cf22 "┼"}, {\cf22 "┴"},           \\\par
    \},                            \\\par
    {\cf20 /* separator_chars */}         \\\par
    \{                             \\\par
    {\cf22 "├"}, {\cf22 "─"}, {\cf22 "┼"}, {\cf22 "┤"},           \\\par
    {\cf22 "┬"}, {\cf22 "┴"},                     \\\par
    \},                            \\\par
\}\par
}
}
{\xe \v STRCHR\:fort.c}
{\xe \v fort.c\:STRCHR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRCHR\~ strchr}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STRCHR\:fort.c}
{\xe \v fort.c\:STRCHR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRCHR\~ wcschr}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v STRING_BUFFER_H\:fort.c}
{\xe \v fort.c\:STRING_BUFFER_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define STRING_BUFFER_H}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TABLE_H\:fort.c}
{\xe \v fort.c\:TABLE_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TABLE_H}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TEXT_STYLE_TAG_MAX_SIZE\:fort.c}
{\xe \v fort.c\:TEXT_STYLE_TAG_MAX_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TEXT_STYLE_TAG_MAX_SIZE\~ (64 * 2)}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v TOTAL_WRITTEN\:fort.c}
{\xe \v fort.c\:TOTAL_WRITTEN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TOTAL_WRITTEN\~ (written + invisible_written)}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UNIQUE_NAME\:fort.c}
{\xe \v fort.c\:UNIQUE_NAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNIQUE_NAME( prefix)\~     {\b UNIQUE_NAME_}(prefix)}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UNIQUE_NAME_\:fort.c}
{\xe \v fort.c\:UNIQUE_NAME_}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNIQUE_NAME_( prefix)\~     {\b FT_STR_2_CAT}(prefix,__COUNTER__)}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v UNIVERSAL_RESET_TAG\:fort.c}
{\xe \v fort.c\:UNIVERSAL_RESET_TAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define UNIVERSAL_RESET_TAG\~ "\\033[0m"}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_nonnull\:fort.c}
{\xe \v fort.c\:utf8_nonnull}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define utf8_nonnull}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_null\:fort.c}
{\xe \v fort.c\:utf8_null}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define utf8_null\~ 0}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_pure\:fort.c}
{\xe \v fort.c\:utf8_pure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define utf8_pure}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_restrict\:fort.c}
{\xe \v fort.c\:utf8_restrict}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define utf8_restrict}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_weak\:fort.c}
{\xe \v fort.c\:utf8_weak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define utf8_weak\~ inline}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VECTOR_AT\:fort.c}
{\xe \v fort.c\:VECTOR_AT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VECTOR_AT( vector,  pos,  data_type)\~     *(data_type *){\b vector_at}((vector), (pos))}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VECTOR_AT_C\:fort.c}
{\xe \v fort.c\:VECTOR_AT_C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VECTOR_AT_C( vector,  pos,  const_data_type)\~     *(const_data_type *){\b vector_at_c}((vector), (pos))}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VECTOR_H\:fort.c}
{\xe \v fort.c\:VECTOR_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define VECTOR_H}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WCS_SIZE\:fort.c}
{\xe \v fort.c\:WCS_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WCS_SIZE\~ 64}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WCWIDTH_H\:fort.c}
{\xe \v fort.c\:WCWIDTH_H}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WCWIDTH_H}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WRITE_CELL_STYLE_TAG\:fort.c}
{\xe \v fort.c\:WRITE_CELL_STYLE_TAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WRITE_CELL_STYLE_TAG\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, cell_style_tag))}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WRITE_CONTENT_STYLE_TAG\:fort.c}
{\xe \v fort.c\:WRITE_CONTENT_STYLE_TAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WRITE_CONTENT_STYLE_TAG\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, content_style_tag))}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WRITE_RESET_CELL_STYLE_TAG\:fort.c}
{\xe \v fort.c\:WRITE_RESET_CELL_STYLE_TAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WRITE_RESET_CELL_STYLE_TAG\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, reset_cell_style_tag))}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v WRITE_RESET_CONTENT_STYLE_TAG\:fort.c}
{\xe \v fort.c\:WRITE_RESET_CONTENT_STYLE_TAG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WRITE_RESET_CONTENT_STYLE_TAG\~ {\b CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN}({\b print_n_strings}(cntx, 1, reset_content_style_tag))}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des définitions de type\par
\pard\plain 
{\xe \v f_cell_prop_container_t\:fort.c}
{\xe \v fort.c\:f_cell_prop_container_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b f_vector_t} {\b f_cell_prop_container_t}}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_cell_props_t\:fort.c}
{\xe \v fort.c\:f_cell_props_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_cell_props} {\b f_cell_props_t}}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_cell_t\:fort.c}
{\xe \v fort.c\:f_cell_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_cell} {\b f_cell_t}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_context_t\:fort.c}
{\xe \v fort.c\:f_context_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_context} {\b f_context_t}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_conv_context_t\:fort.c}
{\xe \v fort.c\:f_conv_context_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_conv_context} {\b f_conv_context_t}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_row_t\:fort.c}
{\xe \v fort.c\:f_row_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_row} {\b f_row_t}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_separator_t\:fort.c}
{\xe \v fort.c\:f_separator_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_separator} {\b f_separator_t}}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_status\:fort.c}
{\xe \v fort.c\:f_status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int {\b f_status}}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_string_buffer_t\:fort.c}
{\xe \v fort.c\:f_string_buffer_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_string_buffer} {\b f_string_buffer_t}}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_string_view_t\:fort.c}
{\xe \v fort.c\:f_string_view_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_string_view} {\b f_string_view_t}}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_table_properties_t\:fort.c}
{\xe \v fort.c\:f_table_properties_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_table_properties} {\b f_table_properties_t}}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v f_vector_t\:fort.c}
{\xe \v fort.c\:f_vector_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b f_vector} {\b f_vector_t}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fort_entire_table_properties_t\:fort.c}
{\xe \v fort.c\:fort_entire_table_properties_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef struct {\b fort_entire_table_properties} {\b fort_entire_table_properties_t}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_int32_t\:fort.c}
{\xe \v fort.c\:utf8_int32_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef int32_t {\b utf8_int32_t}}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation du type de l'énumération\par
\pard\plain 
{\xe \v f_bool\:fort.c}
{\xe \v fort.c\:f_bool}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_bool}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v F_FALSE\:fort.c}
{\xe \v fort.c\:F_FALSE}
{\qr F_FALSE{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALN}
\cell }{\cell }{\row }
{\xe \v F_TRUE\:fort.c}
{\xe \v fort.c\:F_TRUE}
{\qr F_TRUE{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALO}
\cell }{\cell }{\row }
}
}
{\xe \v f_border_item_pos\:fort.c}
{\xe \v fort.c\:f_border_item_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_border_item_pos}}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TL_bip\:fort.c}
{\xe \v fort.c\:TL_bip}
{\qr TL_bip{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALQ}
\cell }{\cell }{\row }
{\xe \v TT_bip\:fort.c}
{\xe \v fort.c\:TT_bip}
{\qr TT_bip{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALR}
\cell }{\cell }{\row }
{\xe \v TV_bip\:fort.c}
{\xe \v fort.c\:TV_bip}
{\qr TV_bip{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALS}
\cell }{\cell }{\row }
{\xe \v TR_bip\:fort.c}
{\xe \v fort.c\:TR_bip}
{\qr TR_bip{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALT}
\cell }{\cell }{\row }
{\xe \v LL_bip\:fort.c}
{\xe \v fort.c\:LL_bip}
{\qr LL_bip{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALU}
\cell }{\cell }{\row }
{\xe \v IV_bip\:fort.c}
{\xe \v fort.c\:IV_bip}
{\qr IV_bip{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALV}
\cell }{\cell }{\row }
{\xe \v RR_bip\:fort.c}
{\xe \v fort.c\:RR_bip}
{\qr RR_bip{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALW}
\cell }{\cell }{\row }
{\xe \v LH_bip\:fort.c}
{\xe \v fort.c\:LH_bip}
{\qr LH_bip{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALX}
\cell }{\cell }{\row }
{\xe \v IH_bip\:fort.c}
{\xe \v fort.c\:IH_bip}
{\qr IH_bip{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALY}
\cell }{\cell }{\row }
{\xe \v II_bip\:fort.c}
{\xe \v fort.c\:II_bip}
{\qr II_bip{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALZ}
\cell }{\cell }{\row }
{\xe \v RH_bip\:fort.c}
{\xe \v fort.c\:RH_bip}
{\qr RH_bip{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAAMA}
\cell }{\cell }{\row }
{\xe \v BL_bip\:fort.c}
{\xe \v fort.c\:BL_bip}
{\qr BL_bip{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMB}
\cell }{\cell }{\row }
{\xe \v BB_bip\:fort.c}
{\xe \v fort.c\:BB_bip}
{\qr BB_bip{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMC}
\cell }{\cell }{\row }
{\xe \v BV_bip\:fort.c}
{\xe \v fort.c\:BV_bip}
{\qr BV_bip{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMD}
\cell }{\cell }{\row }
{\xe \v BR_bip\:fort.c}
{\xe \v fort.c\:BR_bip}
{\qr BR_bip{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAME}
\cell }{\cell }{\row }
{\xe \v LI_bip\:fort.c}
{\xe \v fort.c\:LI_bip}
{\qr LI_bip{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAMF}
\cell }{\cell }{\row }
{\xe \v TI_bip\:fort.c}
{\xe \v fort.c\:TI_bip}
{\qr TI_bip{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMG}
\cell }{\cell }{\row }
{\xe \v RI_bip\:fort.c}
{\xe \v fort.c\:RI_bip}
{\qr RI_bip{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMH}
\cell }{\cell }{\row }
{\xe \v BI_bip\:fort.c}
{\xe \v fort.c\:BI_bip}
{\qr BI_bip{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMI}
\cell }{\cell }{\row }
{\xe \v BORDER_ITEM_POS_SIZE\:fort.c}
{\xe \v fort.c\:BORDER_ITEM_POS_SIZE}
{\qr BORDER_ITEM_POS_SIZE{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMJ}
\cell }{\cell }{\row }
}
}
{\xe \v f_cell_type\:fort.c}
{\xe \v fort.c\:f_cell_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_cell_type}}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v COMMON_CELL\:fort.c}
{\xe \v fort.c\:COMMON_CELL}
{\qr COMMON_CELL{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAML}
\cell }{\cell }{\row }
{\xe \v GROUP_MASTER_CELL\:fort.c}
{\xe \v fort.c\:GROUP_MASTER_CELL}
{\qr GROUP_MASTER_CELL{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAMM}
\cell }{\cell }{\row }
{\xe \v GROUP_SLAVE_CELL\:fort.c}
{\xe \v fort.c\:GROUP_SLAVE_CELL}
{\qr GROUP_SLAVE_CELL{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMN}
\cell }{\cell }{\row }
}
}
{\xe \v f_geometry_type\:fort.c}
{\xe \v fort.c\:f_geometry_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_geometry_type}}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v VISIBLE_GEOMETRY\:fort.c}
{\xe \v fort.c\:VISIBLE_GEOMETRY}
{\qr VISIBLE_GEOMETRY{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMP}
\cell }{\cell }{\row }
{\xe \v INTERN_REPR_GEOMETRY\:fort.c}
{\xe \v fort.c\:INTERN_REPR_GEOMETRY}
{\qr INTERN_REPR_GEOMETRY{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMQ}
\cell }{\cell }{\row }
}
}
{\xe \v f_get_policy\:fort.c}
{\xe \v fort.c\:f_get_policy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_get_policy}}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CREATE_ON_NULL\:fort.c}
{\xe \v fort.c\:CREATE_ON_NULL}
{\qr CREATE_ON_NULL{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMS}
\cell }{\cell }{\row }
{\xe \v DONT_CREATE_ON_NULL\:fort.c}
{\xe \v fort.c\:DONT_CREATE_ON_NULL}
{\qr DONT_CREATE_ON_NULL{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMT}
\cell }{\cell }{\row }
}
}
{\xe \v f_hor_separator_pos\:fort.c}
{\xe \v fort.c\:f_hor_separator_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_hor_separator_pos}}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v TOP_SEPARATOR\:fort.c}
{\xe \v fort.c\:TOP_SEPARATOR}
{\qr TOP_SEPARATOR{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMV}
\cell }{\cell }{\row }
{\xe \v INSIDE_SEPARATOR\:fort.c}
{\xe \v fort.c\:INSIDE_SEPARATOR}
{\qr INSIDE_SEPARATOR{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMW}
\cell }{\cell }{\row }
{\xe \v BOTTOM_SEPARATOR\:fort.c}
{\xe \v fort.c\:BOTTOM_SEPARATOR}
{\qr BOTTOM_SEPARATOR{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMX}
\cell }{\cell }{\row }
}
}
{\xe \v f_separator_item_pos\:fort.c}
{\xe \v fort.c\:f_separator_item_pos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_separator_item_pos}}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v LH_sip\:fort.c}
{\xe \v fort.c\:LH_sip}
{\qr LH_sip{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMZ}
\cell }{\cell }{\row }
{\xe \v IH_sip\:fort.c}
{\xe \v fort.c\:IH_sip}
{\qr IH_sip{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAANA}
\cell }{\cell }{\row }
{\xe \v II_sip\:fort.c}
{\xe \v fort.c\:II_sip}
{\qr II_sip{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANB}
\cell }{\cell }{\row }
{\xe \v RH_sip\:fort.c}
{\xe \v fort.c\:RH_sip}
{\qr RH_sip{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANC}
\cell }{\cell }{\row }
{\xe \v TI_sip\:fort.c}
{\xe \v fort.c\:TI_sip}
{\qr TI_sip{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAAND}
\cell }{\cell }{\row }
{\xe \v BI_sip\:fort.c}
{\xe \v fort.c\:BI_sip}
{\qr BI_sip{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAANE}
\cell }{\cell }{\row }
{\xe \v SEPARATOR_ITEM_POS_SIZE\:fort.c}
{\xe \v fort.c\:SEPARATOR_ITEM_POS_SIZE}
{\qr SEPARATOR_ITEM_POS_SIZE{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANF}
\cell }{\cell }{\row }
}
}
{\xe \v f_string_type\:fort.c}
{\xe \v fort.c\:f_string_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b f_string_type}}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Valeurs énumérées:\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v CHAR_BUF\:fort.c}
{\xe \v fort.c\:CHAR_BUF}
{\qr CHAR_BUF{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANH}
\cell }{\cell }{\row }
{\xe \v W_CHAR_BUF\:fort.c}
{\xe \v fort.c\:W_CHAR_BUF}
{\qr W_CHAR_BUF{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANI}
\cell }{\cell }{\row }
{\xe \v UTF8_BUF\:fort.c}
{\xe \v fort.c\:UTF8_BUF}
{\qr UTF8_BUF{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANJ}
\cell }{\cell }{\row }
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des fonctions\par
\pard\plain 
{\xe \v buffer_check_align\:fort.c}
{\xe \v fort.c\:buffer_check_align}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int buffer_check_align ({\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v buffer_get_data\:fort.c}
{\xe \v fort.c\:buffer_get_data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void * buffer_get_data ({\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v buffer_printf\:fort.c}
{\xe \v fort.c\:buffer_printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int buffer_printf ({\b f_string_buffer_t} *  {\i buffer}, size_t  {\i buffer_row}, {\b f_conv_context_t} *  {\i cntx}, size_t  {\i cod_width}, const char *  {\i content_style_tag}, const char *  {\i reset_content_style_tag})}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v buffer_set_u8strwid_func\:fort.c}
{\xe \v fort.c\:buffer_set_u8strwid_func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void buffer_set_u8strwid_func (int(*)(const void *beg, const void *end, size_t *width)  {\i u8strwid})}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v buffer_text_visible_height\:fort.c}
{\xe \v fort.c\:buffer_text_visible_height}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t buffer_text_visible_height (const {\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v buffer_text_visible_width\:fort.c}
{\xe \v fort.c\:buffer_text_visible_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t buffer_text_visible_width (const {\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cell_get_string_buffer\:fort.c}
{\xe \v fort.c\:cell_get_string_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_string_buffer_t} * cell_get_string_buffer ({\b f_cell_t} *  {\i cell})}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cell_invis_codes_width\:fort.c}
{\xe \v fort.c\:cell_invis_codes_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t cell_invis_codes_width (const {\b f_cell_t} *  {\i cell}, const {\b f_context_t} *  {\i context})}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cell_printf\:fort.c}
{\xe \v fort.c\:cell_printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int cell_printf ({\b f_cell_t} *  {\i cell}, size_t  {\i row}, {\b f_conv_context_t} *  {\i cntx}, size_t  {\i cod_width})}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cell_vis_width\:fort.c}
{\xe \v fort.c\:cell_vis_width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t cell_vis_width (const {\b f_cell_t} *  {\i cell}, const {\b f_context_t} *  {\i context})}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v cget_cell_prop\:fort.c}
{\xe \v fort.c\:cget_cell_prop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} const {\b f_cell_props_t} * cget_cell_prop (const {\b f_cell_prop_container_t} *  {\i cont}, size_t  {\i row}, size_t  {\i col})}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v columns_in_row\:fort.c}
{\xe \v fort.c\:columns_in_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t columns_in_row (const {\b f_row_t} *  {\i row})}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v copy_cell\:fort.c}
{\xe \v fort.c\:copy_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_cell_t} * copy_cell ({\b f_cell_t} *  {\i cell})}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v copy_row\:fort.c}
{\xe \v fort.c\:copy_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * copy_row ({\b f_row_t} *  {\i row})}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v copy_separator\:fort.c}
{\xe \v fort.c\:copy_separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_separator_t} * copy_separator ({\b f_separator_t} *  {\i sep})}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v copy_string_buffer\:fort.c}
{\xe \v fort.c\:copy_string_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_string_buffer_t} * copy_string_buffer (const {\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v copy_table_properties\:fort.c}
{\xe \v fort.c\:copy_table_properties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_table_properties_t} * copy_table_properties (const {\b f_table_properties_t} *  {\i property})}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_cell\:fort.c}
{\xe \v fort.c\:create_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_cell_t} * create_cell (void )}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_cell_in_position\:fort.c}
{\xe \v fort.c\:create_cell_in_position}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_cell_t} * create_cell_in_position ({\b f_row_t} *  {\i row}, size_t  {\i col})}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_cell_prop_container\:fort.c}
{\xe \v fort.c\:create_cell_prop_container}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_cell_prop_container_t} * create_cell_prop_container (void )}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_row\:fort.c}
{\xe \v fort.c\:create_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * create_row (void )}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_row_from_buffer\:fort.c}
{\xe \v fort.c\:create_row_from_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t}* create_row_from_buffer (const {\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_row_from_fmt_string\:fort.c}
{\xe \v fort.c\:create_row_from_fmt_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * create_row_from_fmt_string (const struct {\b f_string_view} *  {\i fmt}, va_list *  {\i va_args})}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_row_from_string\:fort.c}
{\xe \v fort.c\:create_row_from_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * create_row_from_string (const char *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_row_from_wstring\:fort.c}
{\xe \v fort.c\:create_row_from_wstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * create_row_from_wstring (const wchar_t *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_separator\:fort.c}
{\xe \v fort.c\:create_separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_separator_t} * create_separator (int  {\i enabled})}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_string_buffer\:fort.c}
{\xe \v fort.c\:create_string_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_string_buffer_t} * create_string_buffer (size_t  {\i number_of_chars}, enum {\b f_string_type}  {\i type})}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_table_properties\:fort.c}
{\xe \v fort.c\:create_table_properties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_table_properties_t} * create_table_properties (void )}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v create_vector\:fort.c}
{\xe \v fort.c\:create_vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_vector_t} * create_vector (size_t  {\i item_size}, size_t  {\i capacity})}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destroy_cell\:fort.c}
{\xe \v fort.c\:destroy_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void destroy_cell ({\b f_cell_t} *  {\i cell})}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destroy_cell_prop_container\:fort.c}
{\xe \v fort.c\:destroy_cell_prop_container}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void destroy_cell_prop_container ({\b f_cell_prop_container_t} *  {\i cont})}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destroy_row\:fort.c}
{\xe \v fort.c\:destroy_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void destroy_row ({\b f_row_t} *  {\i row})}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destroy_separator\:fort.c}
{\xe \v fort.c\:destroy_separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void destroy_separator ({\b f_separator_t} *  {\i sep})}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destroy_string_buffer\:fort.c}
{\xe \v fort.c\:destroy_string_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void destroy_string_buffer ({\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destroy_table_properties\:fort.c}
{\xe \v fort.c\:destroy_table_properties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void destroy_table_properties ({\b f_table_properties_t} *  {\i properties})}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v destroy_vector\:fort.c}
{\xe \v fort.c\:destroy_vector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void destroy_vector ({\b f_vector_t} *  {\i vector})}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_buffer_from_string\:fort.c}
{\xe \v fort.c\:fill_buffer_from_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} fill_buffer_from_string ({\b f_string_buffer_t} *  {\i buffer}, const char *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_buffer_from_u8string\:fort.c}
{\xe \v fort.c\:fill_buffer_from_u8string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} fill_buffer_from_u8string ({\b f_string_buffer_t} *  {\i buffer}, const void *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_buffer_from_wstring\:fort.c}
{\xe \v fort.c\:fill_buffer_from_wstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} fill_buffer_from_wstring ({\b f_string_buffer_t} *  {\i buffer}, const wchar_t *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_cell_from_buffer\:fort.c}
{\xe \v fort.c\:fill_cell_from_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} fill_cell_from_buffer ({\b f_cell_t} *  {\i cell}, const {\b f_string_buffer_t} *  {\i buf})}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_cell_from_string\:fort.c}
{\xe \v fort.c\:fill_cell_from_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} fill_cell_from_string ({\b f_cell_t} *  {\i cell}, const char *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fill_cell_from_wstring\:fort.c}
{\xe \v fort.c\:fill_cell_from_wstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} fill_cell_from_wstring ({\b f_cell_t} *  {\i cell}, const wchar_t *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fort_strdup\:fort.c}
{\xe \v fort.c\:fort_strdup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} char * fort_strdup (const char *  {\i str})}}
\par
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAPA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fort_wcsdup\:fort.c}
{\xe \v fort.c\:fort_wcsdup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} wchar_t * fort_wcsdup (const wchar_t *  {\i str})}}
\par
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_add_separator\:fort.c}
{\xe \v fort.c\:ft_add_separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_add_separator ({\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Add separator after the current row.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Formatted table. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; separator was added.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_copy_table\:fort.c}
{\xe \v fort.c\:ft_copy_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ft_table_t}* ft_copy_table ({\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Copy formatted table.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table previousley created with ft_create_table. If table is a null pointer, the function returns null. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The pointer to the new allocated ft_table_t, on success. NULL on error. \par
}}}}
{\xe \v ft_create_table\:fort.c}
{\xe \v fort.c\:ft_create_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ft_table_t}* ft_create_table (void )}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Create formatted table.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
The pointer to the new allocated ft_table_t, on success. NULL on error. \par
}}}}
{\xe \v ft_cur_col\:fort.c}
{\xe \v fort.c\:ft_cur_col}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t ft_cur_col (const {\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get column number of the current cell.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Column number of the current cell. \par
}}}}
{\xe \v ft_cur_row\:fort.c}
{\xe \v fort.c\:ft_cur_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t ft_cur_row (const {\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get row number of the current cell.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Row number of the current cell. \par
}}}}
{\xe \v ft_destroy_table\:fort.c}
{\xe \v fort.c\:ft_destroy_table}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ft_destroy_table ({\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destroy formatted table.\par
Destroy formatted table and free all resources allocated during table creation and work with it.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table previousley created with ft_create_table. If table is a null pointer, the function does nothing. \cell }
{\row }
}
}}
{\xe \v ft_erase_range\:fort.c}
{\xe \v fort.c\:ft_erase_range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_erase_range ({\b ft_table_t} *  {\i table}, size_t  {\i top_left_row}, size_t  {\i top_left_col}, size_t  {\i bottom_right_row}, size_t  {\i bottom_right_col})}}
\par
{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erase range of cells.\par
Range of cells is determined by 2 points (top-left and bottom-right) (both ends are included).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i top_left_row} \cell }{Row number of the top left cell in the range. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i top_left_col} \cell }{Column number of the top left cell in the range. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bottom_right_row} \cell }{Row number of the bottom right cell in the range. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i bottom_right_col} \cell }{Column number of the bottom right cell in the range. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0 - Operation was successfully implemented\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_is_empty\:fort.c}
{\xe \v fort.c\:ft_is_empty}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_is_empty (const {\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Check if table is empty.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to the table. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
1 - table is empty 0 - some data has been inserted \par
}}}}
{\xe \v ft_ln\:fort.c}
{\xe \v fort.c\:ft_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_ln ({\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Move current position to the first cell of the next line(row).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; data were written\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error. \par}
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
This function can fail only in case FT_STRATEGY_INSERT adding strategy was set for the table. \par
}}}}
{\xe \v ft_nprint\:fort.c}
{\xe \v fort.c\:ft_nprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int ft_nprint ({\b f_conv_context_t} *  {\i cntx}, const char *  {\i str}, size_t  {\i strlen})}}
\par
{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_nu8print\:fort.c}
{\xe \v fort.c\:ft_nu8print}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int ft_nu8print ({\b f_conv_context_t} *  {\i cntx}, const void *  {\i beg}, const void *  {\i end})}}
\par
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_nwprint\:fort.c}
{\xe \v fort.c\:ft_nwprint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_nwprint ({\b f_conv_context_t} *  {\i cntx}, const wchar_t *  {\i str}, size_t  {\i strlen})}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_nwrite\:fort.c}
{\xe \v fort.c\:ft_nwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_nwrite ({\b ft_table_t} *  {\i table}, size_t  {\i count}, const char *  {\i cell_content},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write specified number of strings to the table.\par
Write specified number of strings to the same number of consecutive cells in the current row.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
In most cases it is more preferable to use MACRO {\b ft_write} instead of {\b ft_nwrite}, which is more safe ({\b ft_write} automatically counts the number of string arguments and at compile check that all passed arguments are strings).\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of strings to write. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cell_content} \cell }{First string to write. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ...} \cell }{Other strings to write. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; data were written\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_nwrite_ln\:fort.c}
{\xe \v fort.c\:ft_nwrite_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_nwrite_ln ({\b ft_table_t} *  {\i table}, size_t  {\i count}, const char *  {\i cell_content},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write specified number of strings to the table and go to the next line.\par
Write specified number of strings to the same number of consecutive cells in the current row and move current position to the first cell of the next line(row).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
In most cases it is more preferable to use MACRO {\b ft_write} instead of {\b ft_nwrite}, which is more safe ({\b ft_write} automatically counts the number of string arguments and at compile check that all passed arguments are strings).\par
}}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i count} \cell }{Number of strings to write. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cell_content} \cell }{First string to write. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i ...} \cell }{Other strings to write. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; data were written\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_nwwrite\:fort.c}
{\xe \v fort.c\:ft_nwwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_nwwrite ({\b ft_table_t} *  {\i table}, size_t  {\i n}, const wchar_t *  {\i cell_content},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_nwwrite_ln\:fort.c}
{\xe \v fort.c\:ft_nwwrite_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_nwwrite_ln ({\b ft_table_t} *  {\i table}, size_t  {\i n}, const wchar_t *  {\i cell_content},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_PRINTF\:fort.c}
{\xe \v fort.c\:FT_PRINTF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FT_PRINTF ({\b ft_table_t} *  {\i table}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_PRINTF_LN\:fort.c}
{\xe \v fort.c\:FT_PRINTF_LN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int FT_PRINTF_LN ({\b ft_table_t} *  {\i table}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_row_count\:fort.c}
{\xe \v fort.c\:ft_row_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t ft_row_count (const {\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Get number of rows in the table.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
Number of rows in the table. \par
}}}}
{\xe \v ft_row_erase_range\:fort.c}
{\xe \v fort.c\:ft_row_erase_range}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int ft_row_erase_range ({\b f_row_t} *  {\i row}, size_t  {\i left}, size_t  {\i right})}}
\par
{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_row_write\:fort.c}
{\xe \v fort.c\:ft_row_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_row_write ({\b ft_table_t} *  {\i table}, size_t  {\i cols}, const char *  {\i row_cells}[])}}
\par
{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write strings from the array to the table.\par
Write specified number of strings from the array to the same number of consecutive cells in the current row.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cols} \cell }{Number of elements in row_cells. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row_cells} \cell }{Array of strings to write. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; data were written\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_row_write_ln\:fort.c}
{\xe \v fort.c\:ft_row_write_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_row_write_ln ({\b ft_table_t} *  {\i table}, size_t  {\i cols}, const char *  {\i row_cells}[])}}
\par
{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write strings from the array to the table and go to the next line.\par
Write specified number of strings from the array to the same number of consecutive cells in the current row and move current position to the first cell of the next line(row).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cols} \cell }{Number of elements in row_cells. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row_cells} \cell }{Array of strings to write. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; data were written\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_row_wwrite\:fort.c}
{\xe \v fort.c\:ft_row_wwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_row_wwrite ({\b ft_table_t} *  {\i table}, size_t  {\i cols}, const wchar_t *  {\i cells}[])}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_row_wwrite_ln\:fort.c}
{\xe \v fort.c\:ft_row_wwrite_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_row_wwrite_ln ({\b ft_table_t} *  {\i table}, size_t  {\i cols}, const wchar_t *  {\i cells}[])}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_set_border_style\:fort.c}
{\xe \v fort.c\:ft_set_border_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_set_border_style ({\b ft_table_t} *  {\i table}, const struct {\b ft_border_style} *  {\i style})}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set border style for the table.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{A pointer to the ft_table_t structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{Pointer to border style. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; table border style was changed.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_set_cell_prop\:fort.c}
{\xe \v fort.c\:ft_set_cell_prop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_set_cell_prop ({\b ft_table_t} *  {\i table}, size_t  {\i row}, size_t  {\i col}, uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set property for the specified cell of the table.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{A pointer to the ft_table_t structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Cell row. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i col} \cell }{Cell column. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i property} \cell }{Cell property identifier. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Cell property value. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; cell property was changed.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_set_cell_span\:fort.c}
{\xe \v fort.c\:ft_set_cell_span}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_set_cell_span ({\b ft_table_t} *  {\i table}, size_t  {\i row}, size_t  {\i col}, size_t  {\i hor_span})}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set column span for the specified cell of the table.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{A pointer to the ft_table_t structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{Cell row. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i col} \cell }{Cell column. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i hor_span} \cell }{Column span. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; cell span was changed.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_set_cur_cell\:fort.c}
{\xe \v fort.c\:ft_set_cur_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ft_set_cur_cell ({\b ft_table_t} *  {\i table}, size_t  {\i row}, size_t  {\i col})}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set current cell position.\par
Current cell - cell that will be edited with all modifiing functions (ft_printf, ft_write ...).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i row} \cell }{New row number for the current cell. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i col} \cell }{New row number for the current cell. \cell }
{\row }
}
}}
{\xe \v ft_set_default_border_style\:fort.c}
{\xe \v fort.c\:ft_set_default_border_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_set_default_border_style (const struct {\b ft_border_style} *  {\i style})}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set default border style for all new formatted tables.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i style} \cell }{Pointer to border style. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; default border style was changed.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_set_default_cell_prop\:fort.c}
{\xe \v fort.c\:ft_set_default_cell_prop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_set_default_cell_prop (uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set default cell property for all new formatted tables.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i property} \cell }{Cell property identifier. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Cell property value. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; default cell property was changed.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_set_default_printf_field_separator\:fort.c}
{\xe \v fort.c\:ft_set_default_printf_field_separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ft_set_default_printf_field_separator (char  {\i separator})}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set field separator for {\b ft_printf}, {\b ft_printf_ln} (default separator is '|').\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i separator} \cell }{New separator. \cell }
{\row }
}
}}
{\xe \v ft_set_default_tbl_prop\:fort.c}
{\xe \v fort.c\:ft_set_default_tbl_prop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_set_default_tbl_prop (uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set default table property.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i property} \cell }{Table property identifier. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Table property value. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; default table property was changed.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_set_memory_funcs\:fort.c}
{\xe \v fort.c\:ft_set_memory_funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ft_set_memory_funcs (void *(*)(size_t size)  {\i f_malloc}, void(*)(void *ptr)  {\i f_free})}}
\par
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set functions for memory allocation and deallocation to be used instead of standard ones.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_malloc} \cell }{Pointer to a function for memory allocation that should be used instead of malloc. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i f_free} \cell }{Pointer to a function for memory deallocation that should be used instead of free. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Note\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
To return memory allocation/deallocation functions to their standard values set f_malloc and f_free to NULL. \par
}}}}
{\xe \v ft_set_tbl_prop\:fort.c}
{\xe \v fort.c\:ft_set_tbl_prop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_set_tbl_prop ({\b ft_table_t} *  {\i table}, uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set table property.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{A pointer to the ft_table_t structure. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i property} \cell }{Table property identifier. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i value} \cell }{Table property value. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; default table property was changed.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_set_u8strwid_func\:fort.c}
{\xe \v fort.c\:ft_set_u8strwid_func}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ft_set_u8strwid_func (int(*)(const void *beg, const void *end, size_t *width)  {\i u8strwid})}}
\par
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Set custom function to compute visible width of UTF-8 string.\par
libfort internally has a very simple logic to compute visible width of UTF-8 strings. It considers that each codepoint will occupy one position on the terminal in case of monowidth font (some east asians wide and fullwidth characters (see {\f2 http://www.unicode.org/reports/tr11/tr11-33.html}) will occupy 2 positions). This logic is very simple and covers wide range of cases. But obviously there a lot of cases when it is not sufficient. In such cases user should use some external libraries and provide an appropriate function to libfort.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i u8strwid} \cell }{User provided function to evaluate width of UTF-8 string ( beg - start of UTF-8 string, end - end of UTF-8 string (not included), width - pointer to the result). If function succeed it should return 0, otherwise some non- zero value. If function returns nonzero value libfort fallbacks to default internal algorithm. \cell }
{\row }
}
}}
{\xe \v ft_strerror\:fort.c}
{\xe \v fort.c\:ft_strerror}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* ft_strerror (int  {\i error_code})}}
\par
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Return string describing the {\f2 error_code} .\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i error_code} \cell }{Error code returned by the library. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
String describing the error. \par
}}}}
{\xe \v ft_table_write\:fort.c}
{\xe \v fort.c\:ft_table_write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_table_write ({\b ft_table_t} *  {\i table}, size_t  {\i rows}, size_t  {\i cols}, const char *  {\i table_cells}[])}}
\par
{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write strings from the 2D array to the table.\par
Write specified number of strings from the 2D array to the formatted table.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rows} \cell }{Number of rows in the 2D array. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cols} \cell }{Number of columns in the 2D array. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table_cells} \cell }{2D array of strings to write. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; data were written\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_table_write_ln\:fort.c}
{\xe \v fort.c\:ft_table_write_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_table_write_ln ({\b ft_table_t} *  {\i table}, size_t  {\i rows}, size_t  {\i cols}, const char *  {\i table_cells}[])}}
\par
{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Write strings from the 2D array to the table and go to the next line.\par
Write specified number of strings from the 2D array to the formatted table and move current position to the first cell of the next line(row).\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Pointer to formatted table. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i rows} \cell }{Number of rows in the 2D array. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i cols} \cell }{Number of columns in the 2D array. \cell }
{\row }
\trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table_cells} \cell }{2D array of strings to write. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
0: Success; data were written\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
(<0): In case of error \par}
}}}}
{\xe \v ft_table_wwrite\:fort.c}
{\xe \v fort.c\:ft_table_wwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_table_wwrite ({\b ft_table_t} *  {\i table}, size_t  {\i rows}, size_t  {\i cols}, const wchar_t *  {\i table_cells}[])}}
\par
{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_table_wwrite_ln\:fort.c}
{\xe \v fort.c\:ft_table_wwrite_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_table_wwrite_ln ({\b ft_table_t} *  {\i table}, size_t  {\i rows}, size_t  {\i cols}, const wchar_t *  {\i table_cells}[])}}
\par
{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_to_string\:fort.c}
{\xe \v fort.c\:ft_to_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* ft_to_string (const {\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Convert table to string representation.\par
ft_table_t has ownership of the returned pointer. So there is no need to free it. To take ownership user should explicitly copy the returned string with strdup or similar functions.\par
Returned pointer may be later invalidated by:{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Calling ft_destroy_table;\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Other invocations of ft_to_string.\par}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Paramètres\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i table} \cell }{Formatted table. \cell }
{\row }
}
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Renvoie\par}\pard\plain \s82\li720\widctlpar\ql\adjustright \fs20\cgrid {\s17 \sa60 \sb30
{
\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
The pointer to the string representation of formatted table, on success.\par
\pard\plain \s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
NULL on error. \par}
}}}}
{\xe \v ft_to_u8string\:fort.c}
{\xe \v fort.c\:ft_to_u8string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const void* ft_to_u8string (const {\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_to_wstring\:fort.c}
{\xe \v fort.c\:ft_to_wstring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const wchar_t* ft_to_wstring (const {\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_u8nwrite\:fort.c}
{\xe \v fort.c\:ft_u8nwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_u8nwrite ({\b ft_table_t} *  {\i table}, size_t  {\i n}, const void *  {\i cell_content},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_u8nwrite_ln\:fort.c}
{\xe \v fort.c\:ft_u8nwrite_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_u8nwrite_ln ({\b ft_table_t} *  {\i table}, size_t  {\i n}, const void *  {\i cell_content},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_u8printf\:fort.c}
{\xe \v fort.c\:ft_u8printf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_u8printf ({\b ft_table_t} *  {\i table}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_u8printf_ln\:fort.c}
{\xe \v fort.c\:ft_u8printf_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_u8printf_ln ({\b ft_table_t} *  {\i table}, const char *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_wprintf\:fort.c}
{\xe \v fort.c\:ft_wprintf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_wprintf ({\b ft_table_t} *  {\i table}, const wchar_t *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ft_wprintf_ln\:fort.c}
{\xe \v fort.c\:ft_wprintf_ln}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ft_wprintf_ln ({\b ft_table_t} *  {\i table}, const wchar_t *  {\i fmt},   {\i ...})}}
\par
{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_cell\:fort.c}
{\xe \v fort.c\:get_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_cell_t} * get_cell ({\b f_row_t} *  {\i row}, size_t  {\i col})}}
\par
{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_cell_and_create_if_not_exists\:fort.c}
{\xe \v fort.c\:get_cell_and_create_if_not_exists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_cell_t} * get_cell_and_create_if_not_exists ({\b f_row_t} *  {\i row}, size_t  {\i col})}}
\par
{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAARA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_cell_c\:fort.c}
{\xe \v fort.c\:get_cell_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} const {\b f_cell_t} * get_cell_c (const {\b f_row_t} *  {\i row}, size_t  {\i col})}}
\par
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_cell_prop_and_create_if_not_exists\:fort.c}
{\xe \v fort.c\:get_cell_prop_and_create_if_not_exists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_cell_props_t} * get_cell_prop_and_create_if_not_exists ({\b f_cell_prop_container_t} *  {\i cont}, size_t  {\i row}, size_t  {\i col})}}
\par
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_cell_property_hierarchically\:fort.c}
{\xe \v fort.c\:get_cell_property_hierarchically}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int get_cell_property_hierarchically (const {\b f_table_properties_t} *  {\i properties}, size_t  {\i row}, size_t  {\i column}, uint32_t  {\i property})}}
\par
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_cell_type\:fort.c}
{\xe \v fort.c\:get_cell_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} enum {\b f_cell_type} get_cell_type (const {\b f_cell_t} *  {\i cell})}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_cur_str_buffer_and_create_if_not_exists\:fort.c}
{\xe \v fort.c\:get_cur_str_buffer_and_create_if_not_exists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_string_buffer_t} * get_cur_str_buffer_and_create_if_not_exists ({\b ft_table_t} *  {\i table})}}
\par
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_reset_style_tag_for_cell\:fort.c}
{\xe \v fort.c\:get_reset_style_tag_for_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_reset_style_tag_for_cell (const {\b f_table_properties_t} *  {\i props}, size_t  {\i row}, size_t  {\i col}, char *  {\i style_tag}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_reset_style_tag_for_content\:fort.c}
{\xe \v fort.c\:get_reset_style_tag_for_content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_reset_style_tag_for_content (const {\b f_table_properties_t} *  {\i props}, size_t  {\i row}, size_t  {\i col}, char *  {\i style_tag}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_row\:fort.c}
{\xe \v fort.c\:get_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * get_row ({\b ft_table_t} *  {\i table}, size_t  {\i row})}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_row_and_create_if_not_exists\:fort.c}
{\xe \v fort.c\:get_row_and_create_if_not_exists}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * get_row_and_create_if_not_exists ({\b ft_table_t} *  {\i table}, size_t  {\i row})}}
\par
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_row_c\:fort.c}
{\xe \v fort.c\:get_row_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} const {\b f_row_t} * get_row_c (const {\b ft_table_t} *  {\i table}, size_t  {\i row})}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_row_cell_types\:fort.c}
{\xe \v fort.c\:get_row_cell_types}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int get_row_cell_types (const {\b f_row_t} *  {\i row}, enum {\b f_cell_type} *  {\i types}, size_t  {\i types_sz})}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_style_tag_for_cell\:fort.c}
{\xe \v fort.c\:get_style_tag_for_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_style_tag_for_cell (const {\b f_table_properties_t} *  {\i props}, size_t  {\i row}, size_t  {\i col}, char *  {\i style_tag}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_style_tag_for_content\:fort.c}
{\xe \v fort.c\:get_style_tag_for_content}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void get_style_tag_for_content (const {\b f_table_properties_t} *  {\i props}, size_t  {\i row}, size_t  {\i col}, char *  {\i style_tag}, size_t  {\i sz})}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v get_table_sizes\:fort.c}
{\xe \v fort.c\:get_table_sizes}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} get_table_sizes (const {\b ft_table_t} *  {\i table}, size_t *  {\i rows}, size_t *  {\i cols})}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v group_cell_number\:fort.c}
{\xe \v fort.c\:group_cell_number}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t group_cell_number (const {\b f_row_t} *  {\i row}, size_t  {\i master_cell_col})}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v hint_height_cell\:fort.c}
{\xe \v fort.c\:hint_height_cell}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t hint_height_cell (const {\b f_cell_t} *  {\i cell}, const {\b f_context_t} *  {\i context})}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v insert_row\:fort.c}
{\xe \v fort.c\:insert_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} insert_row ({\b f_row_t} *  {\i cur_row}, {\b f_row_t} *  {\i ins_row}, size_t  {\i pos})}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v max_border_elem_strlen\:fort.c}
{\xe \v fort.c\:max_border_elem_strlen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t max_border_elem_strlen (struct {\b f_table_properties} *  {\i properties})}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mk_wcswidth\:fort.c}
{\xe \v fort.c\:mk_wcswidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int mk_wcswidth (const wchar_t *  {\i pwcs}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAART}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v number_of_columns_in_format_buffer\:fort.c}
{\xe \v fort.c\:number_of_columns_in_format_buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t number_of_columns_in_format_buffer (const {\b f_string_buffer_t} *  {\i fmt})}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v number_of_columns_in_format_string\:fort.c}
{\xe \v fort.c\:number_of_columns_in_format_string}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t number_of_columns_in_format_string (const {\b f_string_view_t} *  {\i fmt})}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_n_strings\:fort.c}
{\xe \v fort.c\:print_n_strings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int print_n_strings ({\b f_conv_context_t} *  {\i cntx}, size_t  {\i n}, const char *  {\i str})}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v print_row_separator\:fort.c}
{\xe \v fort.c\:print_row_separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int print_row_separator ({\b f_conv_context_t} *  {\i cntx}, const size_t *  {\i col_width_arr}, size_t  {\i cols}, const {\b f_row_t} *  {\i upper_row}, const {\b f_row_t} *  {\i lower_row}, enum {\b f_hor_separator_pos}  {\i separatorPos}, const {\b f_separator_t} *  {\i sep})}}
\par
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v realloc_string_buffer_without_copy\:fort.c}
{\xe \v fort.c\:realloc_string_buffer_without_copy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} realloc_string_buffer_without_copy ({\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v row_set_cell_span\:fort.c}
{\xe \v fort.c\:row_set_cell_span}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} row_set_cell_span ({\b f_row_t} *  {\i row}, size_t  {\i cell_column}, size_t  {\i hor_span})}}
\par
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_cell_property\:fort.c}
{\xe \v fort.c\:set_cell_property}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} set_cell_property ({\b f_cell_prop_container_t} *  {\i cont}, size_t  {\i row}, size_t  {\i col}, uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_cell_type\:fort.c}
{\xe \v fort.c\:set_cell_type}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void set_cell_type ({\b f_cell_t} *  {\i cell}, enum {\b f_cell_type}  {\i type})}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_default_cell_property\:fort.c}
{\xe \v fort.c\:set_default_cell_property}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} set_default_cell_property (uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_default_entire_table_property\:fort.c}
{\xe \v fort.c\:set_default_entire_table_property}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} set_default_entire_table_property (uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_entire_table_property\:fort.c}
{\xe \v fort.c\:set_entire_table_property}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} set_entire_table_property ({\b f_table_properties_t} *  {\i table_properties}, uint32_t  {\i property}, int  {\i value})}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v set_memory_funcs\:fort.c}
{\xe \v fort.c\:set_memory_funcs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void set_memory_funcs (void *(*)(size_t size)  {\i f_malloc}, void(*)(void *ptr)  {\i f_free})}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v snprintf_row\:fort.c}
{\xe \v fort.c\:snprintf_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int snprintf_row (const {\b f_row_t} *  {\i row}, {\b f_conv_context_t} *  {\i cntx}, size_t *  {\i col_width_arr}, size_t  {\i col_width_arr_sz}, size_t  {\i row_height})}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v split_row\:fort.c}
{\xe \v fort.c\:split_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_row_t} * split_row ({\b f_row_t} *  {\i row}, size_t  {\i pos})}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v str_n_substring\:fort.c}
{\xe \v fort.c\:str_n_substring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void str_n_substring (const char *  {\i str}, char  {\i ch_separator}, size_t  {\i n}, const char **  {\i begin}, const char **  {\i end})}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v str_n_substring_beg\:fort.c}
{\xe \v fort.c\:str_n_substring_beg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} const char* str_n_substring_beg (const char *  {\i str}, char  {\i ch_separator}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v strchr_count\:fort.c}
{\xe \v fort.c\:strchr_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t strchr_count (const char *  {\i str}, char  {\i ch})}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v string_buffer_cod_width_capacity\:fort.c}
{\xe \v fort.c\:string_buffer_cod_width_capacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t string_buffer_cod_width_capacity (const {\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v string_buffer_raw_capacity\:fort.c}
{\xe \v fort.c\:string_buffer_raw_capacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t string_buffer_raw_capacity (const {\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v string_buffer_width_capacity\:fort.c}
{\xe \v fort.c\:string_buffer_width_capacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t string_buffer_width_capacity (const {\b f_string_buffer_t} *  {\i buffer})}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swap_row\:fort.c}
{\xe \v fort.c\:swap_row}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} swap_row ({\b f_row_t} *  {\i cur_row}, {\b f_row_t} *  {\i ins_row}, size_t  {\i pos})}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v table_geometry\:fort.c}
{\xe \v fort.c\:table_geometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} table_geometry (const {\b ft_table_t} *  {\i table}, size_t *  {\i height}, size_t *  {\i width})}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v table_internal_codepoints_geometry\:fort.c}
{\xe \v fort.c\:table_internal_codepoints_geometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} table_internal_codepoints_geometry (const {\b ft_table_t} *  {\i table}, size_t *  {\i height}, size_t *  {\i width})}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v table_rows_and_cols_geometry\:fort.c}
{\xe \v fort.c\:table_rows_and_cols_geometry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} table_rows_and_cols_geometry (const {\b ft_table_t} *  {\i table}, size_t **  {\i col_width_arr_p}, size_t *  {\i col_width_arr_sz}, size_t **  {\i row_height_arr_p}, size_t *  {\i row_height_arr_sz}, enum {\b f_geometry_type}  {\i geom})}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v ut8next\:fort.c}
{\xe \v fort.c\:ut8next}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void* ut8next (const void *  {\i str})}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_n_substring\:fort.c}
{\xe \v fort.c\:utf8_n_substring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void utf8_n_substring (const void *  {\i str}, {\b utf8_int32_t}  {\i ch_separator}, size_t  {\i n}, const void **  {\i begin}, const void **  {\i end})}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8_n_substring_beg\:fort.c}
{\xe \v fort.c\:utf8_n_substring_beg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} const void* utf8_n_substring_beg (const void *  {\i str}, {\b utf8_int32_t}  {\i ch_separator}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8casecmp\:fort.c}
{\xe \v fort.c\:utf8casecmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8casecmp (const void *  {\i src1}, const void *  {\i src2})}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8casestr\:fort.c}
{\xe \v fort.c\:utf8casestr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8casestr (const void *  {\i haystack}, const void *  {\i needle})}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8cat\:fort.c}
{\xe \v fort.c\:utf8cat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8cat (void *{\b utf8_restrict}  {\i dst}, const void *{\b utf8_restrict}  {\i src})}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8catcodepoint\:fort.c}
{\xe \v fort.c\:utf8catcodepoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8catcodepoint (void *{\b utf8_restrict}  {\i str}, {\b utf8_int32_t}  {\i chr}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8chr\:fort.c}
{\xe \v fort.c\:utf8chr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8chr (const void *  {\i src}, {\b utf8_int32_t}  {\i chr})}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8chr_count\:fort.c}
{\xe \v fort.c\:utf8chr_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t utf8chr_count (const void *  {\i str}, {\b utf8_int32_t}  {\i ch})}}
\par
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8cmp\:fort.c}
{\xe \v fort.c\:utf8cmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8cmp (const void *  {\i src1}, const void *  {\i src2})}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8codepoint\:fort.c}
{\xe \v fort.c\:utf8codepoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8codepoint (const void *{\b utf8_restrict}  {\i str}, {\b utf8_int32_t} *{\b utf8_restrict}  {\i out_codepoint})}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8codepointsize\:fort.c}
{\xe \v fort.c\:utf8codepointsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t utf8codepointsize ({\b utf8_int32_t}  {\i chr})}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8coll\:fort.c}
{\xe \v fort.c\:utf8coll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8coll (const void *  {\i src1}, const void *  {\i src2})}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8cpy\:fort.c}
{\xe \v fort.c\:utf8cpy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8cpy (void *{\b utf8_restrict}  {\i dst}, const void *{\b utf8_restrict}  {\i src})}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8cspn\:fort.c}
{\xe \v fort.c\:utf8cspn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t utf8cspn (const void *  {\i src}, const void *  {\i reject})}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8cwidth\:fort.c}
{\xe \v fort.c\:utf8cwidth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8cwidth ({\b utf8_int32_t}  {\i c})}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8dup\:fort.c}
{\xe \v fort.c\:utf8dup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8dup (const void *  {\i src})}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8fry\:fort.c}
{\xe \v fort.c\:utf8fry}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void* utf8fry (const void *  {\i str})}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8islower\:fort.c}
{\xe \v fort.c\:utf8islower}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8islower ({\b utf8_int32_t}  {\i chr})}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8isupper\:fort.c}
{\xe \v fort.c\:utf8isupper}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8isupper ({\b utf8_int32_t}  {\i chr})}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8len\:fort.c}
{\xe \v fort.c\:utf8len}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t utf8len (const void *  {\i str})}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8lwr\:fort.c}
{\xe \v fort.c\:utf8lwr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void utf8lwr (void *{\b utf8_restrict}  {\i str})}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8lwrcodepoint\:fort.c}
{\xe \v fort.c\:utf8lwrcodepoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b utf8_int32_t} utf8lwrcodepoint ({\b utf8_int32_t}  {\i cp})}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8ncasecmp\:fort.c}
{\xe \v fort.c\:utf8ncasecmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8ncasecmp (const void *  {\i src1}, const void *  {\i src2}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8ncat\:fort.c}
{\xe \v fort.c\:utf8ncat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8ncat (void *{\b utf8_restrict}  {\i dst}, const void *{\b utf8_restrict}  {\i src}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8ncmp\:fort.c}
{\xe \v fort.c\:utf8ncmp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int utf8ncmp (const void *  {\i src1}, const void *  {\i src2}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8ncpy\:fort.c}
{\xe \v fort.c\:utf8ncpy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8ncpy (void *{\b utf8_restrict}  {\i dst}, const void *{\b utf8_restrict}  {\i src}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8ndup\:fort.c}
{\xe \v fort.c\:utf8ndup}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8ndup (const void *  {\i src}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8pbrk\:fort.c}
{\xe \v fort.c\:utf8pbrk}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8pbrk (const void *  {\i str}, const void *  {\i accept})}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8rchr\:fort.c}
{\xe \v fort.c\:utf8rchr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8rchr (const void *  {\i src}, int  {\i chr})}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8size\:fort.c}
{\xe \v fort.c\:utf8size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t utf8size (const void *  {\i str})}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8spn\:fort.c}
{\xe \v fort.c\:utf8spn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t utf8spn (const void *  {\i src}, const void *  {\i accept})}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8str\:fort.c}
{\xe \v fort.c\:utf8str}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8str (const void *  {\i haystack}, const void *  {\i needle})}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8upr\:fort.c}
{\xe \v fort.c\:utf8upr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void utf8upr (void *{\b utf8_restrict}  {\i str})}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8uprcodepoint\:fort.c}
{\xe \v fort.c\:utf8uprcodepoint}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b utf8_int32_t} utf8uprcodepoint ({\b utf8_int32_t}  {\i cp})}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8valid\:fort.c}
{\xe \v fort.c\:utf8valid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void * utf8valid (const void *  {\i str})}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v utf8width\:fort.c}
{\xe \v fort.c\:utf8width}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
size_t utf8width (const void *  {\i str})}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_at\:fort.c}
{\xe \v fort.c\:vector_at}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void * vector_at ({\b f_vector_t} *  {\i vector}, size_t  {\i index})}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_at_c\:fort.c}
{\xe \v fort.c\:vector_at_c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} const void * vector_at_c (const {\b f_vector_t} *  {\i vector}, size_t  {\i index})}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_capacity\:fort.c}
{\xe \v fort.c\:vector_capacity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t vector_capacity (const {\b f_vector_t} *  {\i vector})}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_clear\:fort.c}
{\xe \v fort.c\:vector_clear}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void vector_clear ({\b f_vector_t} *  {\i vector})}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_erase\:fort.c}
{\xe \v fort.c\:vector_erase}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int vector_erase ({\b f_vector_t} *  {\i vector}, size_t  {\i index})}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_insert\:fort.c}
{\xe \v fort.c\:vector_insert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int vector_insert ({\b f_vector_t} *  {\i vector}, const void *  {\i item}, size_t  {\i pos})}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_push\:fort.c}
{\xe \v fort.c\:vector_push}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} int vector_push ({\b f_vector_t} *  {\i vector}, const void *  {\i item})}}
\par
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_size\:fort.c}
{\xe \v fort.c\:vector_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t vector_size (const {\b f_vector_t} *  {\i vector})}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_split\:fort.c}
{\xe \v fort.c\:vector_split}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_vector_t} * vector_split ({\b f_vector_t} *  {\i vector}, size_t  {\i pos})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vector_swap\:fort.c}
{\xe \v fort.c\:vector_swap}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} {\b f_status} vector_swap ({\b f_vector_t} *  {\i cur_vec}, {\b f_vector_t} *  {\i mv_vec}, size_t  {\i pos})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wstr_n_substring\:fort.c}
{\xe \v fort.c\:wstr_n_substring}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} void wstr_n_substring (const wchar_t *  {\i str}, wchar_t  {\i ch_separator}, size_t  {\i n}, const wchar_t **  {\i begin}, const wchar_t **  {\i end})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wstr_n_substring_beg\:fort.c}
{\xe \v fort.c\:wstr_n_substring_beg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} const wchar_t* wstr_n_substring_beg (const wchar_t *  {\i str}, wchar_t  {\i ch_separator}, size_t  {\i n})}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v wstrchr_count\:fort.c}
{\xe \v fort.c\:wstrchr_count}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b FT_INTERNAL} size_t wstrchr_count (const wchar_t *  {\i str}, wchar_t  {\i ch})}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Documentation des variables\par
\pard\plain 
{\xe \v FORT_BASIC2_STYLE\:fort.c}
{\xe \v fort.c\:FORT_BASIC2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_BASIC2_STYLE = {\b BASIC2_STYLE}}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_BASIC_STYLE\:fort.c}
{\xe \v fort.c\:FORT_BASIC_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_BASIC_STYLE = {\b BASIC_STYLE}}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_BOLD2_STYLE\:fort.c}
{\xe \v fort.c\:FORT_BOLD2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_BOLD2_STYLE = {\b BOLD2_STYLE}}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_BOLD_STYLE\:fort.c}
{\xe \v fort.c\:FORT_BOLD_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_BOLD_STYLE = {\b BOLD_STYLE}}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fort_calloc\:fort.c}
{\xe \v fort.c\:fort_calloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void *(* fort_calloc)(size_t nmemb, size_t size) (size_t  {\i nmemb}, size_t  {\i size}) = &local_calloc}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_DOT_STYLE\:fort.c}
{\xe \v fort.c\:FORT_DOT_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_DOT_STYLE = {\b DOT_STYLE}}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_DOUBLE2_STYLE\:fort.c}
{\xe \v fort.c\:FORT_DOUBLE2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_DOUBLE2_STYLE = {\b DOUBLE2_STYLE}}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_DOUBLE_STYLE\:fort.c}
{\xe \v fort.c\:FORT_DOUBLE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_DOUBLE_STYLE = {\b DOUBLE_STYLE}}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_EMPTY2_STYLE\:fort.c}
{\xe \v fort.c\:FORT_EMPTY2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_EMPTY2_STYLE = {\b EMPTY2_STYLE}}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_EMPTY_STYLE\:fort.c}
{\xe \v fort.c\:FORT_EMPTY_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_EMPTY_STYLE = {\b EMPTY_STYLE}}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_FRAME_STYLE\:fort.c}
{\xe \v fort.c\:FORT_FRAME_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_FRAME_STYLE = {\b FRAME_STYLE}}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fort_free\:fort.c}
{\xe \v fort.c\:fort_free}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void(* fort_free)(void *ptr) (void *  {\i ptr}) = &local_free}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fort_malloc\:fort.c}
{\xe \v fort.c\:fort_malloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void *(* fort_malloc)(size_t size) (size_t  {\i size}) = &local_malloc}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_NICE_STYLE\:fort.c}
{\xe \v fort.c\:FORT_NICE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_NICE_STYLE = {\b NICE_STYLE}}}
\par
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_PLAIN_STYLE\:fort.c}
{\xe \v fort.c\:FORT_PLAIN_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_PLAIN_STYLE = {\b PLAIN_STYLE}}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fort_realloc\:fort.c}
{\xe \v fort.c\:fort_realloc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void *(* fort_realloc)(void *ptr, size_t size) (void *  {\i ptr}, size_t  {\i size}) = &local_realloc}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_SIMPLE_STYLE\:fort.c}
{\xe \v fort.c\:FORT_SIMPLE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_SIMPLE_STYLE = {\b SIMPLE_STYLE}}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_SOLID_ROUND_STYLE\:fort.c}
{\xe \v fort.c\:FORT_SOLID_ROUND_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_SOLID_ROUND_STYLE = {\b SOLID_ROUND_STYLE}}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FORT_SOLID_STYLE\:fort.c}
{\xe \v fort.c\:FORT_SOLID_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b fort_border_style} FORT_SOLID_STYLE = {\b SOLID_STYLE}}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_BASIC2_STYLE\:fort.c}
{\xe \v fort.c\:FT_BASIC2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_BASIC2_STYLE = &built_in_external_styles[1]}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_BASIC_STYLE\:fort.c}
{\xe \v fort.c\:FT_BASIC_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_BASIC_STYLE = &built_in_external_styles[0]}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_BOLD2_STYLE\:fort.c}
{\xe \v fort.c\:FT_BOLD2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_BOLD2_STYLE = &built_in_external_styles[13]}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_BOLD_STYLE\:fort.c}
{\xe \v fort.c\:FT_BOLD_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_BOLD_STYLE = &built_in_external_styles[12]}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_DOT_STYLE\:fort.c}
{\xe \v fort.c\:FT_DOT_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_DOT_STYLE = &built_in_external_styles[4]}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_DOUBLE2_STYLE\:fort.c}
{\xe \v fort.c\:FT_DOUBLE2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_DOUBLE2_STYLE = &built_in_external_styles[11]}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_DOUBLE_STYLE\:fort.c}
{\xe \v fort.c\:FT_DOUBLE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_DOUBLE_STYLE = &built_in_external_styles[10]}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_EMPTY2_STYLE\:fort.c}
{\xe \v fort.c\:FT_EMPTY2_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_EMPTY2_STYLE = &built_in_external_styles[6]}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_EMPTY_STYLE\:fort.c}
{\xe \v fort.c\:FT_EMPTY_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_EMPTY_STYLE = &built_in_external_styles[5]}}
\par
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_FRAME_STYLE\:fort.c}
{\xe \v fort.c\:FT_FRAME_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_FRAME_STYLE = &built_in_external_styles[14]}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_NICE_STYLE\:fort.c}
{\xe \v fort.c\:FT_NICE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_NICE_STYLE = &built_in_external_styles[9]}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_PLAIN_STYLE\:fort.c}
{\xe \v fort.c\:FT_PLAIN_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_PLAIN_STYLE = &built_in_external_styles[3]}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_SIMPLE_STYLE\:fort.c}
{\xe \v fort.c\:FT_SIMPLE_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_SIMPLE_STYLE = &built_in_external_styles[2]}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_SOLID_ROUND_STYLE\:fort.c}
{\xe \v fort.c\:FT_SOLID_ROUND_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_SOLID_ROUND_STYLE = &built_in_external_styles[8]}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v FT_SOLID_STYLE\:fort.c}
{\xe \v fort.c\:FT_SOLID_STYLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const struct {\b ft_border_style}* const FT_SOLID_STYLE = &built_in_external_styles[7]}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_col_separator\:fort.c}
{\xe \v fort.c\:g_col_separator}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char g_col_separator = {\b FORT_DEFAULT_COL_SEPARATOR}}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v g_entire_table_properties\:fort.c}
{\xe \v fort.c\:g_entire_table_properties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b fort_entire_table_properties_t} g_entire_table_properties}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur initiale :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    0, \par
    0, \par
    0, \par
    0, \par
    FT_STRATEGY_REPLACE, \par
\}\par
}
}
{\xe \v g_table_properties\:fort.c}
{\xe \v fort.c\:g_table_properties}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b f_table_properties_t} g_table_properties}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\b Valeur initiale :}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid = \{\par
    \par
    BASIC_STYLE,\par
    NULL,     \par
    \par
    \{\par
        0, \par
        0, \par
        0, \par
        0,  \par
        FT_STRATEGY_REPLACE, \par
    \}\par
\}\par
}
}
}