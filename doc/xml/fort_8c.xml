<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="fr">
  <compounddef id="fort_8c" kind="file" language="C++">
    <compoundname>fort.c</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="no">stdio.h</includes>
    <includes refid="fort_8h" local="yes">../include/fort.h</includes>
    <includes local="no">wchar.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">limits.h</includes>
    <includes local="no">stdarg.h</includes>
    <includes local="no">ctype.h</includes>
    <incdepgraph>
      <node id="7">
        <label>../include/fort.h</label>
        <link refid="fort_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/fort.c</label>
        <link refid="fort_8c"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>assert.h</label>
      </node>
      <node id="12">
        <label>ctype.h</label>
      </node>
      <node id="9">
        <label>limits.h</label>
      </node>
      <node id="11">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
      <node id="8">
        <label>stdint.h</label>
      </node>
      <node id="6">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="4">
        <label>string.h</label>
      </node>
      <node id="10">
        <label>wchar.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="structf__string__view" prot="public">f_string_view</innerclass>
    <innerclass refid="structf__separator" prot="public">f_separator</innerclass>
    <innerclass refid="structf__context" prot="public">f_context</innerclass>
    <innerclass refid="structf__conv__context" prot="public">f_conv_context</innerclass>
    <innerclass refid="structf__string__buffer" prot="public">f_string_buffer</innerclass>
    <innerclass refid="structf__cell__props" prot="public">f_cell_props</innerclass>
    <innerclass refid="structfort__border__style" prot="public">fort_border_style</innerclass>
    <innerclass refid="structfort__entire__table__properties" prot="public">fort_entire_table_properties</innerclass>
    <innerclass refid="structf__table__properties" prot="public">f_table_properties</innerclass>
    <innerclass refid="structft__table" prot="public">ft_table</innerclass>
    <innerclass refid="structf__cell" prot="public">f_cell</innerclass>
    <innerclass refid="structf__row" prot="public">f_row</innerclass>
    <innerclass refid="structf__vector" prot="public">f_vector</innerclass>
    <innerclass refid="structinterval" prot="public">interval</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="fort_8c_1a77ac3a2ee8d69df58f2d239db35dd0e8" prot="public" static="no">
        <name>FT_AMALGAMED_SOURCE</name>
        <initializer>/* Macros to make internal libfort functions static */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="31" column="9" bodyfile="src/fort.c" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a782d0c6b09259c09d312e4c80d6cabf2" prot="public" static="no">
        <name>FORT_IMPL_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="39" column="9" bodyfile="src/fort.c" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" prot="public" static="no">
        <name>FT_INTERNAL</name>
        <initializer>static</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="56" column="9" bodyfile="src/fort.c" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a3abeff93bbe13043e19c4bd8b6dd30df" prot="public" static="no">
        <name>FORT_DEFAULT_COL_SEPARATOR</name>
        <initializer>&apos;|&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="62" column="9" bodyfile="src/fort.c" bodystart="62" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ac22fb60cd88090750f4536ce213d7076" prot="public" static="no">
        <name>FORT_COL_SEPARATOR_LENGTH</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="65" column="9" bodyfile="src/fort.c" bodystart="65" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a55b6b4dcb81ff007fa598b3d373ad704" prot="public" static="no">
        <name>FORT_UNUSED</name>
        <initializer>__attribute__((unused))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="67" column="9" bodyfile="src/fort.c" bodystart="67" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" prot="public" static="no">
        <name>F_MALLOC</name>
        <initializer><ref refid="fort_8c_1a792989ae317c7b690425af8179d88466" kindref="member">fort_malloc</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="69" column="9" bodyfile="src/fort.c" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1add196043a1d5633940925baaba3bae1d" prot="public" static="no">
        <name>F_FREE</name>
        <initializer><ref refid="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" kindref="member">fort_free</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="70" column="9" bodyfile="src/fort.c" bodystart="70" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" prot="public" static="no">
        <name>F_CALLOC</name>
        <initializer><ref refid="fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37" kindref="member">fort_calloc</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="71" column="9" bodyfile="src/fort.c" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a51798cbeb535b232ea9905516cfcdb4c" prot="public" static="no">
        <name>F_REALLOC</name>
        <initializer><ref refid="fort_8c_1aac796d096112928799fe930648dc0da4" kindref="member">fort_realloc</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="72" column="9" bodyfile="src/fort.c" bodystart="72" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a6b396d87fd0d7c48631754638ecf17f2" prot="public" static="no">
        <name>F_STRDUP</name>
        <initializer><ref refid="fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c" kindref="member">fort_strdup</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="73" column="9" bodyfile="src/fort.c" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a62f4a36b4f123d858a97f079fda2834f" prot="public" static="no">
        <name>F_WCSDUP</name>
        <initializer><ref refid="fort_8c_1afbb101e4e75dbefa32076dc1f8a07762" kindref="member">fort_wcsdup</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="74" column="9" bodyfile="src/fort.c" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a273fee17f4143f522a4cb3c67a05aa1a" prot="public" static="no">
        <name>F_UTF8DUP</name>
        <initializer><ref refid="fort_8c_1a157235d1e84617035dd6a2b6891d1190" kindref="member">utf8dup</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="76" column="9" bodyfile="src/fort.c" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aa17e5e6fd8cb7909a873af4fc842541c" prot="public" static="no">
        <name>F_CREATE</name>
        <param><defname>type</defname></param>
        <initializer>((type *)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(sizeof(type), 1))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="78" column="9" bodyfile="src/fort.c" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" prot="public" static="no">
        <name>MAX</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &gt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="80" column="9" bodyfile="src/fort.c" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" prot="public" static="no">
        <name>MIN</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>((a) &lt; (b) ? (a) : (b))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="81" column="9" bodyfile="src/fort.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a0474dfa1c9848f892832d4babf0e3cd8" prot="public" static="no">
        <name>FT_NEWLINE</name>
        <initializer>&quot;\n&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="83" column="9" bodyfile="src/fort.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" prot="public" static="no">
        <name>FT_SPACE</name>
        <initializer>&quot; &quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="84" column="9" bodyfile="src/fort.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aae64a8d6a29845f7f4aa2f1bc3e095dd" prot="public" static="no">
        <name>DEFAULT_STR_BUF_SIZE</name>
        <initializer>1024</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="89" column="9" bodyfile="src/fort.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ae79893aa9b2a96292bb66404e00eddf1" prot="public" static="no">
        <name>DEFAULT_VECTOR_CAPACITY</name>
        <initializer>10</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="90" column="9" bodyfile="src/fort.c" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a9ba61413675b31346681731eaa8d9040" prot="public" static="no">
        <name>FT_STR_2_CAT_</name>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>    arg1##arg2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="143" column="9" bodyfile="src/fort.c" bodystart="143" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ab9b04e78482e306f63fff64eb3d4e19e" prot="public" static="no">
        <name>FT_STR_2_CAT</name>
        <param><defname>arg1</defname></param>
        <param><defname>arg2</defname></param>
        <initializer>    <ref refid="fort_8c_1a9ba61413675b31346681731eaa8d9040" kindref="member">FT_STR_2_CAT_</ref>(arg1, arg2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="145" column="9" bodyfile="src/fort.c" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a43f37b1674d09a7d903cd745f13692af" prot="public" static="no">
        <name>UNIQUE_NAME_</name>
        <param><defname>prefix</defname></param>
        <initializer>    <ref refid="fort_8c_1ab9b04e78482e306f63fff64eb3d4e19e" kindref="member">FT_STR_2_CAT</ref>(prefix,__COUNTER__)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="148" column="9" bodyfile="src/fort.c" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a8ca2d33aab5f2ed9b84085b0122dd175" prot="public" static="no">
        <name>UNIQUE_NAME</name>
        <param><defname>prefix</defname></param>
        <initializer>    <ref refid="fort_8c_1a43f37b1674d09a7d903cd745f13692af" kindref="member">UNIQUE_NAME_</ref>(prefix)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="150" column="9" bodyfile="src/fort.c" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a13b182782de774d46e704f91a526e4f6" prot="public" static="no">
        <name>PRINT_DEBUG_INFO</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="245" column="9" bodyfile="src/fort.c" bodystart="245" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a784abddef87cd2430529e032c3d8213e" prot="public" static="no">
        <name>FT_CHECK</name>
        <param><defname>statement</defname></param>
        <initializer>    do { \
        tmp = statement; \
        if (tmp &lt; 0) {\
            <ref refid="fort_8c_1a13b182782de774d46e704f91a526e4f6" kindref="member">PRINT_DEBUG_INFO</ref> \
            goto clear; \
        } \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="247" column="9" bodyfile="src/fort.c" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" prot="public" static="no">
        <name>CHCK_RSLT_ADD_TO_WRITTEN</name>
        <param><defname>statement</defname></param>
        <initializer>    do { \
        tmp = statement; \
        if (tmp &lt; 0) {\
            <ref refid="fort_8c_1a13b182782de774d46e704f91a526e4f6" kindref="member">PRINT_DEBUG_INFO</ref> \
            goto clear; \
        } \
        written += (size_t)tmp; \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="256" column="9" bodyfile="src/fort.c" bodystart="256" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052" prot="public" static="no">
        <name>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</name>
        <param><defname>statement</defname></param>
        <initializer>    do { \
        tmp = statement; \
        if (tmp &lt; 0) {\
            <ref refid="fort_8c_1a13b182782de774d46e704f91a526e4f6" kindref="member">PRINT_DEBUG_INFO</ref> \
            goto clear; \
        } \
        invisible_written += (size_t)tmp; \
    } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="266" column="9" bodyfile="src/fort.c" bodystart="266" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aab06de152ddaae54d61db939ee942b20" prot="public" static="no">
        <name>CHECK_NOT_NEGATIVE</name>
        <param><defname>x</defname></param>
        <initializer>    do { if ((x) &lt; 0) goto fort_fail; } while (0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="277" column="9" bodyfile="src/fort.c" bodystart="277" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a0e56521e7ab51dee5a9705e070406265" prot="public" static="no">
        <name>VECTOR_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="292" column="9" bodyfile="src/fort.c" bodystart="292" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a55a8000149f7d5b04b4b07cc44c4dc79" prot="public" static="no">
        <name>INVALID_VEC_INDEX</name>
        <initializer>((size_t) -1)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="297" column="9" bodyfile="src/fort.c" bodystart="297" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" prot="public" static="no">
        <name>VECTOR_AT</name>
        <param><defname>vector</defname></param>
        <param><defname>pos</defname></param>
        <param><defname>data_type</defname></param>
        <initializer>    *(data_type *)<ref refid="fort_8c_1abb033777a1a8c0b490f14541bc0332fa" kindref="member">vector_at</ref>((vector), (pos))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="340" column="9" bodyfile="src/fort.c" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a9d43ef6423e42a608c3e28e9fef6d053" prot="public" static="no">
        <name>VECTOR_AT_C</name>
        <param><defname>vector</defname></param>
        <param><defname>pos</defname></param>
        <param><defname>const_data_type</defname></param>
        <initializer>    *(const_data_type *)<ref refid="fort_8c_1a91644aa66c95f718abb2f0ad731c604b" kindref="member">vector_at_c</ref>((vector), (pos))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="343" column="9" bodyfile="src/fort.c" bodystart="343" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a35d88a67057477f326a6c3d4bfa69902" prot="public" static="no">
        <name>WCWIDTH_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="358" column="9" bodyfile="src/fort.c" bodystart="358" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1afcf11092c559c10a0fbab216b54e6aee" prot="public" static="no">
        <name>SHEREDOM_UTF8_H_INCLUDED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="410" column="9" bodyfile="src/fort.c" bodystart="410" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" prot="public" static="no">
        <name>utf8_nonnull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="454" column="10" bodyfile="src/fort.c" bodystart="454" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a43095c668493542f53935a041bf4f30b" prot="public" static="no">
        <name>utf8_pure</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="455" column="9" bodyfile="src/fort.c" bodystart="455" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" prot="public" static="no">
        <name>utf8_restrict</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="456" column="9" bodyfile="src/fort.c" bodystart="456" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" prot="public" static="no">
        <name>utf8_weak</name>
        <initializer>inline</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="457" column="9" bodyfile="src/fort.c" bodystart="457" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" prot="public" static="no">
        <name>utf8_null</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="463" column="10" bodyfile="src/fort.c" bodystart="463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a8c50b95728a093bfac504b2dde6415e7" prot="public" static="no">
        <name>STRING_BUFFER_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1768" column="9" bodyfile="src/fort.c" bodystart="1768" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ae2c58bc6eb17515036e8c0037e9922a7" prot="public" static="no">
        <name>PROPERTIES_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1860" column="9" bodyfile="src/fort.c" bodystart="1860" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" prot="public" static="no">
        <name>PROP_IS_SET</name>
        <param><defname>ft_props</defname></param>
        <param><defname>property</defname></param>
        <initializer>((ft_props) &amp; (property))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1866" column="9" bodyfile="src/fort.c" bodystart="1866" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a292665f9426d532a04d9db2f47f8cc1f" prot="public" static="no">
        <name>PROP_SET</name>
        <param><defname>ft_props</defname></param>
        <param><defname>property</defname></param>
        <initializer>((ft_props) |=(property))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1867" column="9" bodyfile="src/fort.c" bodystart="1867" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a5c2b099178ba4f1e6df87d1ff8f05bb1" prot="public" static="no">
        <name>PROP_UNSET</name>
        <param><defname>ft_props</defname></param>
        <param><defname>property</defname></param>
        <initializer>((ft_props) &amp;= ~((uint32_t)(property)))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1868" column="9" bodyfile="src/fort.c" bodystart="1868" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" prot="public" static="no">
        <name>TEXT_STYLE_TAG_MAX_SIZE</name>
        <initializer>(64 * 2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1870" column="9" bodyfile="src/fort.c" bodystart="1870" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a36e1292dd9af86d5b74a92b4a1bad9ba" prot="public" static="no">
        <name>CELL_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2080" column="9" bodyfile="src/fort.c" bodystart="2080" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aff5bd921faea144bda420627350e0b5c" prot="public" static="no">
        <name>ROW_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2137" column="9" bodyfile="src/fort.c" bodystart="2137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ab2a7e3ca6ca07a330a9fe4d74d714b66" prot="public" static="no">
        <name>TABLE_H</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2227" column="9" bodyfile="src/fort.c" bodystart="2227" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ab55660b1711634f2daf0089672257c2d" prot="public" static="no">
        <name>TOTAL_WRITTEN</name>
        <initializer>(written + invisible_written)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2483" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a80fb826a684cf3f0d306b22aa100ddac" prot="public" static="no">
        <name>RIGHT</name>
        <initializer>(padding_right + extra_right)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2484" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a31acf3be2a5038d72e7e9f08311e4f8a" prot="public" static="no">
        <name>WRITE_CELL_STYLE_TAG</name>
        <initializer><ref refid="fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052" kindref="member">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx, 1, cell_style_tag))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2486" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1af9efa523650f6451fd7a1ed157f1511f" prot="public" static="no">
        <name>WRITE_RESET_CELL_STYLE_TAG</name>
        <initializer><ref refid="fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052" kindref="member">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx, 1, reset_cell_style_tag))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2487" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a572a6ca19b88baf9e4d32d270f04b6a8" prot="public" static="no">
        <name>WRITE_CONTENT_STYLE_TAG</name>
        <initializer><ref refid="fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052" kindref="member">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx, 1, content_style_tag))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2488" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a4dd3781a70086c75737fd2c6aafdc299" prot="public" static="no">
        <name>WRITE_RESET_CONTENT_STYLE_TAG</name>
        <initializer><ref refid="fort_8c_1a74988538f9ce7b73c17bbc1d2b6df052" kindref="member">CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx, 1, reset_content_style_tag))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2489" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a1c5df369af358a17b90f4b5022121a4c" prot="public" static="no">
        <name>FT_PRINTF</name>
        <initializer>ft_printf_impl</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2953" column="10" bodyfile="src/fort.c" bodystart="2953" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a50fa22fc7abbe64934bf11438e7c25e6" prot="public" static="no">
        <name>FT_PRINTF_LN</name>
        <initializer>ft_printf_ln_impl</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2954" column="9" bodyfile="src/fort.c" bodystart="2954" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ab179ba6d458ef3bf6a3b23232a4ae582" prot="public" static="no">
        <name>BUILT_IN_STYLES_SZ</name>
        <initializer>(sizeof(built_in_styles) / sizeof(built_in_styles[0]))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3460" column="9" bodyfile="src/fort.c" bodystart="3460" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" prot="public" static="no">
        <name>BOR_CHARS</name>
        <initializer>properties-&gt;border_style.border_chars</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3498" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" prot="public" static="no">
        <name>H_BOR_CHARS</name>
        <initializer>properties-&gt;border_style.header_border_chars</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3499" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa" prot="public" static="no">
        <name>SEP_CHARS</name>
        <initializer>properties-&gt;border_style.separator_chars</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3500" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a372768dcf109902d738ffaedff0faeac" prot="public" static="no">
        <name>WCS_SIZE</name>
        <initializer>64</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4135" column="9" bodyfile="src/fort.c" bodystart="4135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ae70aa0f62e3542d3ed398ec21f6cbacb" prot="public" static="no">
        <name>FT_RESET_COLOR</name>
        <initializer>&quot;\033[0m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4246" column="9" bodyfile="src/fort.c" bodystart="4246" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a1dfc09e89d646bcb4852592debb5c8e5" prot="public" static="no">
        <name>UNIVERSAL_RESET_TAG</name>
        <initializer>&quot;\033[0m&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4299" column="9" bodyfile="src/fort.c" bodystart="4299" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a25b25babc27e11fbe4cfae21995881e6" prot="public" static="no">
        <name>BASIC_STYLE</name>
        <initializer>    {            \
    /* border_chars */            \
    {                             \
     &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,          \
     &quot;|&quot;, &quot;|&quot;, &quot;|&quot;,               \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,      \
     &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,          \
     &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;|&quot;, &quot;|&quot;, &quot;|&quot;,                \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;+&quot;, &quot;+&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4728" column="9" bodyfile="src/fort.c" bodystart="4728" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a84323253628c81be9d93a0d6fadc891c" prot="public" static="no">
        <name>BASIC2_STYLE</name>
        <initializer>    {           \
    /* border_chars */            \
    {                             \
     &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,          \
     &quot;|&quot;, &quot;|&quot;, &quot;|&quot;,               \
     &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,          \
     &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,          \
     &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;|&quot;, &quot;|&quot;, &quot;|&quot;,                \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;+&quot;, &quot;+&quot;, &quot;+&quot;, &quot;+&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;+&quot;, &quot;-&quot;, &quot;+&quot;, &quot;+&quot;,           \
    &quot;+&quot;, &quot;+&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4752" column="9" bodyfile="src/fort.c" bodystart="4752" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a58a32c54547e08b469930b07ec56d9d4" prot="public" static="no">
        <name>SIMPLE_STYLE</name>
        <initializer>    {           \
    /* border_chars */            \
    {                             \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot; &quot;, &quot;\0&quot;,              \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot; &quot;, &quot;\0&quot;,              \
    &quot;\0&quot;, &quot;-&quot;, &quot; &quot;, &quot;\0&quot;,         \
    &quot;\0&quot;, &quot; &quot;, &quot; &quot;, &quot;\0&quot;,         \
    &quot; &quot;, &quot;-&quot;, &quot; &quot;, &quot;-&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;\0&quot;, &quot;-&quot;, &quot; &quot;, &quot;\0&quot;,         \
    &quot; &quot;, &quot; &quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4776" column="9" bodyfile="src/fort.c" bodystart="4776" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ad95c8d93533ada8f96019637c188f641" prot="public" static="no">
        <name>PLAIN_STYLE</name>
        <initializer>    {            \
    /* border_chars */            \
    {                             \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot; &quot;, &quot;\0&quot;,              \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;\0&quot;, &quot;-&quot;, &quot;-&quot;, &quot;\0&quot;,         \
    &quot;\0&quot;, &quot; &quot;, &quot;\0&quot;,              \
    &quot;\0&quot;, &quot;-&quot;, &quot;-&quot;, &quot;\0&quot;,         \
    &quot;\0&quot;, &quot;-&quot;, &quot;-&quot;, &quot;\0&quot;,         \
    &quot; &quot;, &quot;-&quot;, &quot; &quot;, &quot;-&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;\0&quot;, &quot;-&quot;, &quot;-&quot;, &quot;\0&quot;,         \
    &quot;-&quot;, &quot;-&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4800" column="9" bodyfile="src/fort.c" bodystart="4800" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a40f9b235882059f09a69c951205869fe" prot="public" static="no">
        <name>DOT_STYLE</name>
        <initializer>    {              \
    /* border_chars */            \
    {                             \
     &quot;.&quot;, &quot;.&quot;, &quot;.&quot;, &quot;.&quot;,          \
     &quot;:&quot;, &quot;:&quot;, &quot;:&quot;,               \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,      \
     &quot;:&quot;, &quot;.&quot;, &quot;:&quot;, &quot;:&quot;,          \
     &quot;+&quot;, &quot;:&quot;, &quot;+&quot;, &quot;:&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;.&quot;, &quot;.&quot;, &quot;.&quot;, &quot;.&quot;,           \
    &quot;:&quot;, &quot;:&quot;, &quot;:&quot;,                \
    &quot;:&quot;, &quot;.&quot;, &quot;:&quot;, &quot;:&quot;,           \
    &quot;:&quot;, &quot;.&quot;, &quot;:&quot;, &quot;:&quot;,           \
    &quot;+&quot;, &quot;.&quot;, &quot;+&quot;, &quot;.&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;:&quot;, &quot;.&quot;, &quot;:&quot;, &quot;:&quot;,           \
    &quot;:&quot;, &quot;:&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4824" column="9" bodyfile="src/fort.c" bodystart="4824" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ad19626848a66b2a7f33ae0e16db45b7f" prot="public" static="no">
        <name>EMPTY_STYLE</name>
        <initializer>    {            \
    /* border_chars */            \
    {                             \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,      \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,            \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,      \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,      \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,      \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,             \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;\0&quot;, &quot; &quot;, &quot;\0 &quot;, &quot;\0&quot;,       \
    &quot;\0&quot;, &quot;\0&quot;,                   \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4848" column="9" bodyfile="src/fort.c" bodystart="4848" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a34458dc60b60037c1df5622184763bd1" prot="public" static="no">
        <name>EMPTY2_STYLE</name>
        <initializer>    {            \
    /* border_chars */            \
    {                             \
     &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;,          \
     &quot; &quot;, &quot; &quot;, &quot; &quot;,               \
     &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,      \
     &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;,          \
     &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;,           \
    &quot; &quot;, &quot; &quot;, &quot; &quot;,                \
    &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;, &quot;\0&quot;,       \
    &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;,           \
    &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot; &quot;, &quot; &quot;, &quot; &quot;, &quot; &quot;,           \
    &quot; &quot;, &quot; &quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4873" column="9" bodyfile="src/fort.c" bodystart="4873" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ac551f30a3d753dbce194e2d5c50a7950" prot="public" static="no">
        <name>SOLID_STYLE</name>
        <initializer>    {            \
    /* border_chars */            \
    {                             \
     &quot;┌&quot;, &quot;─&quot;, &quot;┬&quot;, &quot;┐&quot;,          \
     &quot;│&quot;, &quot;│&quot;, &quot;│&quot;,               \
     &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,              \
     &quot;└&quot;, &quot;─&quot;, &quot;┴&quot;, &quot;┘&quot;,          \
     &quot;│&quot;, &quot;─&quot;, &quot;│&quot;, &quot;─&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;┌&quot;, &quot;─&quot;, &quot;┬&quot;, &quot;┐&quot;,           \
    &quot;│&quot;, &quot;│&quot;, &quot;│&quot;,                \
    &quot;├&quot;, &quot;─&quot;, &quot;┼&quot;, &quot;┤&quot;,           \
    &quot;└&quot;, &quot;─&quot;, &quot;┴&quot;, &quot;┘&quot;,           \
    &quot;┼&quot;, &quot;┬&quot;, &quot;┼&quot;, &quot;┴&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;├&quot;, &quot;─&quot;, &quot;┼&quot;, &quot;┤&quot;,           \
    &quot;┬&quot;, &quot;┴&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4897" column="9" bodyfile="src/fort.c" bodystart="4897" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1adb4ab5efdfbfd2cfb08cfdb595c4f90a" prot="public" static="no">
        <name>SOLID_ROUND_STYLE</name>
        <initializer>    {      \
    /* border_chars */            \
    {                             \
     &quot;╭&quot;, &quot;─&quot;, &quot;┬&quot;, &quot;╮&quot;,          \
     &quot;│&quot;, &quot;│&quot;, &quot;│&quot;,               \
     &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,              \
     &quot;╰&quot;, &quot;─&quot;, &quot;┴&quot;, &quot;╯&quot;,          \
     &quot;│&quot;, &quot;─&quot;, &quot;│&quot;, &quot;─&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;╭&quot;, &quot;─&quot;, &quot;┬&quot;, &quot;╮&quot;,           \
    &quot;│&quot;, &quot;│&quot;, &quot;│&quot;,                \
    &quot;├&quot;, &quot;─&quot;, &quot;┼&quot;, &quot;┤&quot;,           \
    &quot;╰&quot;, &quot;─&quot;, &quot;┴&quot;, &quot;╯&quot;,           \
    &quot;┼&quot;, &quot;┬&quot;, &quot;┼&quot;, &quot;┴&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;├&quot;, &quot;─&quot;, &quot;┼&quot;, &quot;┤&quot;,           \
    &quot;┬&quot;, &quot;┴&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4921" column="9" bodyfile="src/fort.c" bodystart="4921" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1ad112a91d6823b6b59b1791ceb6445a93" prot="public" static="no">
        <name>NICE_STYLE</name>
        <initializer>    {             \
    /* border_chars */            \
    {                             \
     &quot;╔&quot;, &quot;═&quot;, &quot;╦&quot;, &quot;╗&quot;,          \
     &quot;║&quot;, &quot;║&quot;, &quot;║&quot;,               \
     &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,              \
     &quot;╚&quot;, &quot;═&quot;, &quot;╩&quot;, &quot;╝&quot;,          \
     &quot;┣&quot;, &quot;┻&quot;, &quot;┣&quot;, &quot;┳&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;╔&quot;, &quot;═&quot;, &quot;╦&quot;, &quot;╗&quot;,           \
    &quot;║&quot;, &quot;║&quot;, &quot;║&quot;,                \
    &quot;╠&quot;, &quot;═&quot;, &quot;╬&quot;, &quot;╣&quot;,           \
    &quot;╚&quot;, &quot;═&quot;, &quot;╩&quot;, &quot;╝&quot;,           \
    &quot;┣&quot;, &quot;╦&quot;, &quot;┣&quot;, &quot;╩&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;╟&quot;, &quot;─&quot;, &quot;╫&quot;, &quot;╢&quot;,           \
    &quot;╥&quot;, &quot;╨&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4945" column="9" bodyfile="src/fort.c" bodystart="4945" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a6c3842c70b6f4100cd5973e7a288c2d4" prot="public" static="no">
        <name>DOUBLE_STYLE</name>
        <initializer>    {         \
    /* border_chars */          \
    {                           \
     &quot;╔&quot;, &quot;═&quot;, &quot;╦&quot;, &quot;╗&quot;,        \
     &quot;║&quot;, &quot;║&quot;, &quot;║&quot;,             \
     &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,            \
     &quot;╚&quot;, &quot;═&quot;, &quot;╩&quot;, &quot;╝&quot;,        \
     &quot;┣&quot;, &quot;┻&quot;, &quot;┣&quot;, &quot;┳&quot;,        \
    },                          \
    /* header_border_chars */   \
    {                           \
    &quot;╔&quot;, &quot;═&quot;, &quot;╦&quot;, &quot;╗&quot;,         \
    &quot;║&quot;, &quot;║&quot;, &quot;║&quot;,              \
    &quot;╠&quot;, &quot;═&quot;, &quot;╬&quot;, &quot;╣&quot;,         \
    &quot;╚&quot;, &quot;═&quot;, &quot;╩&quot;, &quot;╝&quot;,         \
    &quot;┣&quot;, &quot;╦&quot;, &quot;┣&quot;, &quot;╩&quot;,         \
    },                          \
    /* separator_chars */       \
    {                           \
    &quot;╠&quot;, &quot;═&quot;, &quot;╬&quot;, &quot;╣&quot;,         \
    &quot;╦&quot;, &quot;╩&quot;,                   \
    },                          \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4969" column="9" bodyfile="src/fort.c" bodystart="4969" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a2977b3d23b0acedf98ddb75cfa3714c2" prot="public" static="no">
        <name>DOUBLE2_STYLE</name>
        <initializer>    {          \
    /* border_chars */            \
    {                             \
     &quot;╔&quot;, &quot;═&quot;, &quot;╤&quot;, &quot;╗&quot;,          \
     &quot;║&quot;, &quot;│&quot;, &quot;║&quot;,               \
     &quot;╟&quot;, &quot;─&quot;, &quot;┼&quot;, &quot;╢&quot;,          \
     &quot;╚&quot;, &quot;═&quot;, &quot;╧&quot;, &quot;╝&quot;,          \
     &quot;├&quot;, &quot;┬&quot;, &quot;┤&quot;, &quot;┴&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;╔&quot;, &quot;═&quot;, &quot;╤&quot;, &quot;╗&quot;,           \
    &quot;║&quot;, &quot;│&quot;, &quot;║&quot;,                \
    &quot;╠&quot;, &quot;═&quot;, &quot;╪&quot;, &quot;╣&quot;,           \
    &quot;╚&quot;, &quot;═&quot;, &quot;╧&quot;, &quot;╝&quot;,           \
    &quot;├&quot;, &quot;╤&quot;, &quot;┤&quot;, &quot;╧&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;╠&quot;, &quot;═&quot;, &quot;╪&quot;, &quot;╣&quot;,           \
    &quot;╤&quot;, &quot;╧&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4996" column="9" bodyfile="src/fort.c" bodystart="4996" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a818cdb05e2e0ee60b8693016efdcebff" prot="public" static="no">
        <name>BOLD_STYLE</name>
        <initializer>    {             \
    /* border_chars */            \
    {                             \
     &quot;┏&quot;, &quot;━&quot;, &quot;┳&quot;, &quot;┓&quot;,          \
     &quot;┃&quot;, &quot;┃&quot;, &quot;┃&quot;,               \
     &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,              \
     &quot;┗&quot;, &quot;━&quot;, &quot;┻&quot;, &quot;┛&quot;,          \
     &quot;┣&quot;, &quot;┻&quot;, &quot;┣&quot;, &quot;┳&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;┏&quot;, &quot;━&quot;, &quot;┳&quot;, &quot;┓&quot;,           \
    &quot;┃&quot;, &quot;┃&quot;, &quot;┃&quot;,                \
    &quot;┣&quot;, &quot;━&quot;, &quot;╋&quot;, &quot;┫&quot;,           \
    &quot;┗&quot;, &quot;━&quot;, &quot;┻&quot;, &quot;┛&quot;,           \
    &quot;┣&quot;, &quot;┳&quot;, &quot;┣&quot;, &quot;┻&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;┣&quot;, &quot;━&quot;, &quot;╋&quot;, &quot;┫&quot;,           \
    &quot;┳&quot;, &quot;┻&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5021" column="9" bodyfile="src/fort.c" bodystart="5021" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1aa6f6720b767dd4451f95654b138af84c" prot="public" static="no">
        <name>BOLD2_STYLE</name>
        <initializer>    {            \
    /* border_chars */            \
    {                             \
     &quot;┏&quot;, &quot;━&quot;, &quot;┯&quot;, &quot;┓&quot;,          \
     &quot;┃&quot;, &quot;│&quot;, &quot;┃&quot;,               \
     &quot;┠&quot;, &quot;─&quot;, &quot;┼&quot;, &quot;┨&quot;,          \
     &quot;┗&quot;, &quot;━&quot;, &quot;┷&quot;, &quot;┛&quot;,          \
     &quot;┣&quot;, &quot;┬&quot;, &quot;┣&quot;, &quot;┴&quot;,          \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;┏&quot;, &quot;━&quot;, &quot;┯&quot;, &quot;┓&quot;,           \
    &quot;┃&quot;, &quot;│&quot;, &quot;┃&quot;,                \
    &quot;┣&quot;, &quot;━&quot;, &quot;┿&quot;, &quot;┫&quot;,           \
    &quot;┗&quot;, &quot;━&quot;, &quot;┷&quot;, &quot;┛&quot;,           \
    &quot;┣&quot;, &quot;┯&quot;, &quot;┣&quot;, &quot;┷&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;┣&quot;, &quot;━&quot;, &quot;┿&quot;, &quot;┫&quot;,           \
    &quot;┯&quot;, &quot;┷&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5045" column="9" bodyfile="src/fort.c" bodystart="5045" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a9307749f2660d6c9ac81a0f3ae89a0de" prot="public" static="no">
        <name>FRAME_STYLE</name>
        <initializer>    {             \
    /* border_chars */            \
    {                             \
     &quot;▛&quot;, &quot;▀&quot;, &quot;▀&quot;, &quot;▜&quot;,          \
     &quot;▌&quot;, &quot;┃&quot;, &quot;▐&quot;,               \
     &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;,              \
     &quot;▙&quot;, &quot;▄&quot;, &quot;▄&quot;, &quot;▟&quot;,          \
     &quot;┣&quot;, &quot;━&quot;, &quot;┣&quot;, &quot;━&quot;           \
    },                            \
    /* header_border_chars */     \
    {                             \
    &quot;▛&quot;, &quot;▀&quot;, &quot;▀&quot;, &quot;▜&quot;,           \
    &quot;▌&quot;, &quot;┃&quot;, &quot;▐&quot;,                \
    &quot;▌&quot;, &quot;━&quot;, &quot;╋&quot;, &quot;▐&quot;,           \
    &quot;▙&quot;, &quot;▄&quot;, &quot;▄&quot;, &quot;▟&quot;,           \
    &quot;┣&quot;, &quot;━&quot;, &quot;┣&quot;, &quot;━&quot;,           \
    },                            \
    /* separator_chars */         \
    {                             \
    &quot;▌&quot;, &quot;━&quot;, &quot;╋&quot;, &quot;▐&quot;,           \
    &quot;╋&quot;, &quot;╋&quot;,                     \
    },                            \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5069" column="9" bodyfile="src/fort.c" bodystart="5069" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a1acd15654d584ab951286e96248e5c9c" prot="public" static="no">
        <name>STRCHR</name>
        <initializer>strchr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5793" column="9"/>
      </memberdef>
      <memberdef kind="define" id="fort_8c_1a1acd15654d584ab951286e96248e5c9c" prot="public" static="no">
        <name>STRCHR</name>
        <initializer>wcschr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5882" column="9"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="fort_8c_1a637b893c0bf4371273b9746c62b58879" prot="public" static="no" strong="no">
        <type></type>
        <name>f_get_policy</name>
        <enumvalue id="fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a" prot="public">
          <name>CREATE_ON_NULL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc" prot="public">
          <name>DONT_CREATE_ON_NULL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="96" column="1" bodyfile="src/fort.c" bodystart="96" bodyend="99"/>
      </memberdef>
      <memberdef kind="enum" id="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85" prot="public" static="no" strong="no">
        <type></type>
        <name>f_bool</name>
        <enumvalue id="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a7d1c5eb5c19fe2c534aa6fb6605927e4" prot="public">
          <name>F_FALSE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a42654a58e5b0bffec1ba32aef39af469" prot="public">
          <name>F_TRUE</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="101" column="1" bodyfile="src/fort.c" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="enum" id="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" prot="public" static="no" strong="no">
        <type></type>
        <name>f_cell_type</name>
        <enumvalue id="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc" prot="public">
          <name>COMMON_CELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" prot="public">
          <name>GROUP_MASTER_CELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" prot="public">
          <name>GROUP_SLAVE_CELL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="106" column="1" bodyfile="src/fort.c" bodystart="106" bodyend="110"/>
      </memberdef>
      <memberdef kind="enum" id="fort_8c_1af04f170451a6d8600ba71c318b2b6027" prot="public" static="no" strong="no">
        <type></type>
        <name>f_geometry_type</name>
        <enumvalue id="fort_8c_1af04f170451a6d8600ba71c318b2b6027a649c4250d469605327eeddcfb36bf296" prot="public">
          <name>VISIBLE_GEOMETRY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1af04f170451a6d8600ba71c318b2b6027ae4419d33092d617c9f99d6ac234e7a33" prot="public">
          <name>INTERN_REPR_GEOMETRY</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="112" column="1" bodyfile="src/fort.c" bodystart="112" bodyend="115"/>
      </memberdef>
      <memberdef kind="enum" id="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" prot="public" static="no" strong="no">
        <type></type>
        <name>f_string_type</name>
        <enumvalue id="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" prot="public">
          <name>CHAR_BUF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" prot="public">
          <name>W_CHAR_BUF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" prot="public">
          <name>UTF8_BUF</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="117" column="1" bodyfile="src/fort.c" bodystart="117" bodyend="125"/>
      </memberdef>
      <memberdef kind="enum" id="fort_8c_1a114ae9015942e72d33913dbca07d18f5" prot="public" static="no" strong="no">
        <type></type>
        <name>f_hor_separator_pos</name>
        <enumvalue id="fort_8c_1a114ae9015942e72d33913dbca07d18f5a20da53267127001ec3320abe91fa783e" prot="public">
          <name>TOP_SEPARATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a114ae9015942e72d33913dbca07d18f5a23c6c5d09adaa5a3c4176c0b67263769" prot="public">
          <name>INSIDE_SEPARATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a114ae9015942e72d33913dbca07d18f5a84ba29422768fd8057cd7d8f3239e59c" prot="public">
          <name>BOTTOM_SEPARATOR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1963" column="1" bodyfile="src/fort.c" bodystart="1963" bodyend="1967"/>
      </memberdef>
      <memberdef kind="enum" id="fort_8c_1aeb26e59c445583e1b4924086f650bc29" prot="public" static="no" strong="no">
        <type></type>
        <name>f_border_item_pos</name>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08" prot="public">
          <name>TL_bip</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4" prot="public">
          <name>TT_bip</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b" prot="public">
          <name>TV_bip</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac" prot="public">
          <name>TR_bip</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a889a1c24be63ae17b128192d9dec2d3a" prot="public">
          <name>LL_bip</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29aad183d45427b545df2fd25ed9ecccc8c" prot="public">
          <name>IV_bip</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a062e9c55d54121d574a4b8f244c2d964" prot="public">
          <name>RR_bip</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056" prot="public">
          <name>LH_bip</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445" prot="public">
          <name>IH_bip</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1496ce55ebf0dc1c90c6f8abd60ea272" prot="public">
          <name>II_bip</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5" prot="public">
          <name>RH_bip</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6" prot="public">
          <name>BL_bip</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472" prot="public">
          <name>BB_bip</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517" prot="public">
          <name>BV_bip</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677" prot="public">
          <name>BR_bip</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a6e524723eac5b695737b627d74ac77fb" prot="public">
          <name>LI_bip</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a9c128d27d24141f9c2df703a42521835" prot="public">
          <name>TI_bip</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a0841d0344e52968b3d6dd1bfee6f98d2" prot="public">
          <name>RI_bip</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a46945f957ff717cbf501e5a59d0f8e1d" prot="public">
          <name>BI_bip</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" prot="public">
          <name>BORDER_ITEM_POS_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1969" column="1" bodyfile="src/fort.c" bodystart="1969" bodyend="1995"/>
      </memberdef>
      <memberdef kind="enum" id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35" prot="public" static="no" strong="no">
        <type></type>
        <name>f_separator_item_pos</name>
        <enumvalue id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5bdf3707d8c0c144baceb9b432b080b" prot="public">
          <name>LH_sip</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a6edb298364e9b2705453e4fd3d764894" prot="public">
          <name>IH_sip</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35ae795b75c17ff1dc6b1d7a94e0db120e6" prot="public">
          <name>II_sip</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a9ef36a4ef68f74f53f7153992ac80c2e" prot="public">
          <name>RH_sip</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a4dd526ac15d2f95dda29b58a7969250c" prot="public">
          <name>TI_sip</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5c00304dc6ed19e75613b993f3b8510" prot="public">
          <name>BI_sip</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a1011b2e48e304397b1f174798923779c" prot="public">
          <name>SEPARATOR_ITEM_POS_SIZE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1998" column="1" bodyfile="src/fort.c" bodystart="1998" bodyend="2008"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="fort_8c_1a5e5d59807caf98214d772b0952b8439c" prot="public" static="no">
        <type>struct <ref refid="structf__string__view" kindref="compound">f_string_view</ref></type>
        <definition>typedef struct f_string_view f_string_view_t</definition>
        <argsstring></argsstring>
        <name>f_string_view_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="63" column="13" bodyfile="src/fort.c" bodystart="140" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" prot="public" static="no">
        <type>int</type>
        <definition>typedef int f_status</definition>
        <argsstring></argsstring>
        <name>f_status</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" prot="public" static="no">
        <type>struct <ref refid="structf__table__properties" kindref="compound">f_table_properties</ref></type>
        <definition>typedef struct f_table_properties f_table_properties_t</definition>
        <argsstring></argsstring>
        <name>f_table_properties_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" prot="public" static="no">
        <type>struct <ref refid="structf__vector" kindref="compound">f_vector</ref></type>
        <definition>typedef struct f_vector f_vector_t</definition>
        <argsstring></argsstring>
        <name>f_vector_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" prot="public" static="no">
        <type>struct <ref refid="structf__cell" kindref="compound">f_cell</ref></type>
        <definition>typedef struct f_cell f_cell_t</definition>
        <argsstring></argsstring>
        <name>f_cell_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="169" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" prot="public" static="no">
        <type>struct <ref refid="structf__string__buffer" kindref="compound">f_string_buffer</ref></type>
        <definition>typedef struct f_string_buffer f_string_buffer_t</definition>
        <argsstring></argsstring>
        <name>f_string_buffer_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="170" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" prot="public" static="no">
        <type>struct <ref refid="structf__row" kindref="compound">f_row</ref></type>
        <definition>typedef struct f_row f_row_t</definition>
        <argsstring></argsstring>
        <name>f_row_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="171" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a5527210203ffec9c5b8018dd133d8e13" prot="public" static="no">
        <type>struct <ref refid="structf__separator" kindref="compound">f_separator</ref></type>
        <definition>typedef struct f_separator f_separator_t</definition>
        <argsstring></argsstring>
        <name>f_separator_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="172" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a411e98c8a879520a2ccf789f62d10e85" prot="public" static="no">
        <type>struct <ref refid="structf__context" kindref="compound">f_context</ref></type>
        <definition>typedef struct f_context f_context_t</definition>
        <argsstring></argsstring>
        <name>f_context_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="179" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1afb581d944956bc8e61433744691e7efd" prot="public" static="no">
        <type>struct <ref refid="structf__conv__context" kindref="compound">f_conv_context</ref></type>
        <definition>typedef struct f_conv_context f_conv_context_t</definition>
        <argsstring></argsstring>
        <name>f_conv_context_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="153" column="13" bodyfile="src/fort.c" bodystart="195" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" prot="public" static="no">
        <type>int32_t</type>
        <definition>typedef int32_t utf8_int32_t</definition>
        <argsstring></argsstring>
        <name>utf8_int32_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="430" column="17" bodyfile="src/fort.c" bodystart="430" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122" prot="public" static="no">
        <type>struct <ref refid="structf__cell__props" kindref="compound">f_cell_props</ref></type>
        <definition>typedef struct f_cell_props f_cell_props_t</definition>
        <argsstring></argsstring>
        <name>f_cell_props_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1885" column="6" bodyfile="src/fort.c" bodystart="1909" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" prot="public" static="no">
        <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref></type>
        <definition>typedef f_vector_t f_cell_prop_container_t</definition>
        <argsstring></argsstring>
        <name>f_cell_prop_container_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1910" column="20" bodyfile="src/fort.c" bodystart="1910" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3" prot="public" static="no">
        <type>struct <ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties</ref></type>
        <definition>typedef struct fort_entire_table_properties fort_entire_table_properties_t</definition>
        <argsstring></argsstring>
        <name>fort_entire_table_properties_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1931" column="10" bodyfile="src/fort.c" bodystart="2040" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="fort_8c_1a75ae5722df432140a46c9ff1fe069570" prot="public" static="no" mutable="no">
        <type>char</type>
        <definition>char g_col_separator</definition>
        <argsstring></argsstring>
        <name>g_col_separator</name>
        <initializer>= <ref refid="fort_8c_1a3abeff93bbe13043e19c4bd8b6dd30df" kindref="member">FORT_DEFAULT_COL_SEPARATOR</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3769" column="6" bodyfile="src/fort.c" bodystart="3769" bodyend="-1" declfile="src/fort.c" declline="63" declcolumn="13"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a792989ae317c7b690425af8179d88466" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* fort_malloc)(size_t size)</definition>
        <argsstring>)(size_t size)</argsstring>
        <name>fort_malloc</name>
        <initializer>= &amp;local_malloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3801" column="1" bodyfile="src/fort.c" bodystart="3801" bodyend="-1" declfile="src/fort.c" declline="202" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" prot="public" static="no" mutable="no">
        <type>void(*</type>
        <definition>void(* fort_free)(void *ptr)</definition>
        <argsstring>)(void *ptr)</argsstring>
        <name>fort_free</name>
        <initializer>= &amp;local_free</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3802" column="1" bodyfile="src/fort.c" bodystart="3802" bodyend="-1" declfile="src/fort.c" declline="203" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* fort_calloc)(size_t nmemb, size_t size)</definition>
        <argsstring>)(size_t nmemb, size_t size)</argsstring>
        <name>fort_calloc</name>
        <initializer>= &amp;local_calloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3803" column="1" bodyfile="src/fort.c" bodystart="3803" bodyend="-1" declfile="src/fort.c" declline="204" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1aac796d096112928799fe930648dc0da4" prot="public" static="no" mutable="no">
        <type>void *(*</type>
        <definition>void *(* fort_realloc)(void *ptr, size_t size)</definition>
        <argsstring>)(void *ptr, size_t size)</argsstring>
        <name>fort_realloc</name>
        <initializer>= &amp;local_realloc</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3804" column="1" bodyfile="src/fort.c" bodystart="3804" bodyend="-1" declfile="src/fort.c" declline="205" declcolumn="8"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a1551acd214a753796743eb0272395869" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_BASIC_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_BASIC_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a25b25babc27e11fbe4cfae21995881e6" kindref="member">BASIC_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5094" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a18048056d8d37f0485dfc4480266b407" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_BASIC2_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_BASIC2_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a84323253628c81be9d93a0d6fadc891c" kindref="member">BASIC2_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5095" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ac35b24f98659298aafaac4f782b35908" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_SIMPLE_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_SIMPLE_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a58a32c54547e08b469930b07ec56d9d4" kindref="member">SIMPLE_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5096" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1afa51b0acbd3c7ce38f236fbd8accd283" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_PLAIN_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_PLAIN_STYLE</name>
        <initializer>= <ref refid="fort_8c_1ad95c8d93533ada8f96019637c188f641" kindref="member">PLAIN_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5097" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ab5cfb34391ceae55c3adc0b856e2d3d1" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_DOT_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_DOT_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a40f9b235882059f09a69c951205869fe" kindref="member">DOT_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5098" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a58948e002a53e826043f3f1fd0efa626" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_EMPTY_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_EMPTY_STYLE</name>
        <initializer>= <ref refid="fort_8c_1ad19626848a66b2a7f33ae0e16db45b7f" kindref="member">EMPTY_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5099" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1acd0057b56b50d3772d93a58a345f8498" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_EMPTY2_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_EMPTY2_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a34458dc60b60037c1df5622184763bd1" kindref="member">EMPTY2_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5100" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ab60c22c456490dc1c2b2581206aade7f" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_SOLID_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_SOLID_STYLE</name>
        <initializer>= <ref refid="fort_8c_1ac551f30a3d753dbce194e2d5c50a7950" kindref="member">SOLID_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5101" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1afaadc6fcd0ea52e9bea97f198623dd34" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_SOLID_ROUND_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_SOLID_ROUND_STYLE</name>
        <initializer>= <ref refid="fort_8c_1adb4ab5efdfbfd2cfb08cfdb595c4f90a" kindref="member">SOLID_ROUND_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5102" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ad07ecf56923564f20f54de569baa4c31" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_NICE_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_NICE_STYLE</name>
        <initializer>= <ref refid="fort_8c_1ad112a91d6823b6b59b1791ceb6445a93" kindref="member">NICE_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5103" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a8bea0c4f43e34eccd50a38cf7cf275d9" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_DOUBLE_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_DOUBLE_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a6c3842c70b6f4100cd5973e7a288c2d4" kindref="member">DOUBLE_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5104" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ad7b86e58f7e8a1871d31e9d36e1afe8e" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_DOUBLE2_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_DOUBLE2_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a2977b3d23b0acedf98ddb75cfa3714c2" kindref="member">DOUBLE2_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5105" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1adce884980314dc4c5f6b5d19b6c9f0ae" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_BOLD_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_BOLD_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a818cdb05e2e0ee60b8693016efdcebff" kindref="member">BOLD_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5106" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a2e98d54b72c590832a3d252dd43f68e7" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_BOLD2_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_BOLD2_STYLE</name>
        <initializer>= <ref refid="fort_8c_1aa6f6720b767dd4451f95654b138af84c" kindref="member">BOLD2_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5107" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a1ee29f5ac5af7b2100ca44d999f65493" prot="public" static="no" mutable="no">
        <type>struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref></type>
        <definition>struct fort_border_style FORT_FRAME_STYLE</definition>
        <argsstring></argsstring>
        <name>FORT_FRAME_STYLE</name>
        <initializer>= <ref refid="fort_8c_1a9307749f2660d6c9ac81a0f3ae89a0de" kindref="member">FRAME_STYLE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="5108" bodyend="-1" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a59d265136eda43200385d8b5f04ecd2c" prot="public" static="no" mutable="no">
        <type><ref refid="fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3" kindref="member">fort_entire_table_properties_t</ref></type>
        <definition>fort_entire_table_properties_t g_entire_table_properties</definition>
        <argsstring></argsstring>
        <name>g_entire_table_properties</name>
        <initializer>= {
    0, 
    0, 
    0, 
    0, 
    <ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842" kindref="member">FT_STRATEGY_REPLACE</ref>, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5112" column="32" bodyfile="src/fort.c" bodystart="5112" bodyend="-1" declfile="src/fort.c" declline="2041" declcolumn="39"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a7e383842a355b23739ccb9bb081cf543" prot="public" static="no" mutable="no">
        <type><ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref></type>
        <definition>f_table_properties_t g_table_properties</definition>
        <argsstring></argsstring>
        <name>g_table_properties</name>
        <initializer>= {
    
    <ref refid="fort_8c_1a25b25babc27e11fbe4cfae21995881e6" kindref="member">BASIC_STYLE</ref>,
    NULL,     
    
    {
        0, 
        0, 
        0, 
        0,  
        <ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842" kindref="member">FT_STRATEGY_REPLACE</ref>, 
    }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5180" column="22" bodyfile="src/fort.c" bodystart="5180" bodyend="-1" declfile="src/fort.c" declline="2054" declcolumn="29"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a949bcc5ca810d27e6571bf25a23969d6" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* empty_str_arr[]</definition>
        <argsstring>[]</argsstring>
        <name>empty_str_arr</name>
        <initializer>= {&quot;&quot;, (const char *)L&quot;&quot;, &quot;&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3309" column="12" bodyfile="src/fort.c" bodystart="3309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ae712501287780ce0f9432a9f6b3ee182" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structfort__border__style" kindref="compound">fort_border_style</ref> *</type>
        <definition>const struct fort_border_style* built_in_styles[]</definition>
        <argsstring>[]</argsstring>
        <name>built_in_styles</name>
        <initializer>= {
    &amp;<ref refid="fort_8c_1a1551acd214a753796743eb0272395869" kindref="member">FORT_BASIC_STYLE</ref>,
    &amp;<ref refid="fort_8c_1a18048056d8d37f0485dfc4480266b407" kindref="member">FORT_BASIC2_STYLE</ref>,
    &amp;<ref refid="fort_8c_1ac35b24f98659298aafaac4f782b35908" kindref="member">FORT_SIMPLE_STYLE</ref>,
    &amp;<ref refid="fort_8c_1afa51b0acbd3c7ce38f236fbd8accd283" kindref="member">FORT_PLAIN_STYLE</ref>,
    &amp;<ref refid="fort_8c_1ab5cfb34391ceae55c3adc0b856e2d3d1" kindref="member">FORT_DOT_STYLE</ref>,
    &amp;<ref refid="fort_8c_1a58948e002a53e826043f3f1fd0efa626" kindref="member">FORT_EMPTY_STYLE</ref>,
    &amp;<ref refid="fort_8c_1acd0057b56b50d3772d93a58a345f8498" kindref="member">FORT_EMPTY2_STYLE</ref>,
    &amp;<ref refid="fort_8c_1ab60c22c456490dc1c2b2581206aade7f" kindref="member">FORT_SOLID_STYLE</ref>,
    &amp;<ref refid="fort_8c_1afaadc6fcd0ea52e9bea97f198623dd34" kindref="member">FORT_SOLID_ROUND_STYLE</ref>,
    &amp;<ref refid="fort_8c_1ad07ecf56923564f20f54de569baa4c31" kindref="member">FORT_NICE_STYLE</ref>,
    &amp;<ref refid="fort_8c_1a8bea0c4f43e34eccd50a38cf7cf275d9" kindref="member">FORT_DOUBLE_STYLE</ref>,
    &amp;<ref refid="fort_8c_1ad7b86e58f7e8a1871d31e9d36e1afe8e" kindref="member">FORT_DOUBLE2_STYLE</ref>,
    &amp;<ref refid="fort_8c_1adce884980314dc4c5f6b5d19b6c9f0ae" kindref="member">FORT_BOLD_STYLE</ref>,
    &amp;<ref refid="fort_8c_1a2e98d54b72c590832a3d252dd43f68e7" kindref="member">FORT_BOLD2_STYLE</ref>,
    &amp;<ref refid="fort_8c_1a1ee29f5ac5af7b2100ca44d999f65493" kindref="member">FORT_FRAME_STYLE</ref>,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3443" column="37" bodyfile="src/fort.c" bodystart="3443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1aee8b62183455c948fd67f10d93c13420" prot="public" static="yes" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref></type>
        <definition>const struct ft_border_style built_in_external_styles[BUILT_IN_STYLES_SZ]</definition>
        <argsstring>[BUILT_IN_STYLES_SZ]</argsstring>
        <name>built_in_external_styles</name>
        <initializer>= {
    {
        {&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;},
        {&quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;, &quot;&quot;},
        &quot;&quot;
    }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3443" column="37" bodyfile="src/fort.c" bodystart="3463" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a4566853be8c0cdf91ba9c3f50eb426d4" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_BASIC_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_BASIC_STYLE</name>
        <initializer>= &amp;built_in_external_styles[0]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3471" column="34" bodyfile="src/fort.c" bodystart="3471" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ab3ed5c4f1c4f7ca26b52b668fd4717f9" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_BASIC2_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_BASIC2_STYLE</name>
        <initializer>= &amp;built_in_external_styles[1]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3472" column="34" bodyfile="src/fort.c" bodystart="3472" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a7581c1fec7b7c2b88f93e3445c62424d" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_SIMPLE_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_SIMPLE_STYLE</name>
        <initializer>= &amp;built_in_external_styles[2]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3473" column="34" bodyfile="src/fort.c" bodystart="3473" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1add469a34d262e6368adaa636d1cf76b7" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_PLAIN_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_PLAIN_STYLE</name>
        <initializer>= &amp;built_in_external_styles[3]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3474" column="34" bodyfile="src/fort.c" bodystart="3474" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a148f3f2c872531fdeca8e4ace60eb258" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_DOT_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_DOT_STYLE</name>
        <initializer>= &amp;built_in_external_styles[4]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3475" column="34" bodyfile="src/fort.c" bodystart="3475" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1aa8916e07fa9a8d1f24c1e1d1e6b68838" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_EMPTY_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_EMPTY_STYLE</name>
        <initializer>= &amp;built_in_external_styles[5]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3476" column="34" bodyfile="src/fort.c" bodystart="3476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a357302cc732e53c1c7049842fc0fc3c7" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_EMPTY2_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_EMPTY2_STYLE</name>
        <initializer>= &amp;built_in_external_styles[6]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3477" column="34" bodyfile="src/fort.c" bodystart="3477" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ae4723d497ac2e6980b43ac7732e21f2d" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_SOLID_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_SOLID_STYLE</name>
        <initializer>= &amp;built_in_external_styles[7]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3478" column="34" bodyfile="src/fort.c" bodystart="3478" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1aedcc877521b55c87758949920ef0ee96" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_SOLID_ROUND_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_SOLID_ROUND_STYLE</name>
        <initializer>= &amp;built_in_external_styles[8]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3479" column="34" bodyfile="src/fort.c" bodystart="3479" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a91de4cab0e239a201fa2a7dc961b2fdc" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_NICE_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_NICE_STYLE</name>
        <initializer>= &amp;built_in_external_styles[9]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3480" column="34" bodyfile="src/fort.c" bodystart="3480" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ad0e15260ea4a4c66f0bfa2c82b889107" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_DOUBLE_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_DOUBLE_STYLE</name>
        <initializer>= &amp;built_in_external_styles[10]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3481" column="34" bodyfile="src/fort.c" bodystart="3481" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a23314491db1204b8654f8cd610692260" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_DOUBLE2_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_DOUBLE2_STYLE</name>
        <initializer>= &amp;built_in_external_styles[11]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3482" column="34" bodyfile="src/fort.c" bodystart="3482" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1af392ad3ae759382d95921e1efb652744" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_BOLD_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_BOLD_STYLE</name>
        <initializer>= &amp;built_in_external_styles[12]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3483" column="34" bodyfile="src/fort.c" bodystart="3483" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a7b82fd38c92a289fc641d3666684bcd4" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_BOLD2_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_BOLD2_STYLE</name>
        <initializer>= &amp;built_in_external_styles[13]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3484" column="34" bodyfile="src/fort.c" bodystart="3484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1aef91486de193b4dfe511a992f9b02bb9" prot="public" static="no" mutable="no">
        <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *const</type>
        <definition>const struct ft_border_style* const FT_FRAME_STYLE</definition>
        <argsstring></argsstring>
        <name>FT_FRAME_STYLE</name>
        <initializer>= &amp;built_in_external_styles[14]</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3485" column="34" bodyfile="src/fort.c" bodystart="3485" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1ac0222cef1ceced4be40f890e21113a8d" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* fg_colors[]</definition>
        <argsstring>[]</argsstring>
        <name>fg_colors</name>
        <initializer>= {
    &quot;&quot;,
    &quot;\033[30m&quot;,
    &quot;\033[31m&quot;,
    &quot;\033[32m&quot;,
    &quot;\033[33m&quot;,
    &quot;\033[34m&quot;,
    &quot;\033[35m&quot;,
    &quot;\033[36m&quot;,
    &quot;\033[37m&quot;,
    &quot;\033[90m&quot;,
    &quot;\033[91m&quot;,
    &quot;\033[92m&quot;,
    &quot;\033[93m&quot;,
    &quot;\033[94m&quot;,
    &quot;\033[95m&quot;,
    &quot;\033[96m&quot;,
    &quot;\033[97m&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4248" column="19" bodyfile="src/fort.c" bodystart="4248" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a10b4b2b46564dc2792146989172f0baa" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* bg_colors[]</definition>
        <argsstring>[]</argsstring>
        <name>bg_colors</name>
        <initializer>= {
    &quot;&quot;,
    &quot;\033[40m&quot;,
    &quot;\033[41m&quot;,
    &quot;\033[42m&quot;,
    &quot;\033[43m&quot;,
    &quot;\033[44m&quot;,
    &quot;\033[45m&quot;,
    &quot;\033[46m&quot;,
    &quot;\033[47m&quot;,
    &quot;\033[100m&quot;,
    &quot;\033[101m&quot;,
    &quot;\033[102m&quot;,
    &quot;\033[103m&quot;,
    &quot;\033[104m&quot;,
    &quot;\033[105m&quot;,
    &quot;\033[106m&quot;,
    &quot;\033[107m&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4268" column="19" bodyfile="src/fort.c" bodystart="4268" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a8f0c280bac6f4ead41aa2d35759bdcf0" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* text_styles[]</definition>
        <argsstring>[]</argsstring>
        <name>text_styles</name>
        <initializer>= {
    &quot;&quot;,
    &quot;\033[1m&quot;,
    &quot;\033[2m&quot;,
    &quot;\033[3m&quot;,
    &quot;\033[4m&quot;,
    &quot;\033[5m&quot;,
    &quot;\033[7m&quot;,
    &quot;\033[8m&quot;,
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4288" column="19" bodyfile="src/fort.c" bodystart="4288" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1af1e3464b6c3585cc7062e1bdac52d5f5" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t n_fg_colors</definition>
        <argsstring></argsstring>
        <name>n_fg_colors</name>
        <initializer>= sizeof(fg_colors) / sizeof(fg_colors[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4301" column="21" bodyfile="src/fort.c" bodystart="4301" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1acc7ffa72d4970c641ead2aad67d3ad10" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t n_bg_colors</definition>
        <argsstring></argsstring>
        <name>n_bg_colors</name>
        <initializer>= sizeof(bg_colors) / sizeof(bg_colors[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4302" column="21" bodyfile="src/fort.c" bodystart="4302" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a3b82ddf71d24a89a7946b0dfb9cb98dd" prot="public" static="yes" mutable="no">
        <type>const size_t</type>
        <definition>const size_t n_styles</definition>
        <argsstring></argsstring>
        <name>n_styles</name>
        <initializer>= sizeof(text_styles) / sizeof(text_styles[0])</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4303" column="21" bodyfile="src/fort.c" bodystart="4303" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1af8056bc0fadcf58172e4ce2c0110880a" prot="public" static="yes" mutable="no">
        <type>struct <ref refid="structf__cell__props" kindref="compound">f_cell_props</ref></type>
        <definition>struct f_cell_props g_default_cell_properties</definition>
        <argsstring></argsstring>
        <name>g_default_cell_properties</name>
        <initializer>= {
    <ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref>,    
    <ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>, 

    
    <ref refid="fort_8h_1aaa59596ed65b02b3c698e9aaf8d16bbd" kindref="member">FT_CPROP_MIN_WIDTH</ref>  | <ref refid="fort_8h_1ae5586130d3dd258d477e370923d0889e" kindref="member">FT_CPROP_TEXT_ALIGN</ref> | <ref refid="fort_8h_1a2a5fd97edb51283e0baddcf896555e9d" kindref="member">FT_CPROP_TOP_PADDING</ref>
    | <ref refid="fort_8h_1a47c8f3a9d83e32ac8f3ab5997dc5b542" kindref="member">FT_CPROP_BOTTOM_PADDING</ref> | <ref refid="fort_8h_1a536d5cbb92b59dbc2e28891fa5bcd114" kindref="member">FT_CPROP_LEFT_PADDING</ref> | <ref refid="fort_8h_1a11cdcb1be7737d1f65f2b6bc4b8b7e86" kindref="member">FT_CPROP_RIGHT_PADDING</ref>
    | <ref refid="fort_8h_1aadf8488e2ae0a4e7c2e4ecbc715d2b18" kindref="member">FT_CPROP_EMPTY_STR_HEIGHT</ref> | <ref refid="fort_8h_1ad078aa3c64959b51e29ddbc52dc42edc" kindref="member">FT_CPROP_CONT_FG_COLOR</ref> | <ref refid="fort_8h_1a8eec90e0b1b004749b85052422c48671" kindref="member">FT_CPROP_CELL_BG_COLOR</ref>
    | <ref refid="fort_8h_1a979f10a47f0977e563ebf79d2144a8b1" kindref="member">FT_CPROP_CONT_BG_COLOR</ref> | <ref refid="fort_8h_1a82551a6b4f9bdc48c57fec86faa05052" kindref="member">FT_CPROP_CELL_TEXT_STYLE</ref> | <ref refid="fort_8h_1aef6afa765c79403917d52a565db47b65" kindref="member">FT_CPROP_CONT_TEXT_STYLE</ref>,

    0,             
    <ref refid="fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32ca62837cbc7c859d5d38d608f51806e66d" kindref="member">FT_ALIGNED_LEFT</ref>,  
    0,      
    0,      
    1,      
    1,      
    1,      

    <ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34ae50a530e078dd8425784ca02e66d2433" kindref="member">FT_ROW_COMMON</ref>, 
    <ref refid="fort_8h_1a8a64c62f618f7c34310da2e2ef31f63face2e85ce681b17d9334eb832a1558445" kindref="member">FT_COLOR_DEFAULT</ref>, 
    <ref refid="fort_8h_1a8a64c62f618f7c34310da2e2ef31f63face2e85ce681b17d9334eb832a1558445" kindref="member">FT_COLOR_DEFAULT</ref>, 
    <ref refid="fort_8h_1a8a64c62f618f7c34310da2e2ef31f63face2e85ce681b17d9334eb832a1558445" kindref="member">FT_COLOR_DEFAULT</ref>, 
    <ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2" kindref="member">FT_TSTYLE_DEFAULT</ref>, 
    <ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2" kindref="member">FT_TSTYLE_DEFAULT</ref>, 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4429" column="6" bodyfile="src/fort.c" bodystart="4484" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="fort_8c_1a62d31aeb7b5ef5a0f42f72d263c15df4" prot="public" static="yes" mutable="no">
        <type>int(*</type>
        <definition>int(* _custom_u8strwid) (const void *beg, const void *end, size_t *width)</definition>
        <argsstring>)(const void *beg, const void *end, size_t *width)</argsstring>
        <name>_custom_u8strwid</name>
        <initializer>= NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6630" column="8" bodyfile="src/fort.c" bodystart="6630" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="fort_8c_1ae131c0f0e6d8da7a4708c7175bf1df10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void set_memory_funcs</definition>
        <argsstring>(void *(*f_malloc)(size_t size), void(*f_free)(void *ptr))</argsstring>
        <name>set_memory_funcs</name>
        <param>
          <type>void *(*)(size_t size)</type>
          <declname>f_malloc</declname>
        </param>
        <param>
          <type>void(*)(void *ptr)</type>
          <declname>f_free</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3840" column="6" bodyfile="src/fort.c" bodystart="3840" bodyend="3864" declfile="src/fort.c" declline="208" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> char *</type>
        <definition>FT_INTERNAL char * fort_strdup</definition>
        <argsstring>(const char *str)</argsstring>
        <name>fort_strdup</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3867" column="6" bodyfile="src/fort.c" bodystart="3867" bodyend="3879" declfile="src/fort.c" declline="211" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5140ca8ce544c7fe7fd8580b46eb7919" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t number_of_columns_in_format_string</definition>
        <argsstring>(const f_string_view_t *fmt)</argsstring>
        <name>number_of_columns_in_format_string</name>
        <param>
          <type>const <ref refid="fort_8c_1a5e5d59807caf98214d772b0952b8439c" kindref="member">f_string_view_t</ref> *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3952" column="8" bodyfile="src/fort.c" bodystart="3952" bodyend="3969" declfile="src/fort.c" declline="216" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a99b4b352713722a3c4bd74f977dcddfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t number_of_columns_in_format_buffer</definition>
        <argsstring>(const f_string_buffer_t *fmt)</argsstring>
        <name>number_of_columns_in_format_buffer</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3972" column="8" bodyfile="src/fort.c" bodystart="3972" bodyend="3989" declfile="src/fort.c" declline="219" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1afbb101e4e75dbefa32076dc1f8a07762" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> wchar_t *</type>
        <definition>FT_INTERNAL wchar_t * fort_wcsdup</definition>
        <argsstring>(const wchar_t *str)</argsstring>
        <name>fort_wcsdup</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3883" column="9" bodyfile="src/fort.c" bodystart="3883" bodyend="3895" declfile="src/fort.c" declline="223" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int print_n_strings</definition>
        <argsstring>(f_conv_context_t *cntx, size_t n, const char *str)</argsstring>
        <name>print_n_strings</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4044" column="5" bodyfile="src/fort.c" bodystart="4044" bodyend="4082" declfile="src/fort.c" declline="229" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1adc410898e7cdde87f19083209df4bb02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int ft_nprint</definition>
        <argsstring>(f_conv_context_t *cntx, const char *str, size_t strlen)</argsstring>
        <name>ft_nprint</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>strlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4085" column="5" bodyfile="src/fort.c" bodystart="4085" bodyend="4095" declfile="src/fort.c" declline="233" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af86c27e4ebf239a915a36b6972d1d607" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>int ft_nwprint</definition>
        <argsstring>(f_conv_context_t *cntx, const wchar_t *str, size_t strlen)</argsstring>
        <name>ft_nwprint</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>strlen</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4098" column="5" bodyfile="src/fort.c" bodystart="4098" bodyend="4113" declfile="src/fort.c" declline="236" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3e59820002f722488daba674c799bb97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int ft_nu8print</definition>
        <argsstring>(f_conv_context_t *cntx, const void *beg, const void *end)</argsstring>
        <name>ft_nu8print</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4118" column="5" bodyfile="src/fort.c" bodystart="4118" bodyend="4131" declfile="src/fort.c" declline="240" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a06be2f0a19611886237dcde275f8d678" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
        <definition>FT_INTERNAL f_vector_t * create_vector</definition>
        <argsstring>(size_t item_size, size_t capacity)</argsstring>
        <name>create_vector</name>
        <param>
          <type>size_t</type>
          <declname>item_size</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7250" column="12" bodyfile="src/fort.c" bodystart="7250" bodyend="7269" declfile="src/fort.c" declline="300" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void destroy_vector</definition>
        <argsstring>(f_vector_t *)</argsstring>
        <name>destroy_vector</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7273" column="6" bodyfile="src/fort.c" bodystart="7273" bodyend="7278" declfile="src/fort.c" declline="303" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t vector_size</definition>
        <argsstring>(const f_vector_t *)</argsstring>
        <name>vector_size</name>
        <param>
          <type>const <ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7282" column="8" bodyfile="src/fort.c" bodystart="7282" bodyend="7286" declfile="src/fort.c" declline="306" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a81f0b5b62d8a431c44be2bac0f6f8465" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t vector_capacity</definition>
        <argsstring>(const f_vector_t *)</argsstring>
        <name>vector_capacity</name>
        <param>
          <type>const <ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7290" column="8" bodyfile="src/fort.c" bodystart="7290" bodyend="7294" declfile="src/fort.c" declline="309" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int vector_push</definition>
        <argsstring>(f_vector_t *, const void *item)</argsstring>
        <name>vector_push</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <param>
          <type>const void *</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7298" column="5" bodyfile="src/fort.c" bodystart="7298" bodyend="7315" declfile="src/fort.c" declline="312" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int vector_insert</definition>
        <argsstring>(f_vector_t *, const void *item, size_t pos)</argsstring>
        <name>vector_insert</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <param>
          <type>const void *</type>
          <declname>item</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7318" column="5" bodyfile="src/fort.c" bodystart="7318" bodyend="7343" declfile="src/fort.c" declline="315" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1acb4f5f3823ce6b50e51c8223c5fb9c2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
        <definition>FT_INTERNAL f_vector_t * vector_split</definition>
        <argsstring>(f_vector_t *, size_t pos)</argsstring>
        <name>vector_split</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7346" column="12" bodyfile="src/fort.c" bodystart="7346" bodyend="7366" declfile="src/fort.c" declline="318" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a91644aa66c95f718abb2f0ad731c604b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> const void *</type>
        <definition>FT_INTERNAL const void * vector_at_c</definition>
        <argsstring>(const f_vector_t *vector, size_t index)</argsstring>
        <name>vector_at_c</name>
        <param>
          <type>const <ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7369" column="12" bodyfile="src/fort.c" bodystart="7369" bodyend="7375" declfile="src/fort.c" declline="321" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1abb033777a1a8c0b490f14541bc0332fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void *</type>
        <definition>FT_INTERNAL void * vector_at</definition>
        <argsstring>(f_vector_t *, size_t index)</argsstring>
        <name>vector_at</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7379" column="6" bodyfile="src/fort.c" bodystart="7379" bodyend="7385" declfile="src/fort.c" declline="324" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a844f2a888602cd950e5a2d7c332c3b07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status vector_swap</definition>
        <argsstring>(f_vector_t *cur_vec, f_vector_t *mv_vec, size_t pos)</argsstring>
        <name>vector_swap</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <declname>cur_vec</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <declname>mv_vec</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7389" column="10" bodyfile="src/fort.c" bodystart="7389" bodyend="7440" declfile="src/fort.c" declline="327" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aeed5528bb1a8124b530766b5cdd607f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void vector_clear</definition>
        <argsstring>(f_vector_t *)</argsstring>
        <name>vector_clear</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7443" column="6" bodyfile="src/fort.c" bodystart="7443" bodyend="7446" declfile="src/fort.c" declline="330" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae1d70435626d59e4d41971e22fa90fec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int vector_erase</definition>
        <argsstring>(f_vector_t *, size_t index)</argsstring>
        <name>vector_erase</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <defname>vector</defname>
        </param>
        <param>
          <type>size_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7449" column="5" bodyfile="src/fort.c" bodystart="7449" bodyend="7461" declfile="src/fort.c" declline="333" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a8c6234fb096b466971193e24d3f9c85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int mk_wcswidth</definition>
        <argsstring>(const wchar_t *pwcs, size_t n)</argsstring>
        <name>mk_wcswidth</name>
        <param>
          <type>const wchar_t *</type>
          <declname>pwcs</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7724" column="5" bodyfile="src/fort.c" bodystart="7724" bodyend="7737" declfile="src/fort.c" declline="366" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a7349d4800cf8b7db916cdbe2fdacdb0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> int</type>
        <definition>int utf8casecmp</definition>
        <argsstring>(const void *src1, const void *src2)</argsstring>
        <name>utf8casecmp</name>
        <param>
          <type>const void *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="609" column="5" bodyfile="src/fort.c" bodystart="609" bodyend="639" declfile="src/fort.c" declline="468" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a26b01cd15111c67880a523b603002188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8cat</definition>
        <argsstring>(void *utf8_restrict dst, const void *utf8_restrict src)</argsstring>
        <name>utf8cat</name>
        <param>
          <type>void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="641" column="6" bodyfile="src/fort.c" bodystart="641" bodyend="660" declfile="src/fort.c" declline="472" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8chr</definition>
        <argsstring>(const void *src, utf8_int32_t chr)</argsstring>
        <name>utf8chr</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="662" column="6" bodyfile="src/fort.c" bodystart="662" bodyend="702" declfile="src/fort.c" declline="476" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a260642d22e26c99dbbaf65e98eadc88a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> int</type>
        <definition>int utf8cmp</definition>
        <argsstring>(const void *src1, const void *src2)</argsstring>
        <name>utf8cmp</name>
        <param>
          <type>const void *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="704" column="5" bodyfile="src/fort.c" bodystart="704" bodyend="722" declfile="src/fort.c" declline="481" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a7659546b0f93f4e58ecea8ccc303851f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8cpy</definition>
        <argsstring>(void *utf8_restrict dst, const void *utf8_restrict src)</argsstring>
        <name>utf8cpy</name>
        <param>
          <type>void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="726" column="6" bodyfile="src/fort.c" bodystart="726" bodyend="741" declfile="src/fort.c" declline="485" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aaa64987dd6510395216898ed8117f290" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> size_t</type>
        <definition>size_t utf8cspn</definition>
        <argsstring>(const void *src, const void *reject)</argsstring>
        <name>utf8cspn</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>reject</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="743" column="8" bodyfile="src/fort.c" bodystart="743" bodyend="788" declfile="src/fort.c" declline="490" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a157235d1e84617035dd6a2b6891d1190" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8dup</definition>
        <argsstring>(const void *src)</argsstring>
        <name>utf8dup</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="792" column="6" bodyfile="src/fort.c" bodystart="792" bodyend="818" declfile="src/fort.c" declline="495" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1acf9a71744695b4e13bd8fe284f6493f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> size_t</type>
        <definition>size_t utf8len</definition>
        <argsstring>(const void *str)</argsstring>
        <name>utf8len</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="822" column="8" bodyfile="src/fort.c" bodystart="822" bodyend="848" declfile="src/fort.c" declline="499" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac93b14073da51fe7722162b16b117d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> size_t</type>
        <definition>size_t utf8width</definition>
        <argsstring>(const void *str)</argsstring>
        <name>utf8width</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="914" column="8" bodyfile="src/fort.c" bodystart="914" bodyend="925" declfile="src/fort.c" declline="502" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a72273b72cf22e087384fade5accece3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> int</type>
        <definition>int utf8cwidth</definition>
        <argsstring>(utf8_int32_t c)</argsstring>
        <name>utf8cwidth</name>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="853" column="5" bodyfile="src/fort.c" bodystart="853" bodyend="912" declfile="src/fort.c" declline="505" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a76ca27590e83a0d94f85e5a58d3dbfac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> int</type>
        <definition>int utf8ncasecmp</definition>
        <argsstring>(const void *src1, const void *src2, size_t n)</argsstring>
        <name>utf8ncasecmp</name>
        <param>
          <type>const void *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="927" column="5" bodyfile="src/fort.c" bodystart="927" bodyend="1009" declfile="src/fort.c" declline="510" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a11ed5b03517ab8ce1f811995695068c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8ncat</definition>
        <argsstring>(void *utf8_restrict dst, const void *utf8_restrict src, size_t n)</argsstring>
        <name>utf8ncat</name>
        <param>
          <type>void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1011" column="6" bodyfile="src/fort.c" bodystart="1011" bodyend="1032" declfile="src/fort.c" declline="516" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aee64c8755c33e9b410d3d911095b8573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> int</type>
        <definition>int utf8ncmp</definition>
        <argsstring>(const void *src1, const void *src2, size_t n)</argsstring>
        <name>utf8ncmp</name>
        <param>
          <type>const void *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src2</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1034" column="5" bodyfile="src/fort.c" bodystart="1034" bodyend="1052" declfile="src/fort.c" declline="522" declcolumn="38"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aabf0105a5dbba289e35565281e3e4e4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8ncpy</definition>
        <argsstring>(void *utf8_restrict dst, const void *utf8_restrict src, size_t n)</argsstring>
        <name>utf8ncpy</name>
        <param>
          <type>void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>dst</declname>
        </param>
        <param>
          <type>const void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1054" column="6" bodyfile="src/fort.c" bodystart="1054" bodyend="1076" declfile="src/fort.c" declline="532" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a141320e9eb2d70f541c09ef36e1230bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8ndup</definition>
        <argsstring>(const void *src, size_t n)</argsstring>
        <name>utf8ndup</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1078" column="6" bodyfile="src/fort.c" bodystart="1078" bodyend="1110" declfile="src/fort.c" declline="539" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac0044439ba5de366174a070337d46b00" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8pbrk</definition>
        <argsstring>(const void *str, const void *accept)</argsstring>
        <name>utf8pbrk</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>accept</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1181" column="6" bodyfile="src/fort.c" bodystart="1181" bodyend="1229" declfile="src/fort.c" declline="543" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a8d291c79b99c32f07241854c6f8ce61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8rchr</definition>
        <argsstring>(const void *src, int chr)</argsstring>
        <name>utf8rchr</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>int</type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1112" column="6" bodyfile="src/fort.c" bodystart="1112" bodyend="1179" declfile="src/fort.c" declline="547" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> size_t</type>
        <definition>size_t utf8size</definition>
        <argsstring>(const void *str)</argsstring>
        <name>utf8size</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1231" column="8" bodyfile="src/fort.c" bodystart="1231" bodyend="1242" declfile="src/fort.c" declline="551" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a2751e31b4afa3d09d21b2d3dada3b8fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> size_t</type>
        <definition>size_t utf8spn</definition>
        <argsstring>(const void *src, const void *accept)</argsstring>
        <name>utf8spn</name>
        <param>
          <type>const void *</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>accept</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1244" column="8" bodyfile="src/fort.c" bodystart="1244" bodyend="1289" declfile="src/fort.c" declline="555" declcolumn="41"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a90a2d154aa14ee7e5ee755d094328cae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8str</definition>
        <argsstring>(const void *haystack, const void *needle)</argsstring>
        <name>utf8str</name>
        <param>
          <type>const void *</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1291" column="6" bodyfile="src/fort.c" bodystart="1291" bodyend="1325" declfile="src/fort.c" declline="559" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a00197aa7445ef50af8eb7de80904cc55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8casestr</definition>
        <argsstring>(const void *haystack, const void *needle)</argsstring>
        <name>utf8casestr</name>
        <param>
          <type>const void *</type>
          <declname>haystack</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>needle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1327" column="6" bodyfile="src/fort.c" bodystart="1327" bodyend="1373" declfile="src/fort.c" declline="564" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aedad8b40a6836b75f6268a6a66b53f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8valid</definition>
        <argsstring>(const void *str)</argsstring>
        <name>utf8valid</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1375" column="6" bodyfile="src/fort.c" bodystart="1375" bodyend="1454" declfile="src/fort.c" declline="569" declcolumn="39"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8codepoint</definition>
        <argsstring>(const void *utf8_restrict str, utf8_int32_t *utf8_restrict out_codepoint)</argsstring>
        <name>utf8codepoint</name>
        <param>
          <type>const void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref> *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>out_codepoint</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1456" column="6" bodyfile="src/fort.c" bodystart="1456" bodyend="1482" declfile="src/fort.c" declline="574" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> size_t</type>
        <definition>size_t utf8codepointsize</definition>
        <argsstring>(utf8_int32_t chr)</argsstring>
        <name>utf8codepointsize</name>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1484" column="8" bodyfile="src/fort.c" bodystart="1484" bodyend="1495" declfile="src/fort.c" declline="578" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a7faf7f12202a186786dea223abbd2486" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void *</type>
        <definition>void * utf8catcodepoint</definition>
        <argsstring>(void *utf8_restrict str, utf8_int32_t chr, size_t n)</argsstring>
        <name>utf8catcodepoint</name>
        <param>
          <type>void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>chr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1497" column="6" bodyfile="src/fort.c" bodystart="1497" bodyend="1542" declfile="src/fort.c" declline="584" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aa3502e1c380c7a4b0f7a02ffc2c3c358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> int</type>
        <definition>int utf8islower</definition>
        <argsstring>(utf8_int32_t chr)</argsstring>
        <name>utf8islower</name>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1544" column="5" bodyfile="src/fort.c" bodystart="1544" bodyend="1544" declfile="src/fort.c" declline="588" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a0b1efc85ea0182178c2e61603c21ef6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> int</type>
        <definition>int utf8isupper</definition>
        <argsstring>(utf8_int32_t chr)</argsstring>
        <name>utf8isupper</name>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>chr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1546" column="5" bodyfile="src/fort.c" bodystart="1546" bodyend="1546" declfile="src/fort.c" declline="591" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af7329f330e93a5944837500cd4eb70ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void</type>
        <definition>void utf8lwr</definition>
        <argsstring>(void *utf8_restrict str)</argsstring>
        <name>utf8lwr</name>
        <param>
          <type>void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1548" column="6" bodyfile="src/fort.c" bodystart="1548" bodyend="1567" declfile="src/fort.c" declline="594" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae033fd7896504dcd1b9dfc6d6cf97584" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref> <ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> void</type>
        <definition>void utf8upr</definition>
        <argsstring>(void *utf8_restrict str)</argsstring>
        <name>utf8upr</name>
        <param>
          <type>void *<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref></type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1569" column="6" bodyfile="src/fort.c" bodystart="1569" bodyend="1588" declfile="src/fort.c" declline="597" declcolumn="29"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a2204af282a8d53880eceeb503d043319" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> <ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
        <definition>utf8_int32_t utf8lwrcodepoint</definition>
        <argsstring>(utf8_int32_t cp)</argsstring>
        <name>utf8lwrcodepoint</name>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1590" column="14" bodyfile="src/fort.c" bodystart="1590" bodyend="1665" declfile="src/fort.c" declline="600" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1afc7b7f0e41515bc7d694f22ec6fccd92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref> <ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
        <definition>utf8_int32_t utf8uprcodepoint</definition>
        <argsstring>(utf8_int32_t cp)</argsstring>
        <name>utf8uprcodepoint</name>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="1667" column="14" bodyfile="src/fort.c" bodystart="1667" bodyend="1742" declfile="src/fort.c" declline="603" declcolumn="24"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a1568eafa1ce27f57d1a239ee8d3804f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int utf8coll</definition>
        <argsstring>(const void *src1, const void *src2)</argsstring>
        <name>utf8coll</name>
        <param>
          <type>const void *</type>
          <declname>src1</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>src2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="724" column="5" declfile="src/fort.c" declline="724" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad589d9ad4ba2b45d3ae8ceaeccf6a9e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* utf8fry</definition>
        <argsstring>(const void *str)</argsstring>
        <name>utf8fry</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="820" column="6" declfile="src/fort.c" declline="820" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac940e33b846028d55c174b9f7a2164f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
        <definition>FT_INTERNAL f_string_buffer_t * create_string_buffer</definition>
        <argsstring>(size_t number_of_chars, enum f_string_type type)</argsstring>
        <name>create_string_buffer</name>
        <param>
          <type>size_t</type>
          <declname>number_of_chars</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6432" column="19" bodyfile="src/fort.c" bodystart="6432" bodyend="6482" declfile="src/fort.c" declline="1793" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void destroy_string_buffer</definition>
        <argsstring>(f_string_buffer_t *buffer)</argsstring>
        <name>destroy_string_buffer</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6486" column="6" bodyfile="src/fort.c" bodystart="6486" bodyend="6493" declfile="src/fort.c" declline="1796" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a414a5ce9226b67140bda7955ff1b21e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
        <definition>FT_INTERNAL f_string_buffer_t * copy_string_buffer</definition>
        <argsstring>(const f_string_buffer_t *buffer)</argsstring>
        <name>copy_string_buffer</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6496" column="19" bodyfile="src/fort.c" bodystart="6496" bodyend="6522" declfile="src/fort.c" declline="1799" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a97de898073d1711de1d55369dfc067c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status realloc_string_buffer_without_copy</definition>
        <argsstring>(f_string_buffer_t *buffer)</argsstring>
        <name>realloc_string_buffer_without_copy</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6525" column="10" bodyfile="src/fort.c" bodystart="6525" bodyend="6536" declfile="src/fort.c" declline="1802" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a97269d36ab50d310bd99d9949d14489e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status fill_buffer_from_string</definition>
        <argsstring>(f_string_buffer_t *buffer, const char *str)</argsstring>
        <name>fill_buffer_from_string</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6540" column="10" bodyfile="src/fort.c" bodystart="6540" bodyend="6554" declfile="src/fort.c" declline="1805" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status fill_buffer_from_wstring</definition>
        <argsstring>(f_string_buffer_t *buffer, const wchar_t *str)</argsstring>
        <name>fill_buffer_from_wstring</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6559" column="10" bodyfile="src/fort.c" bodystart="6559" bodyend="6573" declfile="src/fort.c" declline="1809" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a026f474e0d6b4c90c792a8833dde496c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status fill_buffer_from_u8string</definition>
        <argsstring>(f_string_buffer_t *buffer, const void *str)</argsstring>
        <name>fill_buffer_from_u8string</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6578" column="10" bodyfile="src/fort.c" bodystart="6578" bodyend="6592" declfile="src/fort.c" declline="1814" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1adee94920422c7175c9dedd31fb9e5364" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t buffer_text_visible_width</definition>
        <argsstring>(const f_string_buffer_t *buffer)</argsstring>
        <name>buffer_text_visible_width</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6661" column="8" bodyfile="src/fort.c" bodystart="6661" bodyend="6711" declfile="src/fort.c" declline="1818" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t buffer_text_visible_height</definition>
        <argsstring>(const f_string_buffer_t *buffer)</argsstring>
        <name>buffer_text_visible_height</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6596" column="8" bodyfile="src/fort.c" bodystart="6596" bodyend="6614" declfile="src/fort.c" declline="1821" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1acc99fa5ecb3035540808fb06ad4fa4e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t string_buffer_cod_width_capacity</definition>
        <argsstring>(const f_string_buffer_t *buffer)</argsstring>
        <name>string_buffer_cod_width_capacity</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6617" column="8" bodyfile="src/fort.c" bodystart="6617" bodyend="6620" declfile="src/fort.c" declline="1824" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a66f99ddf13fdabb67f73a0a763307afb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t string_buffer_raw_capacity</definition>
        <argsstring>(const f_string_buffer_t *buffer)</argsstring>
        <name>string_buffer_raw_capacity</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6623" column="8" bodyfile="src/fort.c" bodystart="6623" bodyend="6626" declfile="src/fort.c" declline="1827" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a398a13f3db5a43bca6fecdc119f38a88" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t string_buffer_width_capacity</definition>
        <argsstring>(const f_string_buffer_t *buffer)</argsstring>
        <name>string_buffer_width_capacity</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6831" column="8" bodyfile="src/fort.c" bodystart="6831" bodyend="6849" declfile="src/fort.c" declline="1830" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af8c64e48cffecc6fb8e5220a8feff523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void *</type>
        <definition>FT_INTERNAL void * buffer_get_data</definition>
        <argsstring>(f_string_buffer_t *buffer)</argsstring>
        <name>buffer_get_data</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6853" column="6" bodyfile="src/fort.c" bodystart="6853" bodyend="6857" declfile="src/fort.c" declline="1833" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3d109493b9707163dc60dbe7f413f95a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int buffer_check_align</definition>
        <argsstring>(f_string_buffer_t *buffer)</argsstring>
        <name>buffer_check_align</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6860" column="5" bodyfile="src/fort.c" bodystart="6860" bodyend="6880" declfile="src/fort.c" declline="1836" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a0140429a7259d97aaa5711a8b89c5860" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int buffer_printf</definition>
        <argsstring>(f_string_buffer_t *buffer, size_t buffer_row, f_conv_context_t *cntx, size_t cod_width, const char *content_style_tag, const char *reset_content_style_tag)</argsstring>
        <name>buffer_printf</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_row</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cod_width</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>content_style_tag</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>reset_content_style_tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6768" column="5" bodyfile="src/fort.c" bodystart="6768" bodyend="6828" declfile="src/fort.c" declline="1839" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a0e13f6f3d616f84fa0bd43e23d604034" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void buffer_set_u8strwid_func</definition>
        <argsstring>(int(*u8strwid)(const void *beg, const void *end, size_t *width))</argsstring>
        <name>buffer_set_u8strwid_func</name>
        <param>
          <type>int(*)(const void *beg, const void *end, size_t *width)</type>
          <declname>u8strwid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6633" column="6" bodyfile="src/fort.c" bodystart="6633" bodyend="6636" declfile="src/fort.c" declline="1844" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5eb660e527d2b076b21d88c35bef4089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>void get_style_tag_for_cell</definition>
        <argsstring>(const f_table_properties_t *props, size_t row, size_t col, char *style_tag, size_t sz)</argsstring>
        <name>get_style_tag_for_cell</name>
        <param>
          <type>const <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>props</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>style_tag</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4305" column="6" bodyfile="src/fort.c" bodystart="4305" bodyend="4339" declfile="src/fort.c" declline="1873" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a14b841bae5c7188b971109613ab2b12a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>void get_reset_style_tag_for_cell</definition>
        <argsstring>(const f_table_properties_t *props, size_t row, size_t col, char *style_tag, size_t sz)</argsstring>
        <name>get_reset_style_tag_for_cell</name>
        <param>
          <type>const <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>props</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>style_tag</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4341" column="6" bodyfile="src/fort.c" bodystart="4341" bodyend="4382" declfile="src/fort.c" declline="1877" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae1ca1606073ac2c174844a4633c8159d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>void get_style_tag_for_content</definition>
        <argsstring>(const f_table_properties_t *props, size_t row, size_t col, char *style_tag, size_t sz)</argsstring>
        <name>get_style_tag_for_content</name>
        <param>
          <type>const <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>props</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>style_tag</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4385" column="6" bodyfile="src/fort.c" bodystart="4385" bodyend="4427" declfile="src/fort.c" declline="1881" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab4db6996f6df6e03e566bdbdfba76da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>void get_reset_style_tag_for_content</definition>
        <argsstring>(const f_table_properties_t *props, size_t row, size_t col, char *style_tag, size_t sz)</argsstring>
        <name>get_reset_style_tag_for_content</name>
        <param>
          <type>const <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>props</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>style_tag</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4429" column="6" bodyfile="src/fort.c" bodystart="4429" bodyend="4481" declfile="src/fort.c" declline="1885" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref> *</type>
        <definition>FT_INTERNAL f_cell_prop_container_t * create_cell_prop_container</definition>
        <argsstring>(void)</argsstring>
        <name>create_cell_prop_container</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4551" column="25" bodyfile="src/fort.c" bodystart="4551" bodyend="4555" declfile="src/fort.c" declline="1913" declcolumn="25"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a2266ed2c80b2571032776541bfa14174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void destroy_cell_prop_container</definition>
        <argsstring>(f_cell_prop_container_t *cont)</argsstring>
        <name>destroy_cell_prop_container</name>
        <param>
          <type><ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4559" column="6" bodyfile="src/fort.c" bodystart="4559" bodyend="4563" declfile="src/fort.c" declline="1916" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a2ce14d6f2ae9343c8d2e4eb6d4fc0775" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> const <ref refid="fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122" kindref="member">f_cell_props_t</ref> *</type>
        <definition>FT_INTERNAL const f_cell_props_t * cget_cell_prop</definition>
        <argsstring>(const f_cell_prop_container_t *cont, size_t row, size_t col)</argsstring>
        <name>cget_cell_prop</name>
        <param>
          <type>const <ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4567" column="22" bodyfile="src/fort.c" bodystart="4567" bodyend="4578" declfile="src/fort.c" declline="1919" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9cf22afc8e3f8fbc1038722b1e918f76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122" kindref="member">f_cell_props_t</ref> *</type>
        <definition>FT_INTERNAL f_cell_props_t * get_cell_prop_and_create_if_not_exists</definition>
        <argsstring>(f_cell_prop_container_t *cont, size_t row, size_t col)</argsstring>
        <name>get_cell_prop_and_create_if_not_exists</name>
        <param>
          <type><ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4582" column="16" bodyfile="src/fort.c" bodystart="4582" bodyend="4606" declfile="src/fort.c" declline="1922" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a59462cfbe20a08d695d7fdea80a53c94" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status set_cell_property</definition>
        <argsstring>(f_cell_prop_container_t *cont, size_t row, size_t col, uint32_t property, int value)</argsstring>
        <name>set_cell_property</name>
        <param>
          <type><ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4701" column="10" bodyfile="src/fort.c" bodystart="4701" bodyend="4718" declfile="src/fort.c" declline="1925" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int get_cell_property_hierarchically</definition>
        <argsstring>(const f_table_properties_t *properties, size_t row, size_t column, uint32_t property)</argsstring>
        <name>get_cell_property_hierarchically</name>
        <param>
          <type>const <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>column</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4610" column="5" bodyfile="src/fort.c" bodystart="4610" bodyend="4641" declfile="src/fort.c" declline="1928" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a74f59c42e342ef32cba6dda001961f5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status set_default_cell_property</definition>
        <argsstring>(uint32_t property, int value)</argsstring>
        <name>set_default_cell_property</name>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4722" column="10" bodyfile="src/fort.c" bodystart="4722" bodyend="4725" declfile="src/fort.c" declline="1931" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a1cde977c8162b3902a3eece0b649e451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status set_entire_table_property</definition>
        <argsstring>(f_table_properties_t *table_properties, uint32_t property, int value)</argsstring>
        <name>set_entire_table_property</name>
        <param>
          <type><ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>table_properties</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5145" column="10" bodyfile="src/fort.c" bodystart="5145" bodyend="5149" declfile="src/fort.c" declline="2044" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a6552ebc09611ccba176d04a5702458a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status set_default_entire_table_property</definition>
        <argsstring>(uint32_t property, int value)</argsstring>
        <name>set_default_entire_table_property</name>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5153" column="10" bodyfile="src/fort.c" bodystart="5153" bodyend="5156" declfile="src/fort.c" declline="2047" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a218b12058c9822ff0ad91544aedd2a13" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t max_border_elem_strlen</definition>
        <argsstring>(struct f_table_properties *)</argsstring>
        <name>max_border_elem_strlen</name>
        <param>
          <type>struct <ref refid="structf__table__properties" kindref="compound">f_table_properties</ref> *</type>
          <defname>properties</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5160" column="8" bodyfile="src/fort.c" bodystart="5160" bodyend="5177" declfile="src/fort.c" declline="2057" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
        <definition>FT_INTERNAL f_table_properties_t * create_table_properties</definition>
        <argsstring>(void)</argsstring>
        <name>create_table_properties</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5196" column="22" bodyfile="src/fort.c" bodystart="5196" bodyend="5210" declfile="src/fort.c" declline="2060" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a375c0af4b424ea5ae6bada04698665d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void destroy_table_properties</definition>
        <argsstring>(f_table_properties_t *properties)</argsstring>
        <name>destroy_table_properties</name>
        <param>
          <type><ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>properties</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5213" column="6" bodyfile="src/fort.c" bodystart="5213" bodyend="5222" declfile="src/fort.c" declline="2063" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a60b1666a1271172355ced7927d5f5eff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
        <definition>FT_INTERNAL f_table_properties_t * copy_table_properties</definition>
        <argsstring>(const f_table_properties_t *property)</argsstring>
        <name>copy_table_properties</name>
        <param>
          <type>const <ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5244" column="22" bodyfile="src/fort.c" bodystart="5244" bodyend="5262" declfile="src/fort.c" declline="2066" declcolumn="22"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
        <definition>FT_INTERNAL f_cell_t * create_cell</definition>
        <argsstring>(void)</argsstring>
        <name>create_cell</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2303" column="10" bodyfile="src/fort.c" bodystart="2303" bodyend="2315" declfile="src/fort.c" declline="2085" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a941e7d7921fd2ca180894fe481af986b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void destroy_cell</definition>
        <argsstring>(f_cell_t *cell)</argsstring>
        <name>destroy_cell</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2318" column="6" bodyfile="src/fort.c" bodystart="2318" bodyend="2324" declfile="src/fort.c" declline="2088" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a236a2db76f5d456475a97dc2726ca7b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
        <definition>FT_INTERNAL f_cell_t * copy_cell</definition>
        <argsstring>(f_cell_t *cell)</argsstring>
        <name>copy_cell</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2327" column="10" bodyfile="src/fort.c" bodystart="2327" bodyend="2342" declfile="src/fort.c" declline="2091" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a1934466a7efe261ddf2824204050b85b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t cell_vis_width</definition>
        <argsstring>(const f_cell_t *cell, const f_context_t *context)</argsstring>
        <name>cell_vis_width</name>
        <param>
          <type>const <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1a411e98c8a879520a2ccf789f62d10e85" kindref="member">f_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2359" column="8" bodyfile="src/fort.c" bodystart="2359" bodyend="2381" declfile="src/fort.c" declline="2094" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9c241d6f1cadd55e3b1ce1f5928b9556" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t cell_invis_codes_width</definition>
        <argsstring>(const f_cell_t *cell, const f_context_t *context)</argsstring>
        <name>cell_invis_codes_width</name>
        <param>
          <type>const <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1a411e98c8a879520a2ccf789f62d10e85" kindref="member">f_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2384" column="8" bodyfile="src/fort.c" bodystart="2384" bodyend="2410" declfile="src/fort.c" declline="2097" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a4b4f366d1272078225219727401cde90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t hint_height_cell</definition>
        <argsstring>(const f_cell_t *cell, const f_context_t *context)</argsstring>
        <name>hint_height_cell</name>
        <param>
          <type>const <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1a411e98c8a879520a2ccf789f62d10e85" kindref="member">f_context_t</ref> *</type>
          <declname>context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2413" column="8" bodyfile="src/fort.c" bodystart="2413" bodyend="2431" declfile="src/fort.c" declline="2100" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aa406a5dc43875274fb9eaa3c941ce753" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void set_cell_type</definition>
        <argsstring>(f_cell_t *cell, enum f_cell_type type)</argsstring>
        <name>set_cell_type</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2345" column="6" bodyfile="src/fort.c" bodystart="2345" bodyend="2349" declfile="src/fort.c" declline="2103" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> enum <ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref></type>
        <definition>FT_INTERNAL enum f_cell_type get_cell_type</definition>
        <argsstring>(const f_cell_t *cell)</argsstring>
        <name>get_cell_type</name>
        <param>
          <type>const <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2351" column="1" bodyfile="src/fort.c" bodystart="2352" bodyend="2356" declfile="src/fort.c" declline="2105" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9f85d4d29e5835229f6127609a265c02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int cell_printf</definition>
        <argsstring>(f_cell_t *cell, size_t row, f_conv_context_t *cntx, size_t cod_width)</argsstring>
        <name>cell_printf</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cod_width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2435" column="5" bodyfile="src/fort.c" bodystart="2435" bodyend="2525" declfile="src/fort.c" declline="2109" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3bde4232e71f4b585df25c0253128137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status fill_cell_from_string</definition>
        <argsstring>(f_cell_t *cell, const char *str)</argsstring>
        <name>fill_cell_from_string</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2528" column="10" bodyfile="src/fort.c" bodystart="2528" bodyend="2534" declfile="src/fort.c" declline="2112" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae884baeeef1f6d0aa11118c89df4ae25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status fill_cell_from_wstring</definition>
        <argsstring>(f_cell_t *cell, const wchar_t *str)</argsstring>
        <name>fill_cell_from_wstring</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2538" column="10" bodyfile="src/fort.c" bodystart="2538" bodyend="2544" declfile="src/fort.c" declline="2116" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae2f26d50cef40dd4f5bb349631c6eeda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status fill_cell_from_buffer</definition>
        <argsstring>(f_cell_t *cell, const f_string_buffer_t *buf)</argsstring>
        <name>fill_cell_from_buffer</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2566" column="10" bodyfile="src/fort.c" bodystart="2566" bodyend="2586" declfile="src/fort.c" declline="2120" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab4f0992198f9be12d538e0ae6080c94d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
        <definition>FT_INTERNAL f_string_buffer_t * cell_get_string_buffer</definition>
        <argsstring>(f_cell_t *cell)</argsstring>
        <name>cell_get_string_buffer</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2558" column="19" bodyfile="src/fort.c" bodystart="2558" bodyend="2563" declfile="src/fort.c" declline="2123" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * create_row</definition>
        <argsstring>(void)</argsstring>
        <name>create_row</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5304" column="9" bodyfile="src/fort.c" bodystart="5304" bodyend="5307" declfile="src/fort.c" declline="2148" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void destroy_row</definition>
        <argsstring>(f_row_t *row)</argsstring>
        <name>destroy_row</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5321" column="6" bodyfile="src/fort.c" bodystart="5321" bodyend="5332" declfile="src/fort.c" declline="2151" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3a01711036a669b10b641d6179f72610" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * copy_row</definition>
        <argsstring>(f_row_t *row)</argsstring>
        <name>copy_row</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5335" column="9" bodyfile="src/fort.c" bodystart="5335" bodyend="5355" declfile="src/fort.c" declline="2154" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a234cff841d6e8bffc9955dd06d334420" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * split_row</definition>
        <argsstring>(f_row_t *row, size_t pos)</argsstring>
        <name>split_row</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5358" column="9" bodyfile="src/fort.c" bodystart="5358" bodyend="5371" declfile="src/fort.c" declline="2157" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aeb4ff36967a8e872f3d315e60d2bc4f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int ft_row_erase_range</definition>
        <argsstring>(f_row_t *row, size_t left, size_t right)</argsstring>
        <name>ft_row_erase_range</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>left</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>right</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5374" column="5" bodyfile="src/fort.c" bodystart="5374" bodyend="5393" declfile="src/fort.c" declline="2161" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a727e646203a4b57b987d1da7ef5fb700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * create_row_from_string</definition>
        <argsstring>(const char *str)</argsstring>
        <name>create_row_from_string</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5786" column="9" bodyfile="src/fort.c" bodystart="5786" bodyend="5870" declfile="src/fort.c" declline="2164" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a6bf142ab10b212be6fb4214805b98945" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * create_row_from_fmt_string</definition>
        <argsstring>(const struct f_string_view *fmt, va_list *va_args)</argsstring>
        <name>create_row_from_fmt_string</name>
        <param>
          <type>const struct <ref refid="structf__string__view" kindref="compound">f_string_view</ref> *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list *</type>
          <declname>va_args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6019" column="9" bodyfile="src/fort.c" bodystart="6019" bodyend="6087" declfile="src/fort.c" declline="2167" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t columns_in_row</definition>
        <argsstring>(const f_row_t *row)</argsstring>
        <name>columns_in_row</name>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5396" column="8" bodyfile="src/fort.c" bodystart="5396" bodyend="5402" declfile="src/fort.c" declline="2170" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a840fa27cb400833ddeb735488e1d8947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
        <definition>FT_INTERNAL f_cell_t * get_cell</definition>
        <argsstring>(f_row_t *row, size_t col)</argsstring>
        <name>get_cell</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5437" column="10" bodyfile="src/fort.c" bodystart="5437" bodyend="5440" declfile="src/fort.c" declline="2173" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> const <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
        <definition>FT_INTERNAL const f_cell_t * get_cell_c</definition>
        <argsstring>(const f_row_t *row, size_t col)</argsstring>
        <name>get_cell_c</name>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5444" column="16" bodyfile="src/fort.c" bodystart="5444" bodyend="5447" declfile="src/fort.c" declline="2176" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
        <definition>FT_INTERNAL f_cell_t * get_cell_and_create_if_not_exists</definition>
        <argsstring>(f_row_t *row, size_t col)</argsstring>
        <name>get_cell_and_create_if_not_exists</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5451" column="10" bodyfile="src/fort.c" bodystart="5451" bodyend="5454" declfile="src/fort.c" declline="2179" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a40ddd32fd7bb25bdda626db532e7412b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
        <definition>FT_INTERNAL f_cell_t * create_cell_in_position</definition>
        <argsstring>(f_row_t *row, size_t col)</argsstring>
        <name>create_cell_in_position</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5457" column="10" bodyfile="src/fort.c" bodystart="5457" bodyend="5471" declfile="src/fort.c" declline="2182" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae67f055e422299c4821b1a00d5bfeb6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status swap_row</definition>
        <argsstring>(f_row_t *cur_row, f_row_t *ins_row, size_t pos)</argsstring>
        <name>swap_row</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>cur_row</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>ins_row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5475" column="10" bodyfile="src/fort.c" bodystart="5475" bodyend="5489" declfile="src/fort.c" declline="2185" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a651c99d3ef016298fb72557264c415bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status insert_row</definition>
        <argsstring>(f_row_t *cur_row, f_row_t *ins_row, size_t pos)</argsstring>
        <name>insert_row</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>cur_row</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>ins_row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>pos</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5493" column="10" bodyfile="src/fort.c" bodystart="5493" bodyend="5520" declfile="src/fort.c" declline="2188" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab36a4052c23098fca6dce54d6201d96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t group_cell_number</definition>
        <argsstring>(const f_row_t *row, size_t master_cell_col)</argsstring>
        <name>group_cell_number</name>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>master_cell_col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5524" column="8" bodyfile="src/fort.c" bodystart="5524" bodyend="5545" declfile="src/fort.c" declline="2191" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a187174d63ce94aa162d2468933cd3cbc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int get_row_cell_types</definition>
        <argsstring>(const f_row_t *row, enum f_cell_type *types, size_t types_sz)</argsstring>
        <name>get_row_cell_types</name>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref> *</type>
          <declname>types</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>types_sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5549" column="5" bodyfile="src/fort.c" bodystart="5549" bodyend="5563" declfile="src/fort.c" declline="2194" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a66ea4a81d6bd50cb139417df40d7aba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status row_set_cell_span</definition>
        <argsstring>(f_row_t *row, size_t cell_column, size_t hor_span)</argsstring>
        <name>row_set_cell_span</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cell_column</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hor_span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5567" column="10" bodyfile="src/fort.c" bodystart="5567" bodyend="5593" declfile="src/fort.c" declline="2197" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a76b7a5fc469d3f72bedcefc8f97a8e58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int print_row_separator</definition>
        <argsstring>(f_conv_context_t *cntx, const size_t *col_width_arr, size_t cols, const f_row_t *upper_row, const f_row_t *lower_row, enum f_hor_separator_pos separatorPos, const f_separator_t *sep)</argsstring>
        <name>print_row_separator</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>col_width_arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>upper_row</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>lower_row</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5" kindref="member">f_hor_separator_pos</ref></type>
          <declname>separatorPos</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1a5527210203ffec9c5b8018dd133d8e13" kindref="member">f_separator_t</ref> *</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5776" column="5" bodyfile="src/fort.c" bodystart="5776" bodyend="5783" declfile="src/fort.c" declline="2200" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac95471ef7b950b73451dc4aaf3a0e6f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> int</type>
        <definition>FT_INTERNAL int snprintf_row</definition>
        <argsstring>(const f_row_t *row, f_conv_context_t *cntx, size_t *col_width_arr, size_t col_width_arr_sz, size_t row_height)</argsstring>
        <name>snprintf_row</name>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>col_width_arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col_width_arr_sz</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row_height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6091" column="5" bodyfile="src/fort.c" bodystart="6091" bodyend="6172" declfile="src/fort.c" declline="2206" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad094494ea525a6a511399b4bf8aac45c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * create_row_from_wstring</definition>
        <argsstring>(const wchar_t *str)</argsstring>
        <name>create_row_from_wstring</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5875" column="9" bodyfile="src/fort.c" bodystart="5875" bodyend="5958" declfile="src/fort.c" declline="2211" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a61340feda1ea158db1bd1da1671751ad" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a5527210203ffec9c5b8018dd133d8e13" kindref="member">f_separator_t</ref> *</type>
        <definition>FT_INTERNAL f_separator_t * create_separator</definition>
        <argsstring>(int enabled)</argsstring>
        <name>create_separator</name>
        <param>
          <type>int</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6898" column="15" bodyfile="src/fort.c" bodystart="6898" bodyend="6905" declfile="src/fort.c" declline="2241" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9a6706bef6f7dae20f91a49113fc2165" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void destroy_separator</definition>
        <argsstring>(f_separator_t *sep)</argsstring>
        <name>destroy_separator</name>
        <param>
          <type><ref refid="fort_8c_1a5527210203ffec9c5b8018dd133d8e13" kindref="member">f_separator_t</ref> *</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6909" column="6" bodyfile="src/fort.c" bodystart="6909" bodyend="6912" declfile="src/fort.c" declline="2244" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af3cff45d0b6bbd125b6119cfec729ed6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a5527210203ffec9c5b8018dd133d8e13" kindref="member">f_separator_t</ref> *</type>
        <definition>FT_INTERNAL f_separator_t * copy_separator</definition>
        <argsstring>(f_separator_t *sep)</argsstring>
        <name>copy_separator</name>
        <param>
          <type><ref refid="fort_8c_1a5527210203ffec9c5b8018dd133d8e13" kindref="member">f_separator_t</ref> *</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6916" column="15" bodyfile="src/fort.c" bodystart="6916" bodyend="6920" declfile="src/fort.c" declline="2247" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a7c9835a2792ffbd846c844f28e01e557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status get_table_sizes</definition>
        <argsstring>(const ft_table_t *table, size_t *rows, size_t *cols)</argsstring>
        <name>get_table_sizes</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7008" column="10" bodyfile="src/fort.c" bodystart="7008" bodyend="7023" declfile="src/fort.c" declline="2250" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a409d9364981e54abbb8616d9b98b4dfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * get_row</definition>
        <argsstring>(ft_table_t *table, size_t row)</argsstring>
        <name>get_row</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6955" column="9" bodyfile="src/fort.c" bodystart="6955" bodyend="6958" declfile="src/fort.c" declline="2253" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a278381cdc233b3476f2660a5a422a1f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL const f_row_t * get_row_c</definition>
        <argsstring>(const ft_table_t *table, size_t row)</argsstring>
        <name>get_row_c</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6962" column="15" bodyfile="src/fort.c" bodystart="6962" bodyend="6965" declfile="src/fort.c" declline="2256" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad4906ec40fada2d7ded7846d4dd0b2bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t * get_row_and_create_if_not_exists</definition>
        <argsstring>(ft_table_t *table, size_t row)</argsstring>
        <name>get_row_and_create_if_not_exists</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6969" column="9" bodyfile="src/fort.c" bodystart="6969" bodyend="6972" declfile="src/fort.c" declline="2259" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a6855260f3c1d1da0696e5d1e652bc4ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
        <definition>FT_INTERNAL f_string_buffer_t * get_cur_str_buffer_and_create_if_not_exists</definition>
        <argsstring>(ft_table_t *table)</argsstring>
        <name>get_cur_str_buffer_and_create_if_not_exists</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6975" column="19" bodyfile="src/fort.c" bodystart="6975" bodyend="7001" declfile="src/fort.c" declline="2262" declcolumn="19"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac6a1014eacf8e41589fe6e7d6ffec493" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status table_rows_and_cols_geometry</definition>
        <argsstring>(const ft_table_t *table, size_t **col_width_arr_p, size_t *col_width_arr_sz, size_t **row_height_arr_p, size_t *row_height_arr_sz, enum f_geometry_type geom)</argsstring>
        <name>table_rows_and_cols_geometry</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t **</type>
          <declname>col_width_arr_p</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>col_width_arr_sz</declname>
        </param>
        <param>
          <type>size_t **</type>
          <declname>row_height_arr_p</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>row_height_arr_sz</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027" kindref="member">f_geometry_type</ref></type>
          <declname>geom</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7027" column="10" bodyfile="src/fort.c" bodystart="7027" bodyend="7156" declfile="src/fort.c" declline="2266" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a70608495ec687e0f65fec1cdad97a12f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status table_geometry</definition>
        <argsstring>(const ft_table_t *table, size_t *height, size_t *width)</argsstring>
        <name>table_geometry</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7163" column="10" bodyfile="src/fort.c" bodystart="7163" bodyend="7207" declfile="src/fort.c" declline="2272" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae8047e766a703ad17a2dcc58645eb4df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>FT_INTERNAL f_status table_internal_codepoints_geometry</definition>
        <argsstring>(const ft_table_t *table, size_t *height, size_t *width)</argsstring>
        <name>table_internal_codepoints_geometry</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>height</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7210" column="10" bodyfile="src/fort.c" bodystart="7210" bodyend="7213" declfile="src/fort.c" declline="2279" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a6578f00761820c876daa5dfd0cbce03f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>static f_status fill_cell_from_u8string</definition>
        <argsstring>(f_cell_t *cell, const void *str)</argsstring>
        <name>fill_cell_from_u8string</name>
        <param>
          <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
          <declname>cell</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2549" column="10" bodyfile="src/fort.c" bodystart="2549" bodyend="2554"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af73fc78695a3009f5ff79a2c0d28c600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
        <definition>ft_table_t* ft_create_table</definition>
        <argsstring>(void)</argsstring>
        <name>ft_create_table</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Create formatted table.</para>
<para><simplesect kind="return"><para>The pointer to the new allocated ft_table_t, on success. NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2639" column="12" bodyfile="src/fort.c" bodystart="2639" bodyend="2668"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ft_destroy_table</definition>
        <argsstring>(ft_table_t *table)</argsstring>
        <name>ft_destroy_table</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destroy formatted table.</para>
<para>Destroy formatted table and free all resources allocated during table creation and work with it.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table previousley created with ft_create_table. If table is a null pointer, the function does nothing. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2671" column="6" bodyfile="src/fort.c" bodystart="2671" bodyend="2695"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a8470bf5021f5546b8961bd92cadffe6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
        <definition>ft_table_t* ft_copy_table</definition>
        <argsstring>(ft_table_t *table)</argsstring>
        <name>ft_copy_table</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Copy formatted table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table previousley created with ft_create_table. If table is a null pointer, the function returns null. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer to the new allocated ft_table_t, on success. NULL on error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2697" column="12" bodyfile="src/fort.c" bodystart="2697" bodyend="2746"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a62f512d8af879e83f58cb2041e08d2c9" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int split_cur_row</definition>
        <argsstring>(ft_table_t *table, f_row_t **tail_of_cur_row)</argsstring>
        <name>split_cur_row</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> **</type>
          <declname>tail_of_cur_row</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2748" column="12" bodyfile="src/fort.c" bodystart="2748" bodyend="2769"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a35af71857b08488797170d7b2a15054a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_ln</definition>
        <argsstring>(ft_table_t *table)</argsstring>
        <name>ft_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Move current position to the first cell of the next line(row).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; data were written</para>
</listitem><listitem><para>(&lt;0): In case of error. </para>
</listitem></itemizedlist>
</para>
</simplesect>
<simplesect kind="note"><para>This function can fail only in case FT_STRATEGY_INSERT adding strategy was set for the table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2771" column="5" bodyfile="src/fort.c" bodystart="2771" bodyend="2799"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a71a30e02111b90af7babd37d13f3e4ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ft_cur_row</definition>
        <argsstring>(const ft_table_t *table)</argsstring>
        <name>ft_cur_row</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get row number of the current cell.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Row number of the current cell. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2801" column="8" bodyfile="src/fort.c" bodystart="2801" bodyend="2805"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a4f3f1b331ee3637e3c8345ecb1b4ebd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ft_cur_col</definition>
        <argsstring>(const ft_table_t *table)</argsstring>
        <name>ft_cur_col</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get column number of the current cell.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Column number of the current cell. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2807" column="8" bodyfile="src/fort.c" bodystart="2807" bodyend="2811"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a6dffc742cbce46e492cd3298de467b16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ft_set_cur_cell</definition>
        <argsstring>(ft_table_t *table, size_t row, size_t col)</argsstring>
        <name>ft_set_cur_cell</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set current cell position.</para>
<para>Current cell - cell that will be edited with all modifiing functions (ft_printf, ft_write ...).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>New row number for the current cell. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>New row number for the current cell. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2813" column="6" bodyfile="src/fort.c" bodystart="2813" bodyend="2818"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a6791222986d387c26d905691c30e095b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_is_empty</definition>
        <argsstring>(const ft_table_t *table)</argsstring>
        <name>ft_is_empty</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Check if table is empty.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the table. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>1 - table is empty 0 - some data has been inserted </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2820" column="5" bodyfile="src/fort.c" bodystart="2820" bodyend="2824"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aa7e5d0d485d6c519198a5fe9eb706eba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ft_row_count</definition>
        <argsstring>(const ft_table_t *table)</argsstring>
        <name>ft_row_count</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Get number of rows in the table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Number of rows in the table. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2826" column="8" bodyfile="src/fort.c" bodystart="2826" bodyend="2830"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a53eb304387cf4e99f0198f780bc75dc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_erase_range</definition>
        <argsstring>(ft_table_t *table, size_t top_left_row, size_t top_left_col, size_t bottom_right_row, size_t bottom_right_col)</argsstring>
        <name>ft_erase_range</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>top_left_row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>top_left_col</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bottom_right_row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>bottom_right_col</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Erase range of cells.</para>
<para>Range of cells is determined by 2 points (top-left and bottom-right) (both ends are included).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top_left_row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row number of the top left cell in the range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>top_left_col</parametername>
</parameternamelist>
<parameterdescription>
<para>Column number of the top left cell in the range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom_right_row</parametername>
</parameternamelist>
<parameterdescription>
<para>Row number of the bottom right cell in the range. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bottom_right_col</parametername>
</parameternamelist>
<parameterdescription>
<para>Column number of the bottom right cell in the range. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0 - Operation was successfully implemented</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2832" column="5" bodyfile="src/fort.c" bodystart="2832" bodyend="2887"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a1d0ea96c790dc48edc9bd5a8ce453be1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ft_row_printf_impl_</definition>
        <argsstring>(ft_table_t *table, size_t row, const struct f_string_view *fmt, va_list *va)</argsstring>
        <name>ft_row_printf_impl_</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>const struct <ref refid="structf__string__view" kindref="compound">f_string_view</ref> *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list *</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2890" column="12" bodyfile="src/fort.c" bodystart="2890" bodyend="2947"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aefa78da00a14db61410597df4991ea08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FT_PRINTF</definition>
        <argsstring>(ft_table_t *table, const char *fmt,...)</argsstring>
        <name>FT_PRINTF</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2959" column="5" bodyfile="src/fort.c" bodystart="2959" bodyend="2971"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad2fd5883b642ce927813c728fee08f84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int FT_PRINTF_LN</definition>
        <argsstring>(ft_table_t *table, const char *fmt,...)</argsstring>
        <name>FT_PRINTF_LN</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2973" column="5" bodyfile="src/fort.c" bodystart="2973" bodyend="2988"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a93dacf69774a8a84fecee3035ad7650e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_wprintf</definition>
        <argsstring>(ft_table_t *table, const wchar_t *fmt,...)</argsstring>
        <name>ft_wprintf</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="2994" column="5" bodyfile="src/fort.c" bodystart="2994" bodyend="3006"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a756d50513a7dbf57d2e7144802dd23f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_wprintf_ln</definition>
        <argsstring>(ft_table_t *table, const wchar_t *fmt,...)</argsstring>
        <name>ft_wprintf_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3008" column="5" bodyfile="src/fort.c" bodystart="3008" bodyend="3023"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a08dbade99a0cfc34c549f7ee29a60fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ft_set_default_printf_field_separator</definition>
        <argsstring>(char separator)</argsstring>
        <name>ft_set_default_printf_field_separator</name>
        <param>
          <type>char</type>
          <declname>separator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set field separator for <ref refid="" kindref="compound">ft_printf</ref>, <ref refid="" kindref="compound">ft_printf_ln</ref> (default separator is &apos;|&apos;).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>separator</parametername>
</parameternamelist>
<parameterdescription>
<para>New separator. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3027" column="6" bodyfile="src/fort.c" bodystart="3027" bodyend="3030"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab7466f1c75779afb35810b7371469251" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ft_write_impl_</definition>
        <argsstring>(ft_table_t *table, const f_string_view_t *cell_content)</argsstring>
        <name>ft_write_impl_</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1a5e5d59807caf98214d772b0952b8439c" kindref="member">f_string_view_t</ref> *</type>
          <declname>cell_content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3032" column="12" bodyfile="src/fort.c" bodystart="3032" bodyend="3061"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a109048bf3cc63e33daeec9c85279443d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ft_write_impl</definition>
        <argsstring>(ft_table_t *table, const char *cell_content)</argsstring>
        <name>ft_write_impl</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cell_content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3063" column="12" bodyfile="src/fort.c" bodystart="3063" bodyend="3069"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad56c77359202992df2cc5a811511862d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ft_u8write_impl</definition>
        <argsstring>(ft_table_t *table, const void *cell_content)</argsstring>
        <name>ft_u8write_impl</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>cell_content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3072" column="12" bodyfile="src/fort.c" bodystart="3072" bodyend="3078"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a8f8b661b0e1f0dd765949e67e1f88c43" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int ft_wwrite_impl</definition>
        <argsstring>(ft_table_t *table, const wchar_t *cell_content)</argsstring>
        <name>ft_wwrite_impl</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>cell_content</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3082" column="12" bodyfile="src/fort.c" bodystart="3082" bodyend="3088"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a69052e887e05d6dc3a0891550127619b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_nwrite</definition>
        <argsstring>(ft_table_t *table, size_t count, const char *cell_content,...)</argsstring>
        <name>ft_nwrite</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cell_content</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write specified number of strings to the table.</para>
<para>Write specified number of strings to the same number of consecutive cells in the current row.</para>
<para><simplesect kind="note"><para>In most cases it is more preferable to use MACRO <ref refid="fort_8h_1aeb1059360e481caef1d2dcced5d5b646" kindref="member">ft_write</ref> instead of <ref refid="fort_8h_1a69052e887e05d6dc3a0891550127619b" kindref="member">ft_nwrite</ref>, which is more safe (<ref refid="fort_8h_1aeb1059360e481caef1d2dcced5d5b646" kindref="member">ft_write</ref> automatically counts the number of string arguments and at compile check that all passed arguments are strings).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of strings to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_content</parametername>
</parameternamelist>
<parameterdescription>
<para>First string to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Other strings to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; data were written</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3092" column="5" bodyfile="src/fort.c" bodystart="3092" bodyend="3113"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a09342b73950f97c0e73bbed2df40b48a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_nwrite_ln</definition>
        <argsstring>(ft_table_t *table, size_t count, const char *cell_content,...)</argsstring>
        <name>ft_nwrite_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>count</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>cell_content</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write specified number of strings to the table and go to the next line.</para>
<para>Write specified number of strings to the same number of consecutive cells in the current row and move current position to the first cell of the next line(row).</para>
<para><simplesect kind="note"><para>In most cases it is more preferable to use MACRO <ref refid="fort_8h_1aeb1059360e481caef1d2dcced5d5b646" kindref="member">ft_write</ref> instead of <ref refid="fort_8h_1a69052e887e05d6dc3a0891550127619b" kindref="member">ft_nwrite</ref>, which is more safe (<ref refid="fort_8h_1aeb1059360e481caef1d2dcced5d5b646" kindref="member">ft_write</ref> automatically counts the number of string arguments and at compile check that all passed arguments are strings).</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of strings to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cell_content</parametername>
</parameternamelist>
<parameterdescription>
<para>First string to write. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>...</parametername>
</parameternamelist>
<parameterdescription>
<para>Other strings to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; data were written</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3115" column="5" bodyfile="src/fort.c" bodystart="3115" bodyend="3138"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aac28f7840d0a323ca3c4df1e6f43bdf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_nwwrite</definition>
        <argsstring>(ft_table_t *table, size_t n, const wchar_t *cell_content,...)</argsstring>
        <name>ft_nwwrite</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>cell_content</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3145" column="5" bodyfile="src/fort.c" bodystart="3145" bodyend="3166"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a313b73c39aa6127200cd7b7fee92d8f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_nwwrite_ln</definition>
        <argsstring>(ft_table_t *table, size_t n, const wchar_t *cell_content,...)</argsstring>
        <name>ft_nwwrite_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>cell_content</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3168" column="5" bodyfile="src/fort.c" bodystart="3168" bodyend="3191"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a53cf32548aedb54757ca598703db688c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_row_write</definition>
        <argsstring>(ft_table_t *table, size_t cols, const char *cells[])</argsstring>
        <name>ft_row_write</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>row_cells</declname>
          <defname>cells</defname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write strings from the array to the table.</para>
<para>Write specified number of strings from the array to the same number of consecutive cells in the current row.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in row_cells. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_cells</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of strings to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; data were written</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3195" column="5" bodyfile="src/fort.c" bodystart="3195" bodyend="3207"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a49f9c909317adb1f49c0f2af1e67afeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_row_write_ln</definition>
        <argsstring>(ft_table_t *table, size_t cols, const char *cells[])</argsstring>
        <name>ft_row_write_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>row_cells</declname>
          <defname>cells</defname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write strings from the array to the table and go to the next line.</para>
<para>Write specified number of strings from the array to the same number of consecutive cells in the current row and move current position to the first cell of the next line(row).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of elements in row_cells. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row_cells</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of strings to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; data were written</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3209" column="5" bodyfile="src/fort.c" bodystart="3209" bodyend="3217"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a16ce443f98156fd69c251c8dab9fb7ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_row_wwrite</definition>
        <argsstring>(ft_table_t *table, size_t cols, const wchar_t *cells[])</argsstring>
        <name>ft_row_wwrite</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>cells</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3220" column="5" bodyfile="src/fort.c" bodystart="3220" bodyend="3234"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1abff22c6be328391a9e72e25bf0cf4d3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_row_wwrite_ln</definition>
        <argsstring>(ft_table_t *table, size_t cols, const wchar_t *cells[])</argsstring>
        <name>ft_row_wwrite_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>cells</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3236" column="5" bodyfile="src/fort.c" bodystart="3236" bodyend="3244"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac026a41e784483319aa4c7c89a9dfe06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_table_write</definition>
        <argsstring>(ft_table_t *table, size_t rows, size_t cols, const char *table_cells[])</argsstring>
        <name>ft_table_write</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>table_cells</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write strings from the 2D array to the table.</para>
<para>Write specified number of strings from the 2D array to the formatted table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in the 2D array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in the 2D array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table_cells</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array of strings to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; data were written</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3249" column="5" bodyfile="src/fort.c" bodystart="3249" bodyend="3265"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad9219b581d29cb079847b0bfd6911271" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_table_write_ln</definition>
        <argsstring>(ft_table_t *table, size_t rows, size_t cols, const char *table_cells[])</argsstring>
        <name>ft_table_write_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>table_cells</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Write strings from the 2D array to the table and go to the next line.</para>
<para>Write specified number of strings from the 2D array to the formatted table and move current position to the first cell of the next line(row).</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to formatted table. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rows</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rows in the 2D array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cols</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of columns in the 2D array. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>table_cells</parametername>
</parameternamelist>
<parameterdescription>
<para>2D array of strings to write. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; data were written</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3267" column="5" bodyfile="src/fort.c" bodystart="3267" bodyend="3275"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1adb37fd79298ef7f28d9304f3aa135f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_table_wwrite</definition>
        <argsstring>(ft_table_t *table, size_t rows, size_t cols, const wchar_t *table_cells[])</argsstring>
        <name>ft_table_wwrite</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>table_cells</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3279" column="5" bodyfile="src/fort.c" bodystart="3279" bodyend="3295"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac2c4cd5246efb7d713cc0ccd5dad49cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_table_wwrite_ln</definition>
        <argsstring>(ft_table_t *table, size_t rows, size_t cols, const wchar_t *table_cells[])</argsstring>
        <name>ft_table_wwrite_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>rows</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>table_cells</declname>
          <array>[]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3297" column="5" bodyfile="src/fort.c" bodystart="3297" bodyend="3305"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aa8521a3b5724395ab5989ea09db78ac7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>static const void* ft_to_string_impl</definition>
        <argsstring>(const ft_table_t *table, enum f_string_type b_type)</argsstring>
        <name>ft_to_string_impl</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref></type>
          <declname>b_type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3312" column="12" bodyfile="src/fort.c" bodystart="3312" bodyend="3403"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aba499778dc3afcddfed50e79b0d97832" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ft_to_string</definition>
        <argsstring>(const ft_table_t *table)</argsstring>
        <name>ft_to_string</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Convert table to string representation.</para>
<para>ft_table_t has ownership of the returned pointer. So there is no need to free it. To take ownership user should explicitly copy the returned string with strdup or similar functions.</para>
<para>Returned pointer may be later invalidated by:<itemizedlist>
<listitem><para>Calling ft_destroy_table;</para>
</listitem><listitem><para>Other invocations of ft_to_string.</para>
</listitem></itemizedlist>
</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Formatted table. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>The pointer to the string representation of formatted table, on success.</para>
</listitem><listitem><para>NULL on error. </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3405" column="12" bodyfile="src/fort.c" bodystart="3405" bodyend="3408"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aac166e469337bc82fb4cc796a6e6b569" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const wchar_t *</type>
        <definition>const wchar_t* ft_to_wstring</definition>
        <argsstring>(const ft_table_t *table)</argsstring>
        <name>ft_to_wstring</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3411" column="15" bodyfile="src/fort.c" bodystart="3411" bodyend="3414"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a22fc0b6196d1a9a398785e23673eeeb0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_add_separator</definition>
        <argsstring>(ft_table_t *table)</argsstring>
        <name>ft_add_separator</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Add separator after the current row.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>Formatted table. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; separator was added.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3418" column="5" bodyfile="src/fort.c" bodystart="3418" bodyend="3441"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a97e3278691cbac881103151d7d0e5c62" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void set_border_props_for_props</definition>
        <argsstring>(f_table_properties_t *properties, const struct ft_border_style *style)</argsstring>
        <name>set_border_props_for_props</name>
        <param>
          <type><ref refid="fort_8c_1a735cace167a88d782d8e3200cb4aedf9" kindref="member">f_table_properties_t</ref> *</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3487" column="13" bodyfile="src/fort.c" bodystart="3487" bodyend="3542"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1addb2484d7bc2a271be60cf743ae8eaeb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_set_default_border_style</definition>
        <argsstring>(const struct ft_border_style *style)</argsstring>
        <name>ft_set_default_border_style</name>
        <param>
          <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set default border style for all new formatted tables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to border style. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; default border style was changed.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3545" column="5" bodyfile="src/fort.c" bodystart="3545" bodyend="3549"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aaa966b7da0ee2e2d2a93dc6a5e1ef81b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_set_border_style</definition>
        <argsstring>(ft_table_t *table, const struct ft_border_style *style)</argsstring>
        <name>ft_set_border_style</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const struct <ref refid="structft__border__style" kindref="compound">ft_border_style</ref> *</type>
          <declname>style</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set border style for the table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ft_table_t structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>style</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to border style. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; table border style was changed.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3551" column="5" bodyfile="src/fort.c" bodystart="3551" bodyend="3561"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a10dc95b3d810a0ab2bf6c90b7b8c66a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_set_cell_prop</definition>
        <argsstring>(ft_table_t *table, size_t row, size_t col, uint32_t property, int value)</argsstring>
        <name>ft_set_cell_prop</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set property for the specified cell of the table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ft_table_t structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell row. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell column. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell property identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell property value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; cell property was changed.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3565" column="5" bodyfile="src/fort.c" bodystart="3565" bodyend="3587"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a894497fac87518023122266da59f8da1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_set_default_cell_prop</definition>
        <argsstring>(uint32_t property, int value)</argsstring>
        <name>ft_set_default_cell_prop</name>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set default cell property for all new formatted tables.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell property identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell property value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; default cell property was changed.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3589" column="5" bodyfile="src/fort.c" bodystart="3589" bodyend="3592"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a0ebdf7b17d363037f4b0d48ce1438a6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_set_default_tbl_prop</definition>
        <argsstring>(uint32_t property, int value)</argsstring>
        <name>ft_set_default_tbl_prop</name>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set default table property.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>Table property identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Table property value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; default table property was changed.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3595" column="5" bodyfile="src/fort.c" bodystart="3595" bodyend="3598"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_set_tbl_prop</definition>
        <argsstring>(ft_table_t *table, uint32_t property, int value)</argsstring>
        <name>ft_set_tbl_prop</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set table property.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ft_table_t structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>property</parametername>
</parameternamelist>
<parameterdescription>
<para>Table property identifier. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Table property value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; default table property was changed.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3600" column="5" bodyfile="src/fort.c" bodystart="3600" bodyend="3610"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a3477def0e7247bbccacb0c93530aaee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ft_set_memory_funcs</definition>
        <argsstring>(void *(*f_malloc)(size_t size), void(*f_free)(void *ptr))</argsstring>
        <name>ft_set_memory_funcs</name>
        <param>
          <type>void *(*)(size_t size)</type>
          <declname>f_malloc</declname>
        </param>
        <param>
          <type>void(*)(void *ptr)</type>
          <declname>f_free</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set functions for memory allocation and deallocation to be used instead of standard ones.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f_malloc</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a function for memory allocation that should be used instead of malloc. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f_free</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a function for memory deallocation that should be used instead of free. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>To return memory allocation/deallocation functions to their standard values set f_malloc and f_free to NULL. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3612" column="6" bodyfile="src/fort.c" bodystart="3612" bodyend="3615"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a50aacda85487577f3d84b3733134c660" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* ft_strerror</definition>
        <argsstring>(int error_code)</argsstring>
        <name>ft_strerror</name>
        <param>
          <type>int</type>
          <declname>error_code</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Return string describing the <computeroutput>error_code</computeroutput>.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>error_code</parametername>
</parameternamelist>
<parameterdescription>
<para>Error code returned by the library. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String describing the error. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3617" column="12" bodyfile="src/fort.c" bodystart="3617" bodyend="3634"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae958a4787cc8fee9abb452bbced096f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_set_cell_span</definition>
        <argsstring>(ft_table_t *table, size_t row, size_t col, size_t hor_span)</argsstring>
        <name>ft_set_cell_span</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>hor_span</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set column span for the specified cell of the table.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>table</parametername>
</parameternamelist>
<parameterdescription>
<para>A pointer to the ft_table_t structure. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>row</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell row. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>col</parametername>
</parameternamelist>
<parameterdescription>
<para>Cell column. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hor_span</parametername>
</parameternamelist>
<parameterdescription>
<para>Column span. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><itemizedlist>
<listitem><para>0: Success; cell span was changed.</para>
</listitem><listitem><para>(&lt;0): In case of error </para>
</listitem></itemizedlist>
</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3636" column="5" bodyfile="src/fort.c" bodystart="3636" bodyend="3652"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a61aec826074239282309ce1369563f64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_u8nwrite</definition>
        <argsstring>(ft_table_t *table, size_t n, const void *cell_content,...)</argsstring>
        <name>ft_u8nwrite</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>cell_content</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3656" column="5" bodyfile="src/fort.c" bodystart="3656" bodyend="3678"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a4c378ecb73c881a0793930c76a64ff41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_u8nwrite_ln</definition>
        <argsstring>(ft_table_t *table, size_t n, const void *cell_content,...)</argsstring>
        <name>ft_u8nwrite_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>cell_content</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3680" column="5" bodyfile="src/fort.c" bodystart="3680" bodyend="3703"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab60bde884315e3378ad43a751d2beba8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_u8printf</definition>
        <argsstring>(ft_table_t *table, const char *fmt,...)</argsstring>
        <name>ft_u8printf</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3706" column="5" bodyfile="src/fort.c" bodystart="3706" bodyend="3718"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aba01f77855c39b8ecdd47db944429088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ft_u8printf_ln</definition>
        <argsstring>(ft_table_t *table, const char *fmt,...)</argsstring>
        <name>ft_u8printf_ln</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3721" column="5" bodyfile="src/fort.c" bodystart="3721" bodyend="3736"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5808261f472f79c8293323a61d10d552" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const void *</type>
        <definition>const void* ft_to_u8string</definition>
        <argsstring>(const ft_table_t *table)</argsstring>
        <name>ft_to_u8string</name>
        <param>
          <type>const <ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3738" column="12" bodyfile="src/fort.c" bodystart="3738" bodyend="3741"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac19c7bf75bde46f17a954159b27724f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ft_set_u8strwid_func</definition>
        <argsstring>(int(*u8strwid)(const void *beg, const void *end, size_t *width))</argsstring>
        <name>ft_set_u8strwid_func</name>
        <param>
          <type>int(*)(const void *beg, const void *end, size_t *width)</type>
          <declname>u8strwid</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Set custom function to compute visible width of UTF-8 string.</para>
<para>libfort internally has a very simple logic to compute visible width of UTF-8 strings. It considers that each codepoint will occupy one position on the terminal in case of monowidth font (some east asians wide and fullwidth characters (see <ulink url="http://www.unicode.org/reports/tr11/tr11-33.html">http://www.unicode.org/reports/tr11/tr11-33.html</ulink>) will occupy 2 positions). This logic is very simple and covers wide range of cases. But obviously there a lot of cases when it is not sufficient. In such cases user should use some external libraries and provide an appropriate function to libfort.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>u8strwid</parametername>
</parameternamelist>
<parameterdescription>
<para>User provided function to evaluate width of UTF-8 string ( beg - start of UTF-8 string, end - end of UTF-8 string (not included), width - pointer to the result). If function succeed it should return 0, otherwise some non- zero value. If function returns nonzero value libfort fallbacks to default internal algorithm. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3743" column="6" bodyfile="src/fort.c" bodystart="3743" bodyend="3746"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9ff793bed45bfb1ad7cc123b87c5bf79" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* local_malloc</definition>
        <argsstring>(size_t size)</argsstring>
        <name>local_malloc</name>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3781" column="13" bodyfile="src/fort.c" bodystart="3781" bodyend="3784"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a97012491c1ca346c451485422870028f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void local_free</definition>
        <argsstring>(void *ptr)</argsstring>
        <name>local_free</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3786" column="13" bodyfile="src/fort.c" bodystart="3786" bodyend="3789"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a36b2ca4ad847e8df17846a27d3deb9a3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* local_calloc</definition>
        <argsstring>(size_t nmemb, size_t size)</argsstring>
        <name>local_calloc</name>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3791" column="13" bodyfile="src/fort.c" bodystart="3791" bodyend="3794"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a856ac8f2d7ec18df2137455133d253e5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* local_realloc</definition>
        <argsstring>(void *ptr, size_t size)</argsstring>
        <name>local_realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3796" column="13" bodyfile="src/fort.c" bodystart="3796" bodyend="3799"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a8699f7646f88ae104b5a34e1c08eeff6" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* custom_fort_calloc</definition>
        <argsstring>(size_t nmemb, size_t size)</argsstring>
        <name>custom_fort_calloc</name>
        <param>
          <type>size_t</type>
          <declname>nmemb</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3807" column="13" bodyfile="src/fort.c" bodystart="3807" bodyend="3814"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1acdc55424d2fa021e47bbedf70acd5494" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>static void* custom_fort_realloc</definition>
        <argsstring>(void *ptr, size_t size)</argsstring>
        <name>custom_fort_realloc</name>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3816" column="13" bodyfile="src/fort.c" bodystart="3816" bodyend="3836"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5e9760e4f2a87647f0ff73919b44209d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t columns_number_in_fmt_string</definition>
        <argsstring>(const char *fmt)</argsstring>
        <name>columns_number_in_fmt_string</name>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3900" column="8" bodyfile="src/fort.c" bodystart="3900" bodyend="3913"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1afd22d37ad15d4a94d6dfbfa1b9096c65" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t columns_number_in_fmt_wstring</definition>
        <argsstring>(const wchar_t *fmt)</argsstring>
        <name>columns_number_in_fmt_wstring</name>
        <param>
          <type>const wchar_t *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3917" column="8" bodyfile="src/fort.c" bodystart="3917" bodyend="3930"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a145953f3a7ab3d79566cfdd192014520" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t columns_number_in_fmt_u8string</definition>
        <argsstring>(const void *fmt)</argsstring>
        <name>columns_number_in_fmt_u8string</name>
        <param>
          <type>const void *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3935" column="8" bodyfile="src/fort.c" bodystart="3935" bodyend="3948"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9b3dbf26144e676edf02e37fe248d9bf" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snprint_n_strings_impl</definition>
        <argsstring>(char *buf, size_t length, size_t n, const char *str)</argsstring>
        <name>snprint_n_strings_impl</name>
        <param>
          <type>char *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="3992" column="5" bodyfile="src/fort.c" bodystart="3992" bodyend="4019"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a4119239b376af29bffd83fcd986ad6ba" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int snprint_n_strings</definition>
        <argsstring>(f_conv_context_t *cntx, size_t n, const char *str)</argsstring>
        <name>snprint_n_strings</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4022" column="5" bodyfile="src/fort.c" bodystart="4022" bodyend="4030"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac3c3118b3e7b905cdec8c2981330ac40" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int wsnprint_n_string</definition>
        <argsstring>(wchar_t *buf, size_t length, size_t n, const char *str)</argsstring>
        <name>wsnprint_n_string</name>
        <param>
          <type>wchar_t *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4138" column="5" bodyfile="src/fort.c" bodystart="4138" bodyend="4199" declfile="src/fort.c" declline="4034" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a6f99f6fb458bb47a3e1c5f1e0fa57c0e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int u8nprint_n_strings</definition>
        <argsstring>(void *buf, size_t length, size_t n, const void *str)</argsstring>
        <name>u8nprint_n_strings</name>
        <param>
          <type>void *</type>
          <declname>buf</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>length</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4205" column="5" bodyfile="src/fort.c" bodystart="4205" bodyend="4229" declfile="src/fort.c" declline="4039" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af8249b98277fd6bc4d40f1d40e6963d5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int get_prop_value_if_exists_otherwise_default</definition>
        <argsstring>(const struct f_cell_props *cell_opts, uint32_t property)</argsstring>
        <name>get_prop_value_if_exists_otherwise_default</name>
        <param>
          <type>const struct <ref refid="structf__cell__props" kindref="compound">f_cell_props</ref> *</type>
          <declname>cell_opts</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4510" column="12" bodyfile="src/fort.c" bodystart="4510" bodyend="4547"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a98dee656671be840bd7868cab753efbd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>static f_status set_cell_property_impl</definition>
        <argsstring>(f_cell_props_t *opt, uint32_t property, int value)</argsstring>
        <name>set_cell_property_impl</name>
        <param>
          <type><ref refid="fort_8c_1a1dd5de14b38f8ea6034cd4574d2c5122" kindref="member">f_cell_props_t</ref> *</type>
          <declname>opt</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="4644" column="17" bodyfile="src/fort.c" bodystart="4644" bodyend="4697"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a4ff337c795d6c3c507e51a4b04b27a5b" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref></type>
        <definition>static f_status set_entire_table_property_internal</definition>
        <argsstring>(fort_entire_table_properties_t *properties, uint32_t property, int value)</argsstring>
        <name>set_entire_table_property_internal</name>
        <param>
          <type><ref refid="fort_8c_1a171a2ab1349903dadd4fde07a45a6ee3" kindref="member">fort_entire_table_properties_t</ref> *</type>
          <declname>properties</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>property</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5120" column="17" bodyfile="src/fort.c" bodystart="5120" bodyend="5141"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af91b999fbf9f89dc87b7bb9ba241cecd" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref> *</type>
        <definition>static f_cell_prop_container_t* copy_cell_properties</definition>
        <argsstring>(f_cell_prop_container_t *cont)</argsstring>
        <name>copy_cell_properties</name>
        <param>
          <type><ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref> *</type>
          <declname>cont</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5225" column="25" bodyfile="src/fort.c" bodystart="5225" bodyend="5241"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a1fc55cf0a1882963504b545a6bc60091" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>static f_row_t* create_row_impl</definition>
        <argsstring>(f_vector_t *cells)</argsstring>
        <name>create_row_impl</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <declname>cells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5286" column="9" bodyfile="src/fort.c" bodystart="5286" bodyend="5301"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aceb9c9bb22cf25e3a4fd85fd7a2b8892" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void destroy_each_cell</definition>
        <argsstring>(f_vector_t *cells)</argsstring>
        <name>destroy_each_cell</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <declname>cells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5310" column="6" bodyfile="src/fort.c" bodystart="5310" bodyend="5318"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af4a5a614d1e00274ce9ea443cc08d344" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1a07073b13d8f5c2ae343197ab233e15f4" kindref="member">f_cell_t</ref> *</type>
        <definition>static f_cell_t* get_cell_impl</definition>
        <argsstring>(f_row_t *row, size_t col, enum f_get_policy policy)</argsstring>
        <name>get_cell_impl</name>
        <param>
          <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>row</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>col</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879" kindref="member">f_get_policy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5406" column="10" bodyfile="src/fort.c" bodystart="5406" bodyend="5433"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a64d4d5e85a6b892f0394d202215c83e7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int print_row_separator_impl</definition>
        <argsstring>(f_conv_context_t *cntx, const size_t *col_width_arr, size_t cols, const f_row_t *upper_row, const f_row_t *lower_row, enum f_hor_separator_pos separatorPos, const f_separator_t *sep)</argsstring>
        <name>print_row_separator_impl</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>const size_t *</type>
          <declname>col_width_arr</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>cols</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>upper_row</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
          <declname>lower_row</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5" kindref="member">f_hor_separator_pos</ref></type>
          <declname>separatorPos</declname>
        </param>
        <param>
          <type>const <ref refid="fort_8c_1a5527210203ffec9c5b8018dd133d8e13" kindref="member">f_separator_t</ref> *</type>
          <declname>sep</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5596" column="5" bodyfile="src/fort.c" bodystart="5596" bodyend="5773"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ac2a338b2686d9caaf68f9812458af00d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> <ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>FT_INTERNAL f_row_t* create_row_from_buffer</definition>
        <argsstring>(const f_string_buffer_t *buffer)</argsstring>
        <name>create_row_from_buffer</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5962" column="9" bodyfile="src/fort.c" bodystart="5962" bodyend="5979"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aa1face979203a128f4be5a0e53f04258" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vsnprintf_buffer</definition>
        <argsstring>(f_string_buffer_t *buffer, const struct f_string_view *fmt, va_list *va)</argsstring>
        <name>vsnprintf_buffer</name>
        <param>
          <type><ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const struct <ref refid="structf__string__view" kindref="compound">f_string_view</ref> *</type>
          <declname>fmt</declname>
        </param>
        <param>
          <type>va_list *</type>
          <declname>va</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="5982" column="1" bodyfile="src/fort.c" bodystart="5982" bodyend="6016"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a7e6684997947366d984fd761514fe994" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ptrdiff_t</type>
        <definition>static ptrdiff_t str_iter_width</definition>
        <argsstring>(const char *beg, const char *end)</argsstring>
        <name>str_iter_width</name>
        <param>
          <type>const char *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6195" column="18" bodyfile="src/fort.c" bodystart="6195" bodyend="6199"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a50f1f21fe5a7f76e0dedd9e8d16486a4" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ptrdiff_t</type>
        <definition>static ptrdiff_t wcs_iter_width</definition>
        <argsstring>(const wchar_t *beg, const wchar_t *end)</argsstring>
        <name>wcs_iter_width</name>
        <param>
          <type>const wchar_t *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const wchar_t *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6203" column="18" bodyfile="src/fort.c" bodystart="6203" bodyend="6207"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a5e9491cafc7ebf006754aa5f60442013" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t buf_str_len</definition>
        <argsstring>(const f_string_buffer_t *buf)</argsstring>
        <name>buf_str_len</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6211" column="15" bodyfile="src/fort.c" bodystart="6211" bodyend="6230"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ae289954698a8c45f5e5b8691dfb3c158" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t strchr_count</definition>
        <argsstring>(const char *str, char ch)</argsstring>
        <name>strchr_count</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6234" column="8" bodyfile="src/fort.c" bodystart="6234" bodyend="6247"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a8ca255a1bafc7d73de3e0dcc4736f992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t wstrchr_count</definition>
        <argsstring>(const wchar_t *str, wchar_t ch)</argsstring>
        <name>wstrchr_count</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6251" column="8" bodyfile="src/fort.c" bodystart="6251" bodyend="6264"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9902d63c0d741e454d99a080cda0ee3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void *</type>
        <definition>FT_INTERNAL void* ut8next</definition>
        <argsstring>(const void *str)</argsstring>
        <name>ut8next</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6271" column="6" bodyfile="src/fort.c" bodystart="6271" bodyend="6275"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af2542674afdd3d9ad6961fb066dd6c4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> size_t</type>
        <definition>FT_INTERNAL size_t utf8chr_count</definition>
        <argsstring>(const void *str, utf8_int32_t ch)</argsstring>
        <name>utf8chr_count</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>ch</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6278" column="8" bodyfile="src/fort.c" bodystart="6278" bodyend="6291"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a119606a116660b7fff9cca27c427938e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> const char *</type>
        <definition>FT_INTERNAL const char* str_n_substring_beg</definition>
        <argsstring>(const char *str, char ch_separator, size_t n)</argsstring>
        <name>str_n_substring_beg</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch_separator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6296" column="12" bodyfile="src/fort.c" bodystart="6296" bodyend="6314"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1afa36de19c4268bd2e49fb76ff812b61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> const wchar_t *</type>
        <definition>FT_INTERNAL const wchar_t* wstr_n_substring_beg</definition>
        <argsstring>(const wchar_t *str, wchar_t ch_separator, size_t n)</argsstring>
        <name>wstr_n_substring_beg</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>ch_separator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6319" column="15" bodyfile="src/fort.c" bodystart="6319" bodyend="6337"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ab80403e5752df2019a950e8d4bfd6d02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> const void *</type>
        <definition>FT_INTERNAL const void* utf8_n_substring_beg</definition>
        <argsstring>(const void *str, utf8_int32_t ch_separator, size_t n)</argsstring>
        <name>utf8_n_substring_beg</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>ch_separator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6342" column="12" bodyfile="src/fort.c" bodystart="6342" bodyend="6360"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a813d4ec1a357d5ea24ab7f3abd339dfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void str_n_substring</definition>
        <argsstring>(const char *str, char ch_separator, size_t n, const char **begin, const char **end)</argsstring>
        <name>str_n_substring</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>char</type>
          <declname>ch_separator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6365" column="6" bodyfile="src/fort.c" bodystart="6365" bodyend="6382"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1abf373d518201debe18cd197815ca9ac5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void wstr_n_substring</definition>
        <argsstring>(const wchar_t *str, wchar_t ch_separator, size_t n, const wchar_t **begin, const wchar_t **end)</argsstring>
        <name>wstr_n_substring</name>
        <param>
          <type>const wchar_t *</type>
          <declname>str</declname>
        </param>
        <param>
          <type>wchar_t</type>
          <declname>ch_separator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const wchar_t **</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const wchar_t **</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6387" column="6" bodyfile="src/fort.c" bodystart="6387" bodyend="6404"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad9fad63df44484d04f254de1a6e25e91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref> void</type>
        <definition>FT_INTERNAL void utf8_n_substring</definition>
        <argsstring>(const void *str, utf8_int32_t ch_separator, size_t n, const void **begin, const void **end)</argsstring>
        <name>utf8_n_substring</name>
        <param>
          <type>const void *</type>
          <declname>str</declname>
        </param>
        <param>
          <type><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref></type>
          <declname>ch_separator</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6409" column="6" bodyfile="src/fort.c" bodystart="6409" bodyend="6426"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad1321fa8c3b41eac173fa51dd5478c3c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t utf8_width</definition>
        <argsstring>(const void *beg, const void *end)</argsstring>
        <name>utf8_width</name>
        <param>
          <type>const void *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6639" column="8" bodyfile="src/fort.c" bodystart="6639" bodyend="6657"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a9dd52c23737b04223baca49230f08d1e" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void buffer_substring</definition>
        <argsstring>(const f_string_buffer_t *buffer, size_t buffer_row, const void **begin, const void **end, ptrdiff_t *str_it_width)</argsstring>
        <name>buffer_substring</name>
        <param>
          <type>const <ref refid="fort_8c_1a0a5a8f4508c5e8fb7334b4d5e25b5a88" kindref="member">f_string_buffer_t</ref> *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>buffer_row</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>begin</declname>
        </param>
        <param>
          <type>const void **</type>
          <declname>end</declname>
        </param>
        <param>
          <type>ptrdiff_t *</type>
          <declname>str_it_width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6715" column="1" bodyfile="src/fort.c" bodystart="6715" bodyend="6740"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a62edc4ea60314698d330d55857f100aa" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int buffer_print_range</definition>
        <argsstring>(f_conv_context_t *cntx, const void *beg, const void *end)</argsstring>
        <name>buffer_print_range</name>
        <param>
          <type><ref refid="fort_8c_1afb581d944956bc8e61433744691e7efd" kindref="member">f_conv_context_t</ref> *</type>
          <declname>cntx</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>beg</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>end</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6744" column="1" bodyfile="src/fort.c" bodystart="6744" bodyend="6764"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1ad4b02c5389cf7c058e2c854abdd5f0c0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="fort_8c_1aa0bdfda190d8de7da4ccc021bdfad12b" kindref="member">f_row_t</ref> *</type>
        <definition>static f_row_t* get_row_impl</definition>
        <argsstring>(ft_table_t *table, size_t row, enum f_get_policy policy)</argsstring>
        <name>get_row_impl</name>
        <param>
          <type><ref refid="fort_8h_1a6307d2840e0e96880c4d0f04b12a2187" kindref="member">ft_table_t</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>row</declname>
        </param>
        <param>
          <type>enum <ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879" kindref="member">f_get_policy</ref></type>
          <declname>policy</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="6924" column="9" bodyfile="src/fort.c" bodystart="6924" bodyend="6951"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1a7d9a384b07f9ea738549c55c1b514246" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int vector_reallocate_</definition>
        <argsstring>(f_vector_t *vector, size_t new_capacity)</argsstring>
        <name>vector_reallocate_</name>
        <param>
          <type><ref refid="fort_8c_1a78e8dbb8ad34fe4db079d7e394af36d0" kindref="member">f_vector_t</ref> *</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>new_capacity</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7236" column="12" bodyfile="src/fort.c" bodystart="7236" bodyend="7246"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1aef5f457ec6d0ae780e7d6f17c5222437" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int bisearch</definition>
        <argsstring>(int32_t ucs, const struct interval *table, int max)</argsstring>
        <name>bisearch</name>
        <param>
          <type>int32_t</type>
          <declname>ucs</declname>
        </param>
        <param>
          <type>const struct <ref refid="structinterval" kindref="compound">interval</ref> *</type>
          <declname>table</declname>
        </param>
        <param>
          <type>int</type>
          <declname>max</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7578" column="12" bodyfile="src/fort.c" bodystart="7578" bodyend="7595"/>
      </memberdef>
      <memberdef kind="function" id="fort_8c_1af041011249b414859a5665538b30d54f" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int mk_wcwidth</definition>
        <argsstring>(wchar_t wcs)</argsstring>
        <name>mk_wcwidth</name>
        <param>
          <type>wchar_t</type>
          <declname>wcs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/fort.c" line="7630" column="12" bodyfile="src/fort.c" bodystart="7630" bodyend="7720"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">libfort</highlight></codeline>
<codeline lineno="3"><highlight class="comment"></highlight></codeline>
<codeline lineno="4"><highlight class="comment">MIT<sp/>License</highlight></codeline>
<codeline lineno="5"><highlight class="comment"></highlight></codeline>
<codeline lineno="6"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>-<sp/>2020<sp/>Seleznev<sp/>Anton</highlight></codeline>
<codeline lineno="7"><highlight class="comment"></highlight></codeline>
<codeline lineno="8"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="9"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="10"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="11"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="12"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="13"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="16"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="17"><highlight class="comment"></highlight></codeline>
<codeline lineno="18"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="19"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="20"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="22"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="23"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="24"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>file<sp/>was<sp/>GENERATED<sp/>by<sp/>an<sp/>amalgamation<sp/>script.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>DO<sp/>NOT<sp/>EDIT<sp/>BY<sp/>HAND!!!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_AMALGAMED_SOURCE<sp/></highlight><highlight class="comment">/*<sp/>Macros<sp/>to<sp/>make<sp/>internal<sp/>libfort<sp/>functions<sp/>static<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;fort_utils.h&quot;</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FORT_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORT_IMPL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CRT_SECURE_NO_WARNINGS<sp/></highlight><highlight class="comment">/*<sp/>To<sp/>disable<sp/>warnings<sp/>for<sp/>unsafe<sp/>functions<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/fort.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Define<sp/>FT_INTERNAL<sp/>to<sp/>make<sp/>internal<sp/>libfort<sp/>functions<sp/>static</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>*<sp/>in<sp/>the<sp/>result<sp/>amalgamed<sp/>source<sp/>file.</highlight></codeline>
<codeline lineno="54"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_AMALGAMED_SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_INTERNAL<sp/>static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_INTERNAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_AMALGAMED_SORCE<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORT_DEFAULT_COL_SEPARATOR<sp/>&apos;|&apos;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORT_COL_SEPARATOR_LENGTH<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FORT_UNUSED<sp/><sp/>__attribute__((unused))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_MALLOC<sp/>fort_malloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_FREE<sp/>fort_free</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_CALLOC<sp/>fort_calloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_REALLOC<sp/>fort_realloc</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_STRDUP<sp/>fort_strdup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_WCSDUP<sp/>fort_wcsdup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>@todo:<sp/>replace<sp/>with<sp/>custom<sp/>impl<sp/>!!!*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_UTF8DUP<sp/>utf8dup</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>F_CREATE(type)<sp/>((type<sp/>*)F_CALLOC(sizeof(type),<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MAX(a,b)<sp/>((a)<sp/>&gt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>MIN(a,b)<sp/>((a)<sp/>&lt;<sp/>(b)<sp/>?<sp/>(a)<sp/>:<sp/>(b))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_NEWLINE<sp/>&quot;\n&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_SPACE<sp/>&quot;<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEFAULT_SIZES</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_STR_BUF_SIZE<sp/>1024</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DEFAULT_VECTOR_CAPACITY<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DATA<sp/>TYPES</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879" kindref="member">f_get_policy</ref><sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a" kindref="member">CREATE_ON_NULL</ref>,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc" kindref="member">DONT_CREATE_ON_NULL</ref></highlight></codeline>
<codeline lineno="99"><highlight class="normal">};</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85" kindref="member">f_bool</ref><sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a7d1c5eb5c19fe2c534aa6fb6605927e4" kindref="member">F_FALSE</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a42654a58e5b0bffec1ba32aef39af469" kindref="member">F_TRUE</ref><sp/>=<sp/>1</highlight></codeline>
<codeline lineno="104"><highlight class="normal">};</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>{</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc" kindref="member">COMMON_CELL</ref>,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" kindref="member">GROUP_MASTER_CELL</ref>,</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027" kindref="member">f_geometry_type</ref><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027a649c4250d469605327eeddcfb36bf296" kindref="member">VISIBLE_GEOMETRY</ref>,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027ae4419d33092d617c9f99d6ac234e7a33" kindref="member">INTERN_REPR_GEOMETRY</ref></highlight></codeline>
<codeline lineno="115"><highlight class="normal">};</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>,</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>,</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>,</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127" refid="structf__string__view" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__view_1aa44363a2ad0a535a64170738a2d6e58d" kindref="member">cstr</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__view_1a0a19a0e48972c54f8faf0b433d5849dc" kindref="member">wstr</ref>;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__view_1aa9aef96a02d5687b18447086ae54dcbd" kindref="member">u8str</ref>;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__view_1a0d49d74db4c035719c3867723cf7e779" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref><sp/><ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="139"><highlight class="normal">};</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/><ref refid="structf__string__view" kindref="compound">f_string_view_t</ref>;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STR_2_CAT_(arg1,<sp/>arg2)<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>arg1##arg2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_STR_2_CAT(arg1,<sp/>arg2)<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>FT_STR_2_CAT_(arg1,<sp/>arg2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNIQUE_NAME_(prefix)<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>FT_STR_2_CAT(prefix,__COUNTER__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNIQUE_NAME(prefix)<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UNIQUE_NAME_(prefix)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref>;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties</ref>;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row</ref>;</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector</ref>;</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell</ref>;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer</ref>;</highlight></codeline>
<codeline lineno="163" refid="structf__separator" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__separator" kindref="compound">f_separator</ref><sp/>{</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__separator_1a03e6cca0c879c0443efb431c30c14f76" kindref="member">enabled</ref>;</highlight></codeline>
<codeline lineno="165"><highlight class="normal">};</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties</ref><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref>;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector</ref><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref>;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell</ref><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref>;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer</ref><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row</ref><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref>;</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__separator" kindref="compound">f_separator</ref><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref>;</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174" refid="structf__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__context" kindref="compound">f_context</ref><sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>;</highlight></codeline>
<codeline lineno="178"><highlight class="normal">};</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__context" kindref="compound">f_context</ref><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref>;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181" refid="structf__conv__context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__conv__context" kindref="compound">f_conv_context</ref><sp/>{</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="structf__conv__context_1aa90b4ed90e90c0b406451c868720e395" kindref="member">wbuf</ref>;</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structf__conv__context_1aa9aef96a02d5687b18447086ae54dcbd" kindref="member">u8str</ref>;</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref>;</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__context" kindref="compound">f_context</ref><sp/>*<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref><sp/><ref refid="structf__conv__context_1ab7e55cddff5e671c753ca98520c3bab6" kindref="member">b_type</ref>;</highlight></codeline>
<codeline lineno="194"><highlight class="normal">};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__conv__context" kindref="compound">f_conv_context</ref><sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LIBFORT<sp/>helpers</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" kindref="member">fort_free</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_calloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_realloc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae131c0f0e6d8da7a4708c7175bf1df10" kindref="member">set_memory_funcs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*f_malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f_free)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr));</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c" kindref="member">fort_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5140ca8ce544c7fe7fd8580b46eb7919" kindref="member">number_of_columns_in_format_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__view" kindref="compound">f_string_view_t</ref><sp/>*fmt);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a99b4b352713722a3c4bd74f977dcddfb" kindref="member">number_of_columns_in_format_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*fmt);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_WCHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1afbb101e4e75dbefa32076dc1f8a07762" kindref="member">fort_wcsdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1adc410898e7cdde87f19083209df4bb02" kindref="member">ft_nprint</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strlen);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af86c27e4ebf239a915a36b6972d1d607" kindref="member">ft_nwprint</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strlen);</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3e59820002f722488daba674c799bb97" kindref="member">ft_nu8print</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="comment">/*#define<sp/>PRINT_DEBUG_INFO<sp/>fprintf(stderr,<sp/>&quot;error<sp/>in<sp/>%s(%s:%d)\n&quot;,<sp/>__FUNCTION__,<sp/>__FILE__,<sp/>__LINE__);*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PRINT_DEBUG_INFO</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_CHECK(statement)<sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>statement;<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tmp<sp/>&lt;<sp/>0)<sp/>{\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINT_DEBUG_INFO<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>clear;<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHCK_RSLT_ADD_TO_WRITTEN(statement)<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>statement;<sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tmp<sp/>&lt;<sp/>0)<sp/>{\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINT_DEBUG_INFO<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>clear;<sp/>\</highlight></codeline>
<codeline lineno="262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="263"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>written<sp/>+=<sp/>(size_t)tmp;<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN(statement)<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/>statement;<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(tmp<sp/>&lt;<sp/>0)<sp/>{\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PRINT_DEBUG_INFO<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>goto<sp/>clear;<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="273"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>invisible_written<sp/>+=<sp/>(size_t)tmp;<sp/>\</highlight></codeline>
<codeline lineno="274"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_NOT_NEGATIVE(x)<sp/>\</highlight></codeline>
<codeline lineno="278"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>do<sp/>{<sp/>if<sp/>((x)<sp/>&lt;<sp/>0)<sp/>goto<sp/>fort_fail;<sp/>}<sp/>while<sp/>(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FORT_IMPL_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="283"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;fort_utils.h&quot;</highlight></codeline>
<codeline lineno="284"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;vector.h&quot;</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>INVALID_VEC_INDEX<sp/>((size_t)<sp/>-1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*<ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item_size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a81f0b5b62d8a431c44be2bac0f6f8465" kindref="member">vector_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829" kindref="member">vector_insert</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="318"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*<ref refid="fort_8c_1acb4f5f3823ce6b50e51c8223c5fb9c2a" kindref="member">vector_split</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a91644aa66c95f718abb2f0ad731c604b" kindref="member">vector_at_c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1abb033777a1a8c0b490f14541bc0332fa" kindref="member">vector_at</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="327"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a844f2a888602cd950e5a2d7c332c3b07" kindref="member">vector_swap</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*cur_vec,<sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*mv_vec,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aeed5528bb1a8124b530766b5cdd607f4" kindref="member">vector_clear</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae1d70435626d59e4d41971e22fa90fec" kindref="member">vector_erase</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index);</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_TEST_BUILD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*copy_vector(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vector_index_of(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item);</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_AT(vector,<sp/>pos,<sp/>data_type)<sp/>\</highlight></codeline>
<codeline lineno="341"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(data_type<sp/>*)vector_at((vector),<sp/>(pos))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_AT_C(vector,<sp/>pos,<sp/>const_data_type)<sp/>\</highlight></codeline>
<codeline lineno="344"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*(const_data_type<sp/>*)vector_at_c((vector),<sp/>(pos))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>VECTOR_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;vector.h&quot;</highlight></codeline>
<codeline lineno="350"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;wcwidth.h&quot;</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>WCWIDTH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WCWIDTH_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a8c6234fb096b466971193e24d3f9c85b" kindref="member">mk_wcswidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*pwcs,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>WCWIDTH_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;wcwidth.h&quot;</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="378"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;utf8.h&quot;</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>latest<sp/>version<sp/>of<sp/>this<sp/>library<sp/>is<sp/>available<sp/>on<sp/>GitHub;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://github.com/sheredom/utf8.h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>free<sp/>and<sp/>unencumbered<sp/>software<sp/>released<sp/>into<sp/>the<sp/>public<sp/>domain.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Anyone<sp/>is<sp/>free<sp/>to<sp/>copy,<sp/>modify,<sp/>publish,<sp/>use,<sp/>compile,<sp/>sell,<sp/>or</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="comment">//<sp/>distribute<sp/>this<sp/>software,<sp/>either<sp/>in<sp/>source<sp/>code<sp/>form<sp/>or<sp/>as<sp/>a<sp/>compiled</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment">//<sp/>binary,<sp/>for<sp/>any<sp/>purpose,<sp/>commercial<sp/>or<sp/>non-commercial,<sp/>and<sp/>by<sp/>any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="comment">//<sp/>means.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment">//<sp/>In<sp/>jurisdictions<sp/>that<sp/>recognize<sp/>copyright<sp/>laws,<sp/>the<sp/>author<sp/>or<sp/>authors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>this<sp/>software<sp/>dedicate<sp/>any<sp/>and<sp/>all<sp/>copyright<sp/>interest<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>to<sp/>the<sp/>public<sp/>domain.<sp/>We<sp/>make<sp/>this<sp/>dedication<sp/>for<sp/>the<sp/>benefit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>public<sp/>at<sp/>large<sp/>and<sp/>to<sp/>the<sp/>detriment<sp/>of<sp/>our<sp/>heirs<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="comment">//<sp/>successors.<sp/>We<sp/>intend<sp/>this<sp/>dedication<sp/>to<sp/>be<sp/>an<sp/>overt<sp/>act<sp/>of</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="comment">//<sp/>relinquishment<sp/>in<sp/>perpetuity<sp/>of<sp/>all<sp/>present<sp/>and<sp/>future<sp/>rights<sp/>to<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="comment">//<sp/>software<sp/>under<sp/>copyright<sp/>law.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment">//<sp/>THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="comment">//<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="comment">//<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="comment">//<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="comment">//<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="comment">//<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>SOFTWARE.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="comment">//<sp/>For<sp/>more<sp/>information,<sp/>please<sp/>refer<sp/>to<sp/>&lt;http://unlicense.org/&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SHEREDOM_UTF8_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SHEREDOM_UTF8_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(push)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="comment">//<sp/>disable<sp/>&apos;bytes<sp/>padding<sp/>added<sp/>after<sp/>construct&apos;<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(disable<sp/>:<sp/>4820)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>warning(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>__int32<sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int32_t<sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wold-style-cast&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wcast-qual&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="439"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)<sp/>||<sp/>defined(__GNUC__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_nonnull<sp/>__attribute__((nonnull))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_pure<sp/>__attribute__((pure))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_restrict<sp/>__restrict__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_weak<sp/>__attribute__((weak))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_nonnull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_pure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_restrict<sp/>__restrict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_weak<sp/>__inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_nonnull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_pure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_restrict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_weak<sp/>inline</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_null<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>utf8_null<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>less<sp/>than<sp/>0,<sp/>0,<sp/>greater<sp/>than<sp/>0<sp/>if<sp/>src1<sp/>&lt;<sp/>src2,<sp/>src1<sp/>==<sp/>src2,<sp/>src1<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment">//<sp/>src2<sp/>respectively,<sp/>case<sp/>insensitive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="468"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a7349d4800cf8b7db916cdbe2fdacdb0b" kindref="member">utf8casecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Append<sp/>the<sp/>utf8<sp/>string<sp/>src<sp/>onto<sp/>the<sp/>utf8<sp/>string<sp/>dst.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="472"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a26b01cd15111c67880a523b603002188" kindref="member">utf8cat</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>first<sp/>match<sp/>of<sp/>the<sp/>utf8<sp/>codepoint<sp/>chr<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>src.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr);</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>less<sp/>than<sp/>0,<sp/>0,<sp/>greater<sp/>than<sp/>0<sp/>if<sp/>src1<sp/>&lt;<sp/>src2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight><highlight class="comment">//<sp/>src1<sp/>==<sp/>src2,<sp/>src1<sp/>&gt;<sp/>src2<sp/>respectively.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a260642d22e26c99dbbaf65e98eadc88a" kindref="member">utf8cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>utf8<sp/>string<sp/>src<sp/>onto<sp/>the<sp/>memory<sp/>allocated<sp/>in<sp/>dst.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a7659546b0f93f4e58ecea8ccc303851f" kindref="member">utf8cpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight></codeline>
<codeline lineno="488"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>utf8<sp/>codepoints<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>src<sp/>that<sp/>consists<sp/>entirely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>utf8<sp/>codepoints<sp/>not<sp/>from<sp/>the<sp/>utf8<sp/>string<sp/>reject.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aaa64987dd6510395216898ed8117f290" kindref="member">utf8cspn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*reject);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Duplicate<sp/>the<sp/>utf8<sp/>string<sp/>src<sp/>by<sp/>getting<sp/>its<sp/>size,<sp/>malloc&apos;ing<sp/>a<sp/>new<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight><highlight class="comment">//<sp/>copying<sp/>over<sp/>the<sp/>data,<sp/>and<sp/>returning<sp/>that.<sp/>Or<sp/>0<sp/>if<sp/>malloc<sp/>failed.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a157235d1e84617035dd6a2b6891d1190" kindref="member">utf8dup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src);</highlight></codeline>
<codeline lineno="496"><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>utf8<sp/>codepoints<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>str,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"></highlight><highlight class="comment">//<sp/>excluding<sp/>the<sp/>null<sp/>terminating<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acf9a71744695b4e13bd8fe284f6493f5" kindref="member">utf8len</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visible<sp/>width<sp/>of<sp/>utf8string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac93b14073da51fe7722162b16b117d34" kindref="member">utf8width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visible<sp/>width<sp/>of<sp/>codepoint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a72273b72cf22e087384fade5accece3e" kindref="member">utf8cwidth</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>less<sp/>than<sp/>0,<sp/>0,<sp/>greater<sp/>than<sp/>0<sp/>if<sp/>src1<sp/>&lt;<sp/>src2,<sp/>src1<sp/>==<sp/>src2,<sp/>src1<sp/>&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment">//<sp/>src2<sp/>respectively,<sp/>case<sp/>insensitive.<sp/>Checking<sp/>at<sp/>most<sp/>n<sp/>bytes<sp/>of<sp/>each<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a76ca27590e83a0d94f85e5a58d3dbfac" kindref="member">utf8ncasecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Append<sp/>the<sp/>utf8<sp/>string<sp/>src<sp/>onto<sp/>the<sp/>utf8<sp/>string<sp/>dst,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="comment">//<sp/>writing<sp/>at<sp/>most<sp/>n+1<sp/>bytes.<sp/>Can<sp/>produce<sp/>an<sp/>invalid<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string<sp/>if<sp/>n<sp/>falls<sp/>partway<sp/>through<sp/>a<sp/>utf8<sp/>codepoint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a11ed5b03517ab8ce1f811995695068c1" kindref="member">utf8ncat</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>less<sp/>than<sp/>0,<sp/>0,<sp/>greater<sp/>than<sp/>0<sp/>if<sp/>src1<sp/>&lt;<sp/>src2,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="comment">//<sp/>src1<sp/>==<sp/>src2,<sp/>src1<sp/>&gt;<sp/>src2<sp/>respectively.<sp/>Checking<sp/>at<sp/>most<sp/>n</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="521"><highlight class="normal"></highlight><highlight class="comment">//<sp/>bytes<sp/>of<sp/>each<sp/>utf8<sp/>string.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aee64c8755c33e9b410d3d911095b8573" kindref="member">utf8ncmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copy<sp/>the<sp/>utf8<sp/>string<sp/>src<sp/>onto<sp/>the<sp/>memory<sp/>allocated<sp/>in<sp/>dst.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Copies<sp/>at<sp/>most<sp/>n<sp/>bytes.<sp/>If<sp/>there<sp/>is<sp/>no<sp/>terminating<sp/>null<sp/>byte<sp/>in</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"></highlight><highlight class="comment">//<sp/>the<sp/>first<sp/>n<sp/>bytes<sp/>of<sp/>src,<sp/>the<sp/>string<sp/>placed<sp/>into<sp/>dst<sp/>will<sp/>not<sp/>be</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="comment">//<sp/>null-terminated.<sp/>If<sp/>the<sp/>size<sp/>(in<sp/>bytes)<sp/>of<sp/>src<sp/>is<sp/>less<sp/>than<sp/>n,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"></highlight><highlight class="comment">//<sp/>extra<sp/>null<sp/>terminating<sp/>bytes<sp/>are<sp/>appended<sp/>to<sp/>dst<sp/>such<sp/>that<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight><highlight class="comment">//<sp/>total<sp/>of<sp/>n<sp/>bytes<sp/>are<sp/>written.<sp/>Can<sp/>produce<sp/>an<sp/>invalid<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight><highlight class="comment">//<sp/>string<sp/>if<sp/>n<sp/>falls<sp/>partway<sp/>through<sp/>a<sp/>utf8<sp/>codepoint.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1aabf0105a5dbba289e35565281e3e4e4a" kindref="member">utf8ncpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Similar<sp/>to<sp/>utf8dup,<sp/>except<sp/>that<sp/>at<sp/>most<sp/>n<sp/>bytes<sp/>of<sp/>src<sp/>are<sp/>copied.<sp/>If<sp/>src<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="comment">//<sp/>longer<sp/>than<sp/>n,<sp/>only<sp/>n<sp/>bytes<sp/>are<sp/>copied<sp/>and<sp/>a<sp/>null<sp/>byte<sp/>is<sp/>added.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>a<sp/>new<sp/>string<sp/>if<sp/>successful,<sp/>0<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a141320e9eb2d70f541c09ef36e1230bf" kindref="member">utf8ndup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Locates<sp/>the<sp/>first<sp/>occurence<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>str<sp/>of<sp/>any<sp/>byte<sp/>in<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight><highlight class="comment">//<sp/>utf8<sp/>string<sp/>accept,<sp/>or<sp/>0<sp/>if<sp/>no<sp/>match<sp/>was<sp/>found.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1ac0044439ba5de366174a070337d46b00" kindref="member">utf8pbrk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*accept);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>last<sp/>match<sp/>of<sp/>the<sp/>utf8<sp/>codepoint<sp/>chr<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>src.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a8d291c79b99c32f07241854c6f8ce61d" kindref="member">utf8rchr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chr);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>bytes<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>str,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="comment">//<sp/>including<sp/>the<sp/>null<sp/>terminating<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9" kindref="member">utf8size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Number<sp/>of<sp/>utf8<sp/>codepoints<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>src<sp/>that<sp/>consists<sp/>entirely</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>utf8<sp/>codepoints<sp/>from<sp/>the<sp/>utf8<sp/>string<sp/>accept.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a2751e31b4afa3d09d21b2d3dada3b8fa" kindref="member">utf8spn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*accept);</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>position<sp/>of<sp/>the<sp/>utf8<sp/>string<sp/>needle<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>haystack.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="559"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a90a2d154aa14ee7e5ee755d094328cae" kindref="member">utf8str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*haystack,</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*needle);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight><highlight class="comment">//<sp/>The<sp/>position<sp/>of<sp/>the<sp/>utf8<sp/>string<sp/>needle<sp/>in<sp/>the<sp/>utf8<sp/>string<sp/>haystack,<sp/>case</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="comment">//<sp/>insensitive.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a00197aa7445ef50af8eb7de80904cc55" kindref="member">utf8casestr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*haystack,</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*needle);</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Return<sp/>0<sp/>on<sp/>success,<sp/>or<sp/>the<sp/>position<sp/>of<sp/>the<sp/>invalid</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight><highlight class="comment">//<sp/>utf8<sp/>codepoint<sp/>on<sp/>failure.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a43095c668493542f53935a041bf4f30b" kindref="member">utf8_pure</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1aedad8b40a6836b75f6268a6a66b53f76" kindref="member">utf8valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Sets<sp/>out_codepoint<sp/>to<sp/>the<sp/>next<sp/>utf8<sp/>codepoint<sp/>in<sp/>str,<sp/>and<sp/>returns<sp/>the<sp/>address</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"></highlight><highlight class="comment">//<sp/>of<sp/>the<sp/>utf8<sp/>codepoint<sp/>after<sp/>the<sp/>current<sp/>one<sp/>in<sp/>str.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str,</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>out_codepoint);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>the<sp/>size<sp/>of<sp/>the<sp/>given<sp/>codepoint<sp/>in<sp/>bytes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88" kindref="member">utf8codepointsize</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Write<sp/>a<sp/>codepoint<sp/>to<sp/>the<sp/>given<sp/>string,<sp/>and<sp/>return<sp/>the<sp/>address<sp/>to<sp/>the<sp/>next</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"></highlight><highlight class="comment">//<sp/>place<sp/>after<sp/>the<sp/>written<sp/>codepoint.<sp/>Pass<sp/>how<sp/>many<sp/>bytes<sp/>left<sp/>in<sp/>the<sp/>buffer<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="comment">//<sp/>n.<sp/>If<sp/>there<sp/>is<sp/>not<sp/>enough<sp/>space<sp/>for<sp/>the<sp/>codepoint,<sp/>this<sp/>function<sp/>returns</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="comment">//<sp/>null.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a7faf7f12202a186786dea223abbd2486" kindref="member">utf8catcodepoint</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str,</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="587"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>1<sp/>if<sp/>the<sp/>given<sp/>character<sp/>is<sp/>lowercase,<sp/>or<sp/>0<sp/>if<sp/>it<sp/>is<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa3502e1c380c7a4b0f7a02ffc2c3c358" kindref="member">utf8islower</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr);</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Returns<sp/>1<sp/>if<sp/>the<sp/>given<sp/>character<sp/>is<sp/>uppercase,<sp/>or<sp/>0<sp/>if<sp/>it<sp/>is<sp/>not.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0b1efc85ea0182178c2e61603c21ef6c" kindref="member">utf8isupper</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>given<sp/>string<sp/>into<sp/>all<sp/>lowercase<sp/>codepoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af7329f330e93a5944837500cd4eb70ac" kindref="member">utf8lwr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Transform<sp/>the<sp/>given<sp/>string<sp/>into<sp/>all<sp/>uppercase<sp/>codepoints.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><ref refid="fort_8c_1a44ee00ffddf6c842e84ca729c401a90e" kindref="member">utf8_nonnull</ref><sp/><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae033fd7896504dcd1b9dfc6d6cf97584" kindref="member">utf8upr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>codepoint<sp/>lower<sp/>case<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>cp);</highlight></codeline>
<codeline lineno="601"><highlight class="normal"></highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Make<sp/>a<sp/>codepoint<sp/>upper<sp/>case<sp/>if<sp/>possible.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"><ref refid="fort_8c_1a0e907c8f96aee4f5f999a015fbb97d05" kindref="member">utf8_weak</ref><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/><ref refid="fort_8c_1afc7b7f0e41515bc7d694f22ec6fccd92" kindref="member">utf8uprcodepoint</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>cp);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>utf8_weak</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>utf8_pure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>utf8_nonnull</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a7349d4800cf8b7db916cdbe2fdacdb0b" kindref="member">utf8casecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2)</highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>src1_cp,<sp/>src2_cp,<sp/>src1_orig_cp,<sp/>src2_orig_cp;</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src1<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(src1,<sp/>&amp;src1_cp);</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src2<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(src2,<sp/>&amp;src2_cp);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"></highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>a<sp/>copy<sp/>of<sp/>src1<sp/>&amp;<sp/>src2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src1_orig_cp<sp/>=<sp/>src1_cp;</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src2_orig_cp<sp/>=<sp/>src2_cp;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lower<sp/>the<sp/>srcs<sp/>if<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src1_cp<sp/>=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(src1_cp);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src2_cp<sp/>=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(src2_cp);</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>lowered<sp/>codepoints<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0<sp/>==<sp/>src1_orig_cp)<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>src2_orig_cp))<sp/>{</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src1_cp<sp/>==<sp/>src2_cp)<sp/>{</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"></highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>they<sp/>don&apos;t<sp/>match,<sp/>then<sp/>we<sp/>return<sp/>which<sp/>of<sp/>the<sp/>original&apos;s<sp/>are<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src1_orig_cp<sp/>&lt;<sp/>src2_orig_cp)<sp/>{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src1_orig_cp<sp/>&gt;<sp/>src2_orig_cp)<sp/>{</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="639"><highlight class="normal">}</highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight></codeline>
<codeline lineno="641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a26b01cd15111c67880a523b603002188" kindref="member">utf8cat</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src)</highlight></codeline>
<codeline lineno="642"><highlight class="normal">{</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>null<sp/>terminating<sp/>byte<sp/>in<sp/>dst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d++;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="650"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwriting<sp/>the<sp/>null<sp/>terminating<sp/>byte<sp/>in<sp/>dst,<sp/>append<sp/>src<sp/>byte-by-byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*s++;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>out<sp/>a<sp/>new<sp/>null<sp/>terminating<sp/>byte<sp/>into<sp/>dst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/>*d<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr)</highlight></codeline>
<codeline lineno="663"><highlight class="normal">{</highlight></codeline>
<codeline lineno="664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c[5]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>chr)<sp/>{</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>asked<sp/>to<sp/>return<sp/>position<sp/>of<sp/>null<sp/>terminating<sp/>byte,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>run<sp/>s<sp/>to<sp/>the<sp/>end,<sp/>and<sp/>return!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xffffff80<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-byte/7-bit<sp/>ascii</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b0xxxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>(char)chr;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xfffff800<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2-byte/11-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b110xxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>0xc0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xffff0000<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3-byte/16-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b1110xxxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>0xe0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>12);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[2]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(0<sp/>==<sp/>((int)0xffe00000<sp/>&amp;<sp/>chr))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4-byte/21-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b11110xxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>0xf0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>18);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[2]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[3]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="697"><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>made<sp/>c<sp/>into<sp/>a<sp/>2<sp/>utf8<sp/>codepoint<sp/>string,<sp/>one<sp/>for<sp/>the<sp/>chr<sp/>we<sp/>are</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>seeking,<sp/>another<sp/>for<sp/>the<sp/>null<sp/>terminating<sp/>byte.<sp/>Now<sp/>use<sp/>utf8str<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>search</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a90a2d154aa14ee7e5ee755d094328cae" kindref="member">utf8str</ref>(src,<sp/>c);</highlight></codeline>
<codeline lineno="702"><highlight class="normal">}</highlight></codeline>
<codeline lineno="703"><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a260642d22e26c99dbbaf65e98eadc88a" kindref="member">utf8cmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2)</highlight></codeline>
<codeline lineno="705"><highlight class="normal">{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src1;</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src2;</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s1)<sp/>||<sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s2))<sp/>{</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s1<sp/>&lt;<sp/>*s2)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s1<sp/>&gt;<sp/>*s2)<sp/>{</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1++;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2++;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="719"><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>both<sp/>utf8<sp/>strings<sp/>matched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1568eafa1ce27f57d1a239ee8d3804f9" kindref="member">utf8coll</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a7659546b0f93f4e58ecea8ccc303851f" kindref="member">utf8cpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src)</highlight></codeline>
<codeline lineno="727"><highlight class="normal">{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwriting<sp/>anything<sp/>previously<sp/>in<sp/>dst,<sp/>write<sp/>byte-by-byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>src</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*s++;</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>null<sp/>terminating<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>*d<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aaa64987dd6510395216898ed8117f290" kindref="member">utf8cspn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*reject)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>chars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*r<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)reject;</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*r)<sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>that<sp/>if<sp/>*r<sp/>is<sp/>the<sp/>start<sp/>of<sp/>a<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(it<sp/>is<sp/>not<sp/>0b10xxxxxx)<sp/>and<sp/>we<sp/>have<sp/>successfully<sp/>matched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>previous<sp/>character<sp/>(0<sp/>&lt;<sp/>offset)<sp/>-<sp/>we<sp/>found<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>*r))<sp/>&amp;&amp;<sp/>(0<sp/>&lt;<sp/>offset))<sp/>{</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chars;</highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*r<sp/>==<sp/>s[offset])<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>of<sp/>a<sp/>utf8<sp/>codepoint<sp/>matched,<sp/>so<sp/>move<sp/>our<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>onwards<sp/>to<sp/>the<sp/>next<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset++;</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r++;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>r<sp/>could<sp/>be<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>an<sp/>unmatching<sp/>utf8<sp/>code<sp/>point,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>march<sp/>it<sp/>on<sp/>to<sp/>the<sp/>next<sp/>character<sp/>beginning,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r++;</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>*r));</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>offset<sp/>too<sp/>as<sp/>we<sp/>found<sp/>a<sp/>mismatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>utf8<sp/>codepoint<sp/>in<sp/>src<sp/>did<sp/>not<sp/>match<sp/>reject,<sp/>but<sp/>src</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>have<sp/>been<sp/>partway<sp/>through<sp/>a<sp/>utf8<sp/>codepoint,<sp/>so<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>march<sp/>it<sp/>onto<sp/>the<sp/>next<sp/>utf8<sp/>codepoint<sp/>starting<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>*s)));</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chars++;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="786"><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chars;</highlight></codeline>
<codeline lineno="788"><highlight class="normal">}</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight></codeline>
<codeline lineno="790"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9" kindref="member">utf8size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="791"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a157235d1e84617035dd6a2b6891d1190" kindref="member">utf8dup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src)</highlight></codeline>
<codeline lineno="793"><highlight class="normal">{</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n<sp/>=<sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="796"><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>figure<sp/>out<sp/>how<sp/>many<sp/>bytes<sp/>(including<sp/>the<sp/>terminator)<sp/>we<sp/>need<sp/>to<sp/>copy<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/><ref refid="fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9" kindref="member">utf8size</ref>(src);</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(bytes);</highlight></codeline>
<codeline lineno="801"><highlight class="normal"></highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref><sp/>==<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>of<sp/>memory<sp/>so<sp/>we<sp/>bail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>src<sp/>byte-by-byte<sp/>into<sp/>our<sp/>new<sp/>utf8<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>s[bytes])<sp/>{</highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n[bytes]<sp/>=<sp/>s[bytes];</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes++;</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>null<sp/>terminating<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n[bytes]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1ad589d9ad4ba2b45d3ae8ceaeccf6a9e8" kindref="member">utf8fry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="821"><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acf9a71744695b4e13bd8fe284f6493f5" kindref="member">utf8len</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="823"><highlight class="normal">{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xf0<sp/>==<sp/>(0xf8<sp/>&amp;<sp/>*s))<sp/>{</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4-byte<sp/>utf8<sp/>code<sp/>point<sp/>(began<sp/>with<sp/>0b11110xxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xe0<sp/>==<sp/>(0xf0<sp/>&amp;<sp/>*s))<sp/>{</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3-byte<sp/>utf8<sp/>code<sp/>point<sp/>(began<sp/>with<sp/>0b1110xxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xc0<sp/>==<sp/>(0xe0<sp/>&amp;<sp/>*s))<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2-byte<sp/>utf8<sp/>code<sp/>point<sp/>(began<sp/>with<sp/>0b110xxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(0x00<sp/>==<sp/>(0x80<sp/>&amp;<sp/>*s))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-byte<sp/>ascii<sp/>(began<sp/>with<sp/>0b0xxxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>matter<sp/>the<sp/>bytes<sp/>we<sp/>marched<sp/>s<sp/>forward<sp/>by,<sp/>it<sp/>was</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>only<sp/>1<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length++;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="848"><highlight class="normal">}</highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment">//<sp/>See</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight><highlight class="comment">//<sp/>https://unicode.org/Public/UNIDATA/EastAsianWidth.txt</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="comment">//<sp/>http://www.unicode.org/reports/tr11/tr11-33.html</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="853"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a72273b72cf22e087384fade5accece3e" kindref="member">utf8cwidth</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c)</highlight></codeline>
<codeline lineno="854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>TODO:<sp/>add<sp/>non<sp/>printable<sp/>characters<sp/>check</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c<sp/>&lt;<sp/>0x1100)</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fullwidth</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0x3000<sp/>==<sp/>c)<sp/>||</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFF01<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xFF60)<sp/>||</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFFE0<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xFFE6))<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Wide</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0x1100<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x115F)<sp/>||</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x11A3<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x11A7)<sp/>||</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x11FA<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x11FF)<sp/>||</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2329<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x232A)<sp/>||</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2E80<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x2E99)<sp/>||</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2E9B<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x2EF3)<sp/>||</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2F00<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x2FD5)<sp/>||</highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2FF0<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x2FFB)<sp/>||</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3001<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x303E)<sp/>||</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3041<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x3096)<sp/>||</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3099<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x30FF)<sp/>||</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3105<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x312D)<sp/>||</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3131<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x318E)<sp/>||</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3190<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x31BA)<sp/>||</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x31C0<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x31E3)<sp/>||</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x31F0<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x321E)<sp/>||</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3220<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x3247)<sp/>||</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3250<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x32FE)<sp/>||</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x3300<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x4DBF)<sp/>||</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x4E00<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xA48C)<sp/>||</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xA490<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xA4C6)<sp/>||</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xA960<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xA97C)<sp/>||</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xAC00<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xD7A3)<sp/>||</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xD7B0<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xD7C6)<sp/>||</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xD7CB<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xD7FB)<sp/>||</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xF900<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xFAFF)<sp/>||</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFE10<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xFE19)<sp/>||</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFE30<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xFE52)<sp/>||</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFE54<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xFE66)<sp/>||</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0xFE68<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0xFE6B)<sp/>||</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x1B000<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x1B001)<sp/>||</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x1F200<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x1F202)<sp/>||</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x1F210<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x1F23A)<sp/>||</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x1F240<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x1F248)<sp/>||</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x1F250<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x1F251)<sp/>||</highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x20000<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x2F73F)<sp/>||</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x2B740<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x2FFFD)<sp/>||</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x30000<sp/>&lt;=<sp/>c<sp/>&amp;&amp;<sp/>c<sp/>&lt;=<sp/>0x3FFFD))<sp/>{</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="910"><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac93b14073da51fe7722162b16b117d34" kindref="member">utf8width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="915"><highlight class="normal">{</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(str,<sp/>&amp;c);</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(c<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>length<sp/>+=<sp/><ref refid="fort_8c_1a72273b72cf22e087384fade5accece3e" kindref="member">utf8cwidth</ref>(c);</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(str,<sp/>&amp;c);</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="925"><highlight class="normal">}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"></highlight></codeline>
<codeline lineno="927"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a76ca27590e83a0d94f85e5a58d3dbfac" kindref="member">utf8ncasecmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="929"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>src1_cp,<sp/>src2_cp,<sp/>src1_orig_cp,<sp/>src2_orig_cp;</highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s1<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src1;</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>s2<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src2;</highlight></codeline>
<codeline lineno="934"><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>first<sp/>check<sp/>that<sp/>we<sp/>have<sp/>enough<sp/>bytes<sp/>left<sp/>in<sp/>n<sp/>to<sp/>contain<sp/>an<sp/>entire</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="940"><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((1<sp/>==<sp/>n)<sp/>&amp;&amp;<sp/>((0xc0<sp/>==<sp/>(0xe0<sp/>&amp;<sp/>*s1))<sp/>||<sp/>(0xc0<sp/>==<sp/>(0xe0<sp/>&amp;<sp/>*s2))))<sp/>{</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c1<sp/>=<sp/>(0xe0<sp/>&amp;<sp/>*s1);</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c2<sp/>=<sp/>(0xe0<sp/>&amp;<sp/>*s2);</highlight></codeline>
<codeline lineno="944"><highlight class="normal"></highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>&lt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>&gt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((2<sp/>&gt;=<sp/>n)<sp/>&amp;&amp;<sp/>((0xe0<sp/>==<sp/>(0xf0<sp/>&amp;<sp/>*s1))<sp/>||<sp/>(0xe0<sp/>==<sp/>(0xf0<sp/>&amp;<sp/>*s2))))<sp/>{</highlight></codeline>
<codeline lineno="955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c1<sp/>=<sp/>(0xf0<sp/>&amp;<sp/>*s1);</highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c2<sp/>=<sp/>(0xf0<sp/>&amp;<sp/>*s2);</highlight></codeline>
<codeline lineno="957"><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>&lt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>&gt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="966"><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((3<sp/>&gt;=<sp/>n)<sp/>&amp;&amp;<sp/>((0xf0<sp/>==<sp/>(0xf8<sp/>&amp;<sp/>*s1))<sp/>||<sp/>(0xf0<sp/>==<sp/>(0xf8<sp/>&amp;<sp/>*s2))))<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c1<sp/>=<sp/>(0xf8<sp/>&amp;<sp/>*s1);</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>c2<sp/>=<sp/>(0xf8<sp/>&amp;<sp/>*s2);</highlight></codeline>
<codeline lineno="970"><highlight class="normal"></highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>&lt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(c1<sp/>&gt;<sp/>c2)<sp/>{</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src1<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(src1,<sp/>&amp;src1_cp);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src2<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(src2,<sp/>&amp;src2_cp);</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>-=<sp/><ref refid="fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88" kindref="member">utf8codepointsize</ref>(src1_cp);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Take<sp/>a<sp/>copy<sp/>of<sp/>src1<sp/>&amp;<sp/>src2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src1_orig_cp<sp/>=<sp/>src1_cp;</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src2_orig_cp<sp/>=<sp/>src2_cp;</highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Lower<sp/>srcs<sp/>if<sp/>required</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src1_cp<sp/>=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(src1_cp);</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src2_cp<sp/>=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(src2_cp);</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>if<sp/>the<sp/>lowered<sp/>codepoints<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0<sp/>==<sp/>src1_orig_cp)<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>src2_orig_cp))<sp/>{</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src1_cp<sp/>==<sp/>src2_cp)<sp/>{</highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="998"><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>they<sp/>don&apos;t<sp/>match,<sp/>then<sp/>we<sp/>return<sp/>which<sp/>of<sp/>the<sp/>original&apos;s<sp/>are<sp/>less</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src1_orig_cp<sp/>&lt;<sp/>src2_orig_cp)<sp/>{</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(src1_orig_cp<sp/>&gt;<sp/>src2_orig_cp)<sp/>{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>n);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>both<sp/>utf8<sp/>strings<sp/>matched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a11ed5b03517ab8ce1f811995695068c1" kindref="member">utf8ncat</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src,</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>find<sp/>the<sp/>null<sp/>terminating<sp/>byte<sp/>in<sp/>dst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*d)<sp/>{</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d++;</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwriting<sp/>the<sp/>null<sp/>terminating<sp/>byte<sp/>in<sp/>dst,<sp/>append<sp/>src<sp/>byte-by-byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stopping<sp/>if<sp/>we<sp/>run<sp/>out<sp/>of<sp/>space</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*d++<sp/>=<sp/>*s++;</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>&amp;&amp;<sp/>(0<sp/>!=<sp/>--n));</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>write<sp/>out<sp/>a<sp/>new<sp/>null<sp/>terminating<sp/>byte<sp/>into<sp/>dst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/>*d<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="1032"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aee64c8755c33e9b410d3d911095b8573" kindref="member">utf8ncmp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src1,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src2,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1035"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s1<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src1;</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s2<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src2;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((0<sp/>!=<sp/>n--)<sp/>&amp;&amp;<sp/>((</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s1)<sp/>||<sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s2)))<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s1<sp/>&lt;<sp/>*s2)<sp/>{</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s1<sp/>&gt;<sp/>*s2)<sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s1++;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s2++;</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>both<sp/>utf8<sp/>strings<sp/>matched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1aabf0105a5dbba289e35565281e3e4e4a" kindref="member">utf8ncpy</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>src,</highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1056"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*d<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)dst;</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>overwriting<sp/>anything<sp/>previously<sp/>in<sp/>dst,<sp/>write<sp/>byte-by-byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>from<sp/>src</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(index<sp/>=<sp/>0;<sp/>index<sp/>&lt;<sp/>n;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[index]<sp/>=<sp/>s[index];</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>==<sp/>s[index])<sp/>{</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"></highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>null<sp/>terminating<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>index<sp/>&lt;<sp/>n;<sp/>index++)<sp/>{</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d[index]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dst;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a141320e9eb2d70f541c09ef36e1230bf" kindref="member">utf8ndup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1079"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c<sp/>=<sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"></highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Find<sp/>the<sp/>end<sp/>of<sp/>the<sp/>string<sp/>or<sp/>stop<sp/>when<sp/>n<sp/>is<sp/>reached</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>s[bytes]<sp/>&amp;&amp;<sp/>bytes<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes++;</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>bytes<sp/>is<sp/>actually<sp/>less<sp/>than<sp/>n,<sp/>we<sp/>need<sp/>to<sp/>set<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>to<sp/>be<sp/>used<sp/>later<sp/>in<sp/>the<sp/>copy<sp/>byte<sp/>by<sp/>byte.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/>n<sp/>=<sp/>bytes;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/>c<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)malloc(bytes<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref><sp/>==<sp/>c)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>out<sp/>of<sp/>memory<sp/>so<sp/>we<sp/>bail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/>bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>copy<sp/>src<sp/>byte-by-byte<sp/>into<sp/>our<sp/>new<sp/>utf8<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>s[bytes]<sp/>&amp;&amp;<sp/>bytes<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[bytes]<sp/>=<sp/>s[bytes];</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes++;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"></highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>append<sp/>null<sp/>terminating<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/>c[bytes]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a8d291c79b99c32f07241854c6f8ce61d" kindref="member">utf8rchr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>chr)</highlight></codeline>
<codeline lineno="1113"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*match<sp/>=<sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>c[5]<sp/>=<sp/>{</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">,<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>chr)<sp/>{</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>being<sp/>asked<sp/>to<sp/>return<sp/>position<sp/>of<sp/>null<sp/>terminating<sp/>byte,<sp/>so</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>just<sp/>run<sp/>s<sp/>to<sp/>the<sp/>end,<sp/>and<sp/>return!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)0xffffff80<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-byte/7-bit<sp/>ascii</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b0xxxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>(char)chr;</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)0xfffff800<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2-byte/11-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b110xxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>0xc0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)0xffff0000<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3-byte/16-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b1110xxxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>0xe0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>12);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[2]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(0<sp/>==<sp/>((int)0xffe00000<sp/>&amp;<sp/>chr))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4-byte/21-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b11110xxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[0]<sp/>=<sp/>0xf0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>18);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[2]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c[3]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we&apos;ve<sp/>created<sp/>a<sp/>2<sp/>utf8<sp/>codepoint<sp/>string<sp/>in<sp/>c<sp/>that<sp/>is</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>utf8<sp/>character<sp/>asked<sp/>for<sp/>by<sp/>chr,<sp/>and<sp/>a<sp/>null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>terminating<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"></highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(s[offset]<sp/>==<sp/>c[offset])<sp/>{</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset++;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>==<sp/>c[offset])<sp/>{</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>found<sp/>a<sp/>matching<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>match<sp/>=<sp/>s;</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>need<sp/>to<sp/>march<sp/>s<sp/>along<sp/>to<sp/>next<sp/>utf8<sp/>codepoint<sp/>start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(the<sp/>next<sp/>byte<sp/>that<sp/>doesn&apos;t<sp/>match<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>*s));</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>return<sp/>the<sp/>last<sp/>match<sp/>we<sp/>found<sp/>(or<sp/>0<sp/>if<sp/>no<sp/>match<sp/>was<sp/>found)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)match;</highlight></codeline>
<codeline lineno="1179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1ac0044439ba5de366174a070337d46b00" kindref="member">utf8pbrk</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*accept)</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)accept;</highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>that<sp/>if<sp/>*a<sp/>is<sp/>the<sp/>start<sp/>of<sp/>a<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(it<sp/>is<sp/>not<sp/>0b10xxxxxx)<sp/>and<sp/>we<sp/>have<sp/>successfully<sp/>matched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>previous<sp/>character<sp/>(0<sp/>&lt;<sp/>offset)<sp/>-<sp/>we<sp/>found<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>*a))<sp/>&amp;&amp;<sp/>(0<sp/>&lt;<sp/>offset))<sp/>{</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*a<sp/>==<sp/>s[offset])<sp/>{</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>part<sp/>of<sp/>a<sp/>utf8<sp/>codepoint<sp/>matched,<sp/>so<sp/>move<sp/>our<sp/>checking</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>onwards<sp/>to<sp/>the<sp/>next<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset++;</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a++;</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>r<sp/>could<sp/>be<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>an<sp/>unmatching<sp/>utf8<sp/>code<sp/>point,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>march<sp/>it<sp/>on<sp/>to<sp/>the<sp/>next<sp/>character<sp/>beginning,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a++;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>*a));</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"></highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>offset<sp/>too<sp/>as<sp/>we<sp/>found<sp/>a<sp/>mismatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>found<sp/>a<sp/>match<sp/>on<sp/>the<sp/>last<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>&lt;<sp/>offset)<sp/>{</highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>the<sp/>current<sp/>utf8<sp/>codepoint<sp/>in<sp/>src<sp/>did<sp/>not<sp/>match<sp/>accept,<sp/>but<sp/>src</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>could<sp/>have<sp/>been<sp/>partway<sp/>through<sp/>a<sp/>utf8<sp/>codepoint,<sp/>so<sp/>we<sp/>need<sp/>to</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>march<sp/>it<sp/>onto<sp/>the<sp/>next<sp/>utf8<sp/>codepoint<sp/>starting<sp/>byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s++;</highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>*s)));</highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight></codeline>
<codeline lineno="1228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9" kindref="member">utf8size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>s[size])<sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size++;</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>are<sp/>including<sp/>the<sp/>null<sp/>terminating<sp/>byte<sp/>in<sp/>the<sp/>size<sp/>calculation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/>size++;</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size;</highlight></codeline>
<codeline lineno="1242"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a2751e31b4afa3d09d21b2d3dada3b8fa" kindref="member">utf8spn</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*accept)</highlight></codeline>
<codeline lineno="1245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)src;</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>chars<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*a<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)accept;</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"></highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>checking<sp/>that<sp/>if<sp/>*r<sp/>is<sp/>the<sp/>start<sp/>of<sp/>a<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(it<sp/>is<sp/>not<sp/>0b10xxxxxx)<sp/>and<sp/>we<sp/>have<sp/>successfully<sp/>matched</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>previous<sp/>character<sp/>(0<sp/>&lt;<sp/>offset)<sp/>-<sp/>we<sp/>found<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>*a))<sp/>&amp;&amp;<sp/>(0<sp/>&lt;<sp/>offset))<sp/>{</highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>found<sp/>a<sp/>match,<sp/>so<sp/>increment<sp/>the<sp/>number<sp/>of<sp/>utf8<sp/>codepoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>that<sp/>have<sp/>matched<sp/>and<sp/>stop<sp/>checking<sp/>whether<sp/>any<sp/>other<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>codepoints<sp/>in<sp/>a<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>chars++;</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>offset;</highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*a<sp/>==<sp/>s[offset])<sp/>{</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset++;</highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a++;</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>could<sp/>be<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>an<sp/>unmatching<sp/>utf8<sp/>codepoint,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>march<sp/>it<sp/>on<sp/>to<sp/>the<sp/>next<sp/>character<sp/>beginning,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a++;</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>*a));</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>offset<sp/>too<sp/>as<sp/>we<sp/>found<sp/>a<sp/>mismatch</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>a<sp/>got<sp/>to<sp/>its<sp/>terminating<sp/>null<sp/>byte,<sp/>then<sp/>we<sp/>didn&apos;t<sp/>find<sp/>a<sp/>match.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Return<sp/>the<sp/>current<sp/>number<sp/>of<sp/>matched<sp/>utf8<sp/>codepoints</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>==<sp/>*a)<sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chars;</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chars;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a90a2d154aa14ee7e5ee755d094328cae" kindref="member">utf8str</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*haystack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*needle)</highlight></codeline>
<codeline lineno="1292"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*h<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)haystack;</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>throwaway_codepoint;</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>needle<sp/>has<sp/>no<sp/>utf8<sp/>codepoints<sp/>before<sp/>the<sp/>null<sp/>terminating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>byte<sp/>then<sp/>return<sp/>haystack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>==<sp/>*((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)needle))<sp/>{</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)haystack;</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*h)<sp/>{</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*maybeMatch<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*n<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)needle;</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*h<sp/>==<sp/>*n<sp/>&amp;&amp;<sp/>(*h<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>*n<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">))<sp/>{</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n++;</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h++;</highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1310"><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>==<sp/>*n)<sp/>{</highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>found<sp/>the<sp/>whole<sp/>utf8<sp/>string<sp/>for<sp/>needle<sp/>in<sp/>haystack<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybeMatch,<sp/>so<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)maybeMatch;</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>h<sp/>could<sp/>be<sp/>in<sp/>the<sp/>middle<sp/>of<sp/>an<sp/>unmatching<sp/>utf8<sp/>codepoint,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>march<sp/>it<sp/>on<sp/>to<sp/>the<sp/>next<sp/>character<sp/>beginning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>starting<sp/>from<sp/>the<sp/>current<sp/>character</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(maybeMatch,<sp/>&amp;throwaway_codepoint);</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a00197aa7445ef50af8eb7de80904cc55" kindref="member">utf8casestr</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*haystack,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*needle)</highlight></codeline>
<codeline lineno="1328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*h<sp/>=<sp/>haystack;</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>needle<sp/>has<sp/>no<sp/>utf8<sp/>codepoints<sp/>before<sp/>the<sp/>null<sp/>terminating</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>byte<sp/>then<sp/>return<sp/>haystack</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>==<sp/>*((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)needle))<sp/>{</highlight></codeline>
<codeline lineno="1334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)haystack;</highlight></codeline>
<codeline lineno="1335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;;)<sp/>{</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*maybeMatch<sp/>=<sp/>h;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*n<sp/>=<sp/>needle;</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>h_cp,<sp/>n_cp;</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>next<sp/>code<sp/>point<sp/>and<sp/>track<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*nextH<sp/>=<sp/>h<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(h,<sp/>&amp;h_cp);</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(n,<sp/>&amp;n_cp);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>((0<sp/>!=<sp/>h_cp)<sp/>&amp;&amp;<sp/>(0<sp/>!=<sp/>n_cp))<sp/>{</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h_cp<sp/>=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(h_cp);</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n_cp<sp/>=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(n_cp);</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>we<sp/>find<sp/>a<sp/>mismatch,<sp/>bail<sp/>out!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(h_cp<sp/>!=<sp/>n_cp)<sp/>{</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(h,<sp/>&amp;h_cp);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(n,<sp/>&amp;n_cp);</highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>n_cp)<sp/>{</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>found<sp/>the<sp/>whole<sp/>utf8<sp/>string<sp/>for<sp/>needle<sp/>in<sp/>haystack<sp/>at</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>maybeMatch,<sp/>so<sp/>return<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)maybeMatch;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>h_cp)<sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>no<sp/>match</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Roll<sp/>back<sp/>to<sp/>the<sp/>next<sp/>code<sp/>point<sp/>in<sp/>the<sp/>haystack<sp/>to<sp/>test</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>h<sp/>=<sp/>nextH;</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1aedad8b40a6836b75f6268a6a66b53f76" kindref="member">utf8valid</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="1376"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal"><sp/>!=<sp/>*s)<sp/>{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xf0<sp/>==<sp/>(0xf8<sp/>&amp;<sp/>*s))<sp/>{</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>each<sp/>of<sp/>the<sp/>3<sp/>following<sp/>bytes<sp/>in<sp/>this<sp/>4-byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utf8<sp/>codepoint<sp/>began<sp/>with<sp/>0b10xxxxxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>s[1]))<sp/>||<sp/>(0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>s[2]))<sp/>||</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>s[3])))<sp/>{</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>our<sp/>utf8<sp/>codepoint<sp/>ended<sp/>after<sp/>4<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>s[4]))<sp/>{</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>the<sp/>top<sp/>5<sp/>bits<sp/>of<sp/>this<sp/>4-byte<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>codepoint<sp/>were<sp/>not<sp/>0,<sp/>as<sp/>then<sp/>we<sp/>could<sp/>have<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>of<sp/>the<sp/>smaller<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0<sp/>==<sp/>(0x07<sp/>&amp;<sp/>s[0]))<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>(0x30<sp/>&amp;<sp/>s[1])))<sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"></highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4-byte<sp/>utf8<sp/>code<sp/>point<sp/>(began<sp/>with<sp/>0b11110xxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xe0<sp/>==<sp/>(0xf0<sp/>&amp;<sp/>*s))<sp/>{</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>each<sp/>of<sp/>the<sp/>2<sp/>following<sp/>bytes<sp/>in<sp/>this<sp/>3-byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utf8<sp/>codepoint<sp/>began<sp/>with<sp/>0b10xxxxxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>s[1]))<sp/>||<sp/>(0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>s[2])))<sp/>{</highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"></highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>our<sp/>utf8<sp/>codepoint<sp/>ended<sp/>after<sp/>3<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>s[3]))<sp/>{</highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>the<sp/>top<sp/>5<sp/>bits<sp/>of<sp/>this<sp/>3-byte<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>codepoint<sp/>were<sp/>not<sp/>0,<sp/>as<sp/>then<sp/>we<sp/>could<sp/>have<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>of<sp/>the<sp/>smaller<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((0<sp/>==<sp/>(0x0f<sp/>&amp;<sp/>s[0]))<sp/>&amp;&amp;<sp/>(0<sp/>==<sp/>(0x20<sp/>&amp;<sp/>s[1])))<sp/>{</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3-byte<sp/>utf8<sp/>code<sp/>point<sp/>(began<sp/>with<sp/>0b1110xxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xc0<sp/>==<sp/>(0xe0<sp/>&amp;<sp/>*s))<sp/>{</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>the<sp/>1<sp/>following<sp/>byte<sp/>in<sp/>this<sp/>2-byte</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>utf8<sp/>codepoint<sp/>began<sp/>with<sp/>0b10xxxxxx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0x80<sp/>!=<sp/>(0xc0<sp/>&amp;<sp/>s[1]))<sp/>{</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>our<sp/>utf8<sp/>codepoint<sp/>ended<sp/>after<sp/>2<sp/>bytes</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0x80<sp/>==<sp/>(0xc0<sp/>&amp;<sp/>s[2]))<sp/>{</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ensure<sp/>that<sp/>the<sp/>top<sp/>4<sp/>bits<sp/>of<sp/>this<sp/>2-byte<sp/>utf8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>codepoint<sp/>were<sp/>not<sp/>0,<sp/>as<sp/>then<sp/>we<sp/>could<sp/>have<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>one<sp/>of<sp/>the<sp/>smaller<sp/>encodings</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>(0x1e<sp/>&amp;<sp/>s[0]))<sp/>{</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2-byte<sp/>utf8<sp/>code<sp/>point<sp/>(began<sp/>with<sp/>0b110xxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0x00<sp/>==<sp/>(0x80<sp/>&amp;<sp/>*s))<sp/>{</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-byte<sp/>ascii<sp/>(began<sp/>with<sp/>0b0xxxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>we<sp/>have<sp/>an<sp/>invalid<sp/>0b1xxxxxxx<sp/>utf8<sp/>code<sp/>point<sp/>entry</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str,</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>out_codepoint)</highlight></codeline>
<codeline lineno="1458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xf0<sp/>==<sp/>(0xf8<sp/>&amp;<sp/>s[0]))<sp/>{</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4<sp/>byte<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_codepoint<sp/>=<sp/>((0x07<sp/>&amp;<sp/>s[0])<sp/>&lt;&lt;<sp/>18)<sp/>|<sp/>((0x3f<sp/>&amp;<sp/>s[1])<sp/>&lt;&lt;<sp/>12)<sp/>|</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x3f<sp/>&amp;<sp/>s[2])<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>(0x3f<sp/>&amp;<sp/>s[3]);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xe0<sp/>==<sp/>(0xf0<sp/>&amp;<sp/>s[0]))<sp/>{</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3<sp/>byte<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_codepoint<sp/>=</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0f<sp/>&amp;<sp/>s[0])<sp/>&lt;&lt;<sp/>12)<sp/>|<sp/>((0x3f<sp/>&amp;<sp/>s[1])<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>(0x3f<sp/>&amp;<sp/>s[2]);</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0xc0<sp/>==<sp/>(0xe0<sp/>&amp;<sp/>s[0]))<sp/>{</highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2<sp/>byte<sp/>utf8<sp/>codepoint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_codepoint<sp/>=<sp/>((0x1f<sp/>&amp;<sp/>s[0])<sp/>&lt;&lt;<sp/>6)<sp/>|<sp/>(0x3f<sp/>&amp;<sp/>s[1]);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1<sp/>byte<sp/>utf8<sp/>codepoint<sp/>otherwise</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out_codepoint<sp/>=<sp/>s[0];</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)s;</highlight></codeline>
<codeline lineno="1482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88" kindref="member">utf8codepointsize</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr)</highlight></codeline>
<codeline lineno="1485"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xffffff80<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xfffff800<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xffff0000<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(0<sp/>==<sp/>((int)0xffe00000<sp/>&amp;<sp/>chr))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1495"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a7faf7f12202a186786dea223abbd2486" kindref="member">utf8catcodepoint</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str,<sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="1498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*s<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xffffff80<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>1-byte/7-bit<sp/>ascii</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b0xxxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>(char)chr;</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xfffff800<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>2-byte/11-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b110xxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>2)<sp/>{</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>0xc0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>6);</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>2;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>((<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref>)0xffff0000<sp/>&amp;<sp/>chr))<sp/>{</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>3-byte/16-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b1110xxxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>3)<sp/>{</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>0xe0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>12);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>3;</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">//<sp/>if<sp/>(0<sp/>==<sp/>((int)0xffe00000<sp/>&amp;<sp/>chr))<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>4-byte/21-bit<sp/>utf8<sp/>code<sp/>point</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(0b11110xxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx<sp/>0b10xxxxxx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>4)<sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa1c763b38c4b20377f6bfb9947c9fee6" kindref="member">utf8_null</ref>;</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[0]<sp/>=<sp/>0xf0<sp/>|<sp/>(char)(chr<sp/>&gt;&gt;<sp/>18);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[1]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>12)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[2]<sp/>=<sp/>0x80<sp/>|<sp/>(char)((chr<sp/>&gt;&gt;<sp/>6)<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s[3]<sp/>=<sp/>0x80<sp/>|<sp/>(char)(chr<sp/>&amp;<sp/>0x3f);</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>s;</highlight></codeline>
<codeline lineno="1542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa3502e1c380c7a4b0f7a02ffc2c3c358" kindref="member">utf8islower</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chr<sp/>!=<sp/><ref refid="fort_8c_1afc7b7f0e41515bc7d694f22ec6fccd92" kindref="member">utf8uprcodepoint</ref>(chr);<sp/>}</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0b1efc85ea0182178c2e61603c21ef6c" kindref="member">utf8isupper</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>chr)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>chr<sp/>!=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(chr);<sp/>}</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af7329f330e93a5944837500cd4eb70ac" kindref="member">utf8lwr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str)</highlight></codeline>
<codeline lineno="1549"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/>*pn;</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>cp;</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><sp/>pn<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(p,<sp/>&amp;cp);</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>lwr_cp<sp/>=<sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(cp);</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88" kindref="member">utf8codepointsize</ref>(lwr_cp);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lwr_cp<sp/>!=<sp/>cp)<sp/>{</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a7faf7f12202a186786dea223abbd2486" kindref="member">utf8catcodepoint</ref>(p,<sp/>lwr_cp,<sp/>size);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pn;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pn<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(p,<sp/>&amp;cp);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1567"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae033fd7896504dcd1b9dfc6d6cf97584" kindref="member">utf8upr</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a3fc4adf8fc684bd4ec5a2863b38e3914" kindref="member">utf8_restrict</ref><sp/>str)</highlight></codeline>
<codeline lineno="1570"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*p,<sp/>*pn;</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>cp;</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/><sp/>p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><sp/>pn<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(p,<sp/>&amp;cp);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(cp<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>lwr_cp<sp/>=<sp/><ref refid="fort_8c_1afc7b7f0e41515bc7d694f22ec6fccd92" kindref="member">utf8uprcodepoint</ref>(cp);</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/><ref refid="fort_8c_1a5485ff272fc1530f21b35d32f9ab7a88" kindref="member">utf8codepointsize</ref>(lwr_cp);</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lwr_cp<sp/>!=<sp/>cp)<sp/>{</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a7faf7f12202a186786dea223abbd2486" kindref="member">utf8catcodepoint</ref>(p,<sp/>lwr_cp,<sp/>size);</highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>=<sp/>pn;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pn<sp/>=<sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(p,<sp/>&amp;cp);</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/><ref refid="fort_8c_1a2204af282a8d53880eceeb503d043319" kindref="member">utf8lwrcodepoint</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>cp)</highlight></codeline>
<codeline lineno="1591"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((0x0041<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x005a<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x00c0<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x00d6<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x00d8<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x00de<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0391<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x03a1<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x03a3<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x03ab<sp/>&gt;=<sp/>cp)))<sp/>{</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((0x0100<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x012f<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0132<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0137<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x014a<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0177<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0182<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0185<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01a0<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01a5<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01de<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01ef<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01f8<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x021f<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0222<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0233<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0246<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x024f<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x03d8<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x03ef<sp/>&gt;=<sp/>cp)))<sp/>{</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>|=<sp/>0x1;</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((0x0139<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0148<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0179<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x017e<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01af<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01b0<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01b3<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01b6<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01cd<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01dc<sp/>&gt;=<sp/>cp)))<sp/>{</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>&amp;=<sp/>~0x1;</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cp)<sp/>{</highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0178:<sp/>cp<sp/>=<sp/>0x00ff;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0243:<sp/>cp<sp/>=<sp/>0x0180;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x018e:<sp/>cp<sp/>=<sp/>0x01dd;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x023d:<sp/>cp<sp/>=<sp/>0x019a;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0220:<sp/>cp<sp/>=<sp/>0x019e;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01b7:<sp/>cp<sp/>=<sp/>0x0292;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01c4:<sp/>cp<sp/>=<sp/>0x01c6;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01c7:<sp/>cp<sp/>=<sp/>0x01c9;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01ca:<sp/>cp<sp/>=<sp/>0x01cc;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01f1:<sp/>cp<sp/>=<sp/>0x01f3;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01f7:<sp/>cp<sp/>=<sp/>0x01bf;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0187:<sp/>cp<sp/>=<sp/>0x0188;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x018b:<sp/>cp<sp/>=<sp/>0x018c;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0191:<sp/>cp<sp/>=<sp/>0x0192;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0198:<sp/>cp<sp/>=<sp/>0x0199;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01a7:<sp/>cp<sp/>=<sp/>0x01a8;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01ac:<sp/>cp<sp/>=<sp/>0x01ad;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01af:<sp/>cp<sp/>=<sp/>0x01b0;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01b8:<sp/>cp<sp/>=<sp/>0x01b9;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01bc:<sp/>cp<sp/>=<sp/>0x01bd;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01f4:<sp/>cp<sp/>=<sp/>0x01f5;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x023b:<sp/>cp<sp/>=<sp/>0x023c;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0241:<sp/>cp<sp/>=<sp/>0x0242;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03fd:<sp/>cp<sp/>=<sp/>0x037b;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03fe:<sp/>cp<sp/>=<sp/>0x037c;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03ff:<sp/>cp<sp/>=<sp/>0x037d;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x037f:<sp/>cp<sp/>=<sp/>0x03f3;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0386:<sp/>cp<sp/>=<sp/>0x03ac;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0388:<sp/>cp<sp/>=<sp/>0x03ad;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0389:<sp/>cp<sp/>=<sp/>0x03ae;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x038a:<sp/>cp<sp/>=<sp/>0x03af;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x038c:<sp/>cp<sp/>=<sp/>0x03cc;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x038e:<sp/>cp<sp/>=<sp/>0x03cd;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x038f:<sp/>cp<sp/>=<sp/>0x03ce;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0370:<sp/>cp<sp/>=<sp/>0x0371;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0372:<sp/>cp<sp/>=<sp/>0x0373;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0376:<sp/>cp<sp/>=<sp/>0x0377;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03f4:<sp/>cp<sp/>=<sp/>0x03d1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03cf:<sp/>cp<sp/>=<sp/>0x03d7;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03f9:<sp/>cp<sp/>=<sp/>0x03f2;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03f7:<sp/>cp<sp/>=<sp/>0x03f8;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03fa:<sp/>cp<sp/>=<sp/>0x03fb;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="1665"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/><ref refid="fort_8c_1afc7b7f0e41515bc7d694f22ec6fccd92" kindref="member">utf8uprcodepoint</ref>(<ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>cp)</highlight></codeline>
<codeline lineno="1668"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((0x0061<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x007a<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x00e0<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x00f6<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x00f8<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x00fe<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x03b1<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x03c1<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x03c3<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x03cb<sp/>&gt;=<sp/>cp)))<sp/>{</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>-=<sp/>32;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((0x0100<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x012f<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0132<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0137<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x014a<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0177<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0182<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0185<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01a0<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01a5<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01de<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01ef<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01f8<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x021f<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0222<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0233<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0246<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x024f<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x03d8<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x03ef<sp/>&gt;=<sp/>cp)))<sp/>{</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>&amp;=<sp/>~0x1;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(((0x0139<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x0148<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x0179<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x017e<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01af<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01b0<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01b3<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01b6<sp/>&gt;=<sp/>cp))<sp/>||</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((0x01cd<sp/>&lt;=<sp/>cp)<sp/>&amp;&amp;<sp/>(0x01dc<sp/>&gt;=<sp/>cp)))<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>-=<sp/>1;</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cp<sp/>|=<sp/>0x1;</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cp)<sp/>{</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x00ff:<sp/>cp<sp/>=<sp/>0x0178;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0180:<sp/>cp<sp/>=<sp/>0x0243;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01dd:<sp/>cp<sp/>=<sp/>0x018e;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x019a:<sp/>cp<sp/>=<sp/>0x023d;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x019e:<sp/>cp<sp/>=<sp/>0x0220;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0292:<sp/>cp<sp/>=<sp/>0x01b7;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01c6:<sp/>cp<sp/>=<sp/>0x01c4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01c9:<sp/>cp<sp/>=<sp/>0x01c7;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01cc:<sp/>cp<sp/>=<sp/>0x01ca;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01f3:<sp/>cp<sp/>=<sp/>0x01f1;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01bf:<sp/>cp<sp/>=<sp/>0x01f7;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0188:<sp/>cp<sp/>=<sp/>0x0187;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x018c:<sp/>cp<sp/>=<sp/>0x018b;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0192:<sp/>cp<sp/>=<sp/>0x0191;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0199:<sp/>cp<sp/>=<sp/>0x0198;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01a8:<sp/>cp<sp/>=<sp/>0x01a7;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01ad:<sp/>cp<sp/>=<sp/>0x01ac;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01b0:<sp/>cp<sp/>=<sp/>0x01af;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01b9:<sp/>cp<sp/>=<sp/>0x01b8;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01bd:<sp/>cp<sp/>=<sp/>0x01bc;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x01f5:<sp/>cp<sp/>=<sp/>0x01f4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x023c:<sp/>cp<sp/>=<sp/>0x023b;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0242:<sp/>cp<sp/>=<sp/>0x0241;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x037b:<sp/>cp<sp/>=<sp/>0x03fd;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x037c:<sp/>cp<sp/>=<sp/>0x03fe;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x037d:<sp/>cp<sp/>=<sp/>0x03ff;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03f3:<sp/>cp<sp/>=<sp/>0x037f;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03ac:<sp/>cp<sp/>=<sp/>0x0386;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03ad:<sp/>cp<sp/>=<sp/>0x0388;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03ae:<sp/>cp<sp/>=<sp/>0x0389;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03af:<sp/>cp<sp/>=<sp/>0x038a;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03cc:<sp/>cp<sp/>=<sp/>0x038c;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03cd:<sp/>cp<sp/>=<sp/>0x038e;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03ce:<sp/>cp<sp/>=<sp/>0x038f;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0371:<sp/>cp<sp/>=<sp/>0x0370;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0373:<sp/>cp<sp/>=<sp/>0x0372;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x0377:<sp/>cp<sp/>=<sp/>0x0376;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03d1:<sp/>cp<sp/>=<sp/>0x03f4;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03d7:<sp/>cp<sp/>=<sp/>0x03cf;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03f2:<sp/>cp<sp/>=<sp/>0x03f9;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03f8:<sp/>cp<sp/>=<sp/>0x03f7;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0x03fb:<sp/>cp<sp/>=<sp/>0x03fa;<sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cp;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>utf8_restrict</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>utf8_null</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>extern<sp/>&quot;C&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1749"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__clang__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>SHEREDOM_UTF8_H_INCLUDED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="1759"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;utf8.h&quot;</highlight></codeline>
<codeline lineno="1760"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"></highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="1764"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;string_buffer.h&quot;</highlight></codeline>
<codeline lineno="1765"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight></codeline>
<codeline lineno="1767"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>STRING_BUFFER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRING_BUFFER_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"></highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="1774"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>STRING<sp/>BUFFER</highlight></codeline>
<codeline lineno="1775"><highlight class="comment"><sp/>*<sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"></highlight></codeline>
<codeline lineno="1777" refid="structf__string__buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">union<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>;</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>;</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref>;</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref><sp/><ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="1790"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1ac940e33b846028d55c174b9f7a2164f5" kindref="member">create_string_buffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>number_of_chars,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref><sp/>type);</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1a414a5ce9226b67140bda7955ff1b21e5" kindref="member">copy_string_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1802"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a97de898073d1711de1d55369dfc067c7" kindref="member">realloc_string_buffer_without_copy</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a97269d36ab50d310bd99d9949d14489e" kindref="member">fill_buffer_from_string</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9" kindref="member">fill_buffer_from_wstring</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a026f474e0d6b4c90c792a8833dde496c" kindref="member">fill_buffer_from_u8string</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1adee94920422c7175c9dedd31fb9e5364" kindref="member">buffer_text_visible_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b" kindref="member">buffer_text_visible_height</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acc99fa5ecb3035540808fb06ad4fa4e8" kindref="member">string_buffer_cod_width_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a66f99ddf13fdabb67f73a0a763307afb" kindref="member">string_buffer_raw_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a398a13f3db5a43bca6fecdc119f38a88" kindref="member">string_buffer_width_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1af8c64e48cffecc6fb8e5220a8feff523" kindref="member">buffer_get_data</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3d109493b9707163dc60dbe7f413f95a" kindref="member">buffer_check_align</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer);</highlight></codeline>
<codeline lineno="1837"><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0140429a7259d97aaa5711a8b89c5860" kindref="member">buffer_printf</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_row,<sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cod_width,</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*content_style_tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reset_content_style_tag);</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1844"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0e13f6f3d616f84fa0bd43e23d604034" kindref="member">buffer_set_u8strwid_func</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*u8strwid)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width));</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>STRING_BUFFER_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="1851"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;string_buffer.h&quot;</highlight></codeline>
<codeline lineno="1852"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"></highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight></codeline>
<codeline lineno="1855"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="1856"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;properties.h&quot;</highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1858"><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>PROPERTIES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROPERTIES_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROP_IS_SET(ft_props,<sp/>property)<sp/>((ft_props)<sp/>&amp;<sp/>(property))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROP_SET(ft_props,<sp/>property)<sp/>((ft_props)<sp/>|=(property))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROP_UNSET(ft_props,<sp/>property)<sp/>((ft_props)<sp/>&amp;=<sp/>~((uint32_t)(property)))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TEXT_STYLE_TAG_MAX_SIZE<sp/>(64<sp/>*<sp/>2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5eb660e527d2b076b21d88c35bef4089" kindref="member">get_style_tag_for_cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a14b841bae5c7188b971109613ab2b12a" kindref="member">get_reset_style_tag_for_cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae1ca1606073ac2c174844a4633c8159d" kindref="member">get_style_tag_for_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="1883"><highlight class="normal"></highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1885"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab4db6996f6df6e03e566bdbdfba76da0" kindref="member">get_reset_style_tag_for_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz);</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight></codeline>
<codeline lineno="1888"><highlight class="normal"></highlight></codeline>
<codeline lineno="1889" refid="structf__cell__props" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__cell__props" kindref="compound">f_cell_props</ref><sp/>{</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1aebc7e6d02395da1d92d0f429651fb1b9" kindref="member">cell_row</ref>;</highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1a2050cfae9730fb07f1c72689f050ec94" kindref="member">cell_col</ref>;</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="structf__cell__props_1a07b356a4c56beedc874b9fb0320d984d" kindref="member">properties_flags</ref>;</highlight></codeline>
<codeline lineno="1893"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1a54ccd4f1df4cc1d45c57eb7f43cdf020" kindref="member">col_min_width</ref>;</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32c" kindref="member">ft_text_alignment</ref><sp/><ref refid="structf__cell__props_1aca4ea7fd31004d666dcde97abd4a872d" kindref="member">align</ref>;</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1a0eab802d4da7ff81976176b083e3e6ec" kindref="member">cell_padding_top</ref>;</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1a530aadfddba7770d625b7267052b30a5" kindref="member">cell_padding_bottom</ref>;</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1a974956182cc69378a7ac0fb26d650873" kindref="member">cell_padding_left</ref>;</highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1a544a47782e13d41f71497b0af2daac09" kindref="member">cell_padding_right</ref>;</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1afcc77435b807752ced89810351d7dffb" kindref="member">cell_empty_string_height</ref>;</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref><sp/><ref refid="structf__cell__props_1a348652d60163f3aeb6afabb8929e4af5" kindref="member">row_type</ref>;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1af53c0c19d0256a3939e44f608013dbf8" kindref="member">content_fg_color_number</ref>;</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1a8430efd49c624f163472b3007db3d5f3" kindref="member">content_bg_color_number</ref>;</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props_1af0d3576ca232677f454cb734e284e117" kindref="member">cell_bg_color_number</ref>;</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref><sp/><ref refid="structf__cell__props_1a6b58066d703ac528955249e429754809" kindref="member">cell_text_style</ref>;</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref><sp/><ref refid="structf__cell__props_1a194687916c07a762386a70acce5ea344" kindref="member">content_text_style</ref>;</highlight></codeline>
<codeline lineno="1907"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__cell__props" kindref="compound">f_cell_props</ref><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref>;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/><ref refid="fort_8c_1a44489cbfc2d77483bf104e71a9adc104" kindref="member">f_cell_prop_container_t</ref>;</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*<ref refid="fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c" kindref="member">create_cell_prop_container</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1914"><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a2266ed2c80b2571032776541bfa14174" kindref="member">destroy_cell_prop_container</ref>(<ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont);</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*<ref refid="fort_8c_1a2ce14d6f2ae9343c8d2e4eb6d4fc0775" kindref="member">cget_cell_prop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*<ref refid="fort_8c_1a9cf22afc8e3f8fbc1038722b1e918f76" kindref="member">get_cell_prop_and_create_if_not_exists</ref>(<ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a59462cfbe20a08d695d7fdea80a53c94" kindref="member">set_cell_property</ref>(<ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1927"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/>uint32_t<sp/>property);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a74f59c42e342ef32cba6dda001961f5d" kindref="member">set_default_cell_property</ref>(uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TABLE<sp/>BORDER<sp/>DESСRIPTION</highlight></codeline>
<codeline lineno="1935"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1936"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1937"><highlight class="comment"><sp/>*<sp/><sp/><sp/>TL<sp/>TT<sp/>TT<sp/>TT<sp/>TV<sp/>TT<sp/>TT<sp/>TT<sp/>TT<sp/>TT<sp/>TT<sp/>TT<sp/>TR</highlight></codeline>
<codeline lineno="1938"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1939"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1940"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LH<sp/>IH<sp/>IH<sp/>IH<sp/>II<sp/>IH<sp/>IH<sp/>IH<sp/>TI<sp/>IH<sp/>IH<sp/>IH<sp/>RH</highlight></codeline>
<codeline lineno="1941"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1942"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1943"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LI<sp/>IH<sp/>IH<sp/>IH<sp/>RI<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RH</highlight></codeline>
<codeline lineno="1944"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1945"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1946"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LH<sp/>IH<sp/>IH<sp/>IH<sp/>BI<sp/>IH<sp/>IH<sp/>IH<sp/>II<sp/>IH<sp/>IH<sp/>IH<sp/>RH</highlight></codeline>
<codeline lineno="1947"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1948"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1949"><highlight class="comment"><sp/>*<sp/><sp/><sp/>BL<sp/>BB<sp/>BB<sp/>BB<sp/>BV<sp/>BB<sp/>BB<sp/>BB<sp/>BV<sp/>BB<sp/>BB<sp/>BB<sp/>BR</highlight></codeline>
<codeline lineno="1950"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/>HORIZONTAL<sp/>SEPARATOR<sp/>DESCRIPTION</highlight></codeline>
<codeline lineno="1954"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1955"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1956"><highlight class="comment"><sp/>*<sp/><sp/><sp/>TL<sp/>TT<sp/>TT<sp/>TT<sp/>TV<sp/>TT<sp/>TT<sp/>TT<sp/>TV<sp/>TT<sp/>TT<sp/>TT<sp/>TR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;-----<sp/>TOP_SEPARATOR</highlight></codeline>
<codeline lineno="1957"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1958"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LH<sp/>IH<sp/>IH<sp/>IH<sp/>II<sp/>IH<sp/>IH<sp/>IH<sp/>II<sp/>IH<sp/>IH<sp/>IH<sp/>RH<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;-----<sp/>INSIDE_SEPARATOR</highlight></codeline>
<codeline lineno="1959"><highlight class="comment"><sp/>*<sp/><sp/><sp/>LL<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>RR</highlight></codeline>
<codeline lineno="1960"><highlight class="comment"><sp/>*<sp/><sp/><sp/>BL<sp/>BB<sp/>BB<sp/>BB<sp/>BV<sp/>BB<sp/>BB<sp/>BB<sp/>BV<sp/>BB<sp/>BB<sp/>BB<sp/>BR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;-----<sp/>BOTTOM_SEPARATOR</highlight></codeline>
<codeline lineno="1961"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5" kindref="member">f_hor_separator_pos</ref><sp/>{</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a20da53267127001ec3320abe91fa783e" kindref="member">TOP_SEPARATOR</ref>,</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a23c6c5d09adaa5a3c4176c0b67263769" kindref="member">INSIDE_SEPARATOR</ref>,</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a84ba29422768fd8057cd7d8f3239e59c" kindref="member">BOTTOM_SEPARATOR</ref></highlight></codeline>
<codeline lineno="1967"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29" kindref="member">f_border_item_pos</ref><sp/>{</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08" kindref="member">TL_bip</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4" kindref="member">TT_bip</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b" kindref="member">TV_bip</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac" kindref="member">TR_bip</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a889a1c24be63ae17b128192d9dec2d3a" kindref="member">LL_bip</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29aad183d45427b545df2fd25ed9ecccc8c" kindref="member">IV_bip</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a062e9c55d54121d574a4b8f244c2d964" kindref="member">RR_bip</ref><sp/>=<sp/>6,</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056" kindref="member">LH_bip</ref><sp/>=<sp/>7,</highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445" kindref="member">IH_bip</ref><sp/>=<sp/>8,</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1496ce55ebf0dc1c90c6f8abd60ea272" kindref="member">II_bip</ref><sp/>=<sp/>9,</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5" kindref="member">RH_bip</ref><sp/>=<sp/>10,</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6" kindref="member">BL_bip</ref><sp/>=<sp/>11,</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472" kindref="member">BB_bip</ref><sp/>=<sp/>12,</highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517" kindref="member">BV_bip</ref><sp/>=<sp/>13,</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677" kindref="member">BR_bip</ref><sp/>=<sp/>14,</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a6e524723eac5b695737b627d74ac77fb" kindref="member">LI_bip</ref><sp/>=<sp/>15,</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a9c128d27d24141f9c2df703a42521835" kindref="member">TI_bip</ref><sp/>=<sp/>16,</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a0841d0344e52968b3d6dd1bfee6f98d2" kindref="member">RI_bip</ref><sp/>=<sp/>17,</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a46945f957ff717cbf501e5a59d0f8e1d" kindref="member">BI_bip</ref><sp/>=<sp/>18,</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref></highlight></codeline>
<codeline lineno="1995"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"></highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35" kindref="member">f_separator_item_pos</ref><sp/>{</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5bdf3707d8c0c144baceb9b432b080b" kindref="member">LH_sip</ref><sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="2000"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a6edb298364e9b2705453e4fd3d764894" kindref="member">IH_sip</ref><sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="2001"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35ae795b75c17ff1dc6b1d7a94e0db120e6" kindref="member">II_sip</ref><sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a9ef36a4ef68f74f53f7153992ac80c2e" kindref="member">RH_sip</ref><sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="2003"><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a4dd526ac15d2f95dda29b58a7969250c" kindref="member">TI_sip</ref><sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5c00304dc6ed19e75613b993f3b8510" kindref="member">BI_sip</ref><sp/>=<sp/>5,</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"></highlight></codeline>
<codeline lineno="2007"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a1011b2e48e304397b1f174798923779c" kindref="member">SEPARATOR_ITEM_POS_SIZE</ref></highlight></codeline>
<codeline lineno="2008"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2011" refid="structfort__border__style" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/>{</highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structfort__border__style_1ad9cb9c8195dabd4fb4698c2b2410d9e8" kindref="member">border_chars</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>];</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structfort__border__style_1a1c9522cfeb12351002e6e0a67c192175" kindref="member">header_border_chars</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>];</highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a1011b2e48e304397b1f174798923779c" kindref="member">SEPARATOR_ITEM_POS_SIZE</ref>];</highlight></codeline>
<codeline lineno="2015"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a1551acd214a753796743eb0272395869" kindref="member">FORT_BASIC_STYLE</ref>;</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a18048056d8d37f0485dfc4480266b407" kindref="member">FORT_BASIC2_STYLE</ref>;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ac35b24f98659298aafaac4f782b35908" kindref="member">FORT_SIMPLE_STYLE</ref>;</highlight></codeline>
<codeline lineno="2019"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1afa51b0acbd3c7ce38f236fbd8accd283" kindref="member">FORT_PLAIN_STYLE</ref>;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ab5cfb34391ceae55c3adc0b856e2d3d1" kindref="member">FORT_DOT_STYLE</ref>;</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a58948e002a53e826043f3f1fd0efa626" kindref="member">FORT_EMPTY_STYLE</ref>;</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1acd0057b56b50d3772d93a58a345f8498" kindref="member">FORT_EMPTY2_STYLE</ref>;</highlight></codeline>
<codeline lineno="2023"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ab60c22c456490dc1c2b2581206aade7f" kindref="member">FORT_SOLID_STYLE</ref>;</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1afaadc6fcd0ea52e9bea97f198623dd34" kindref="member">FORT_SOLID_ROUND_STYLE</ref>;</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ad07ecf56923564f20f54de569baa4c31" kindref="member">FORT_NICE_STYLE</ref>;</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a8bea0c4f43e34eccd50a38cf7cf275d9" kindref="member">FORT_DOUBLE_STYLE</ref>;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ad7b86e58f7e8a1871d31e9d36e1afe8e" kindref="member">FORT_DOUBLE2_STYLE</ref>;</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1adce884980314dc4c5f6b5d19b6c9f0ae" kindref="member">FORT_BOLD_STYLE</ref>;</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a2e98d54b72c590832a3d252dd43f68e7" kindref="member">FORT_BOLD2_STYLE</ref>;</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a1ee29f5ac5af7b2100ca44d999f65493" kindref="member">FORT_FRAME_STYLE</ref>;</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"></highlight></codeline>
<codeline lineno="2033" refid="structfort__entire__table__properties" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties</ref><sp/>{</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfort__entire__table__properties_1a87484e19e9dff2efeabfbbcfdc0c0f80" kindref="member">left_margin</ref>;</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfort__entire__table__properties_1aae43b762bb8a8ee14752f7a1056f85de" kindref="member">top_margin</ref>;</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfort__entire__table__properties_1a3d505e3f1169ea3f86ecf36aefe24be3" kindref="member">right_margin</ref>;</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structfort__entire__table__properties_1aa80ec529af79ff50c442c24c505f512a" kindref="member">bottom_margin</ref>;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5" kindref="member">ft_adding_strategy</ref><sp/><ref refid="structfort__entire__table__properties_1a18b0b5e9a876a787e08d7f630d52152d" kindref="member">add_strategy</ref>;</highlight></codeline>
<codeline lineno="2039"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties</ref><sp/><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref>;</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/><ref refid="fort_8c_1a59d265136eda43200385d8b5f04ecd2c" kindref="member">g_entire_table_properties</ref>;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a1cde977c8162b3902a3eece0b649e451" kindref="member">set_entire_table_property</ref>(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*table_properties,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a6552ebc09611ccba176d04a5702458a1" kindref="member">set_default_entire_table_property</ref>(uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value);</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2049" refid="structf__table__properties" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties</ref><sp/>{</highlight></codeline>
<codeline lineno="2050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>;</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref>;</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/><ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>;</highlight></codeline>
<codeline lineno="2053"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/><ref refid="fort_8c_1a7e383842a355b23739ccb9bb081cf543" kindref="member">g_table_properties</ref>;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a218b12058c9822ff0ad91544aedd2a13" kindref="member">max_border_elem_strlen</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties</ref><sp/>*);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*<ref refid="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" kindref="member">create_table_properties</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a375c0af4b424ea5ae6bada04698665d5" kindref="member">destroy_table_properties</ref>(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties);</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*<ref refid="fort_8c_1a60b1666a1271172355ced7927d5f5eff" kindref="member">copy_table_properties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*property);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PROPERTIES_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2071"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;properties.h&quot;</highlight></codeline>
<codeline lineno="2072"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2076"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;cell.h&quot;</highlight></codeline>
<codeline lineno="2077"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CELL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CELL_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell);</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a236a2db76f5d456475a97dc2726ca7b3" kindref="member">copy_cell</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell);</highlight></codeline>
<codeline lineno="2092"><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight></codeline>
<codeline lineno="2096"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a9c241d6f1cadd55e3b1ce1f5928b9556" kindref="member">cell_invis_codes_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context);</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a4b4f366d1272078225219727401cde90" kindref="member">hint_height_cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context);</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa406a5dc43875274fb9eaa3c941ce753" kindref="member">set_cell_type</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>type);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/><ref refid="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" kindref="member">get_cell_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a9f85d4d29e5835229f6127609a265c02" kindref="member">cell_printf</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cod_width);</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a3bde4232e71f4b585df25c0253128137" kindref="member">fill_cell_from_string</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae884baeeef1f6d0aa11118c89df4ae25" kindref="member">fill_cell_from_wstring</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae2f26d50cef40dd4f5bb349631c6eeda" kindref="member">fill_cell_from_buffer</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buf);</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1ab4f0992198f9be12d538e0ae6080c94d" kindref="member">cell_get_string_buffer</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CELL_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;cell.h&quot;</highlight></codeline>
<codeline lineno="2129"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2133"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;row.h&quot;</highlight></codeline>
<codeline lineno="2134"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>ROW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROW_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2140"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/fort.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;properties.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row);</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a3a01711036a669b10b641d6179f72610" kindref="member">copy_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a234cff841d6e8bffc9955dd06d334420" kindref="member">split_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Delete<sp/>range<sp/>[left;<sp/>right]<sp/>of<sp/>cells<sp/>(both<sp/>ends<sp/>included)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aeb4ff36967a8e872f3d315e60d2bc4f9" kindref="member">ft_row_erase_range</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>right);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a727e646203a4b57b987d1da7ef5fb700" kindref="member">create_row_from_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a6bf142ab10b212be6fb4214805b98945" kindref="member">create_row_from_fmt_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/><sp/>*fmt,<sp/>va_list<sp/>*va_args);</highlight></codeline>
<codeline lineno="2168"><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a840fa27cb400833ddeb735488e1d8947" kindref="member">get_cell</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2176"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0" kindref="member">get_cell_and_create_if_not_exists</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a40ddd32fd7bb25bdda626db532e7412b" kindref="member">create_cell_in_position</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae67f055e422299c4821b1a00d5bfeb6d" kindref="member">swap_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*cur_row,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*ins_row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a651c99d3ef016298fb72557264c415bf" kindref="member">insert_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*cur_row,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*ins_row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos);</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab36a4052c23098fca6dce54d6201d96b" kindref="member">group_cell_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>master_cell_col);</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a187174d63ce94aa162d2468933cd3cbc" kindref="member">get_row_cell_types</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>*types,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>types_sz);</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a66ea4a81d6bd50cb139417df40d7aba2" kindref="member">row_set_cell_span</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cell_column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hor_span);</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a76b7a5fc469d3f72bedcefc8f97a8e58" kindref="member">print_row_separator</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*upper_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*lower_row,</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5" kindref="member">f_hor_separator_pos</ref><sp/>separatorPos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac95471ef7b950b73451dc4aaf3a0e6f3" kindref="member">snprintf_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col_width_arr_sz,</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_height);</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1ad094494ea525a6a511399b4bf8aac45c" kindref="member">create_row_from_wstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>ROW_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2218"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;row.h&quot;</highlight></codeline>
<codeline lineno="2219"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2223"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;table.h&quot;</highlight></codeline>
<codeline lineno="2224"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TABLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TABLE_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2228"><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231" refid="structft__table" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__table" kindref="compound">ft_table</ref><sp/>{</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>;</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref>;</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>;</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>;</highlight></codeline>
<codeline lineno="2238"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*<ref refid="fort_8c_1a61340feda1ea158db1bd1da1671751ad" kindref="member">create_separator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enabled);</highlight></codeline>
<codeline lineno="2242"><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a9a6706bef6f7dae20f91a49113fc2165" kindref="member">destroy_separator</ref>(<ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight></codeline>
<codeline lineno="2246"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*<ref refid="fort_8c_1af3cff45d0b6bbd125b6119cfec729ed6" kindref="member">copy_separator</ref>(<ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep);</highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a7c9835a2792ffbd846c844f28e01e557" kindref="member">get_table_sizes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*cols);</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a409d9364981e54abbb8616d9b98b4dfe" kindref="member">get_row</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row);</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a278381cdc233b3476f2660a5a422a1f5" kindref="member">get_row_c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1ad4906ec40fada2d7ded7846d4dd0b2bf" kindref="member">get_row_and_create_if_not_exists</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row);</highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1a6855260f3c1d1da0696e5d1e652bc4ef" kindref="member">get_cur_str_buffer_and_create_if_not_exists</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table);</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ac6a1014eacf8e41589fe6e7d6ffec493" kindref="member">table_rows_and_cols_geometry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>**col_width_arr_p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr_sz,</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>**row_height_arr_p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*row_height_arr_sz,</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027" kindref="member">f_geometry_type</ref><sp/>geom);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a70608495ec687e0f65fec1cdad97a12f" kindref="member">table_geometry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width);</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2275"><highlight class="comment"><sp/>*<sp/>Returns<sp/>geometry<sp/>in<sp/>codepoints(characters)<sp/>(include<sp/>codepoints<sp/>of<sp/>invisible</highlight></codeline>
<codeline lineno="2276"><highlight class="comment"><sp/>*<sp/>elements:<sp/>e.g.<sp/>styles<sp/>tags).</highlight></codeline>
<codeline lineno="2277"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae8047e766a703ad17a2dcc58645eb4df" kindref="member">table_internal_codepoints_geometry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width);</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TABLE_H<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2284"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;table.h&quot;</highlight></codeline>
<codeline lineno="2285"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2289"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;cell.c&quot;</highlight></codeline>
<codeline lineno="2290"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;cell.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;properties.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;string_buffer.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297" refid="structf__cell" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell</ref><sp/>{</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>;</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/><ref refid="structf__cell_1a61e2cf70f19a7f46953dd989f934d2b5" kindref="member">cell_type</ref>;</highlight></codeline>
<codeline lineno="2300"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2304"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__cell" kindref="compound">f_cell_t</ref>),<sp/>1);</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/>cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref><sp/>=<sp/><ref refid="fort_8c_1ac940e33b846028d55c174b9f7a2164f5" kindref="member">create_string_buffer</ref>(<ref refid="fort_8c_1aae64a8d6a29845f7f4aa2f1bc3e095dd" kindref="member">DEFAULT_STR_BUF_SIZE</ref>,<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>);</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(cell);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/>cell-&gt;<ref refid="structf__cell_1a61e2cf70f19a7f46953dd989f934d2b5" kindref="member">cell_type</ref><sp/>=<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc" kindref="member">COMMON_CELL</ref>;</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell;</highlight></codeline>
<codeline lineno="2315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell)</highlight></codeline>
<codeline lineno="2319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>);</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(cell);</highlight></codeline>
<codeline lineno="2324"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a236a2db76f5d456475a97dc2726ca7b3" kindref="member">copy_cell</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell)</highlight></codeline>
<codeline lineno="2328"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*result<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(result-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref><sp/>=<sp/><ref refid="fort_8c_1a414a5ce9226b67140bda7955ff1b21e5" kindref="member">copy_string_buffer</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(result);</highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__cell_1a61e2cf70f19a7f46953dd989f934d2b5" kindref="member">cell_type</ref><sp/>=<sp/>cell-&gt;<ref refid="structf__cell_1a61e2cf70f19a7f46953dd989f934d2b5" kindref="member">cell_type</ref>;</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2342"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa406a5dc43875274fb9eaa3c941ce753" kindref="member">set_cell_type</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>type)</highlight></codeline>
<codeline lineno="2346"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/>cell-&gt;<ref refid="structf__cell_1a61e2cf70f19a7f46953dd989f934d2b5" kindref="member">cell_type</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/><ref refid="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" kindref="member">get_cell_type</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell)</highlight></codeline>
<codeline lineno="2353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell-&gt;<ref refid="structf__cell_1a61e2cf70f19a7f46953dd989f934d2b5" kindref="member">cell_type</ref>;</highlight></codeline>
<codeline lineno="2356"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context)</highlight></codeline>
<codeline lineno="2360"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:</highlight></codeline>
<codeline lineno="2362"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>At<sp/>the<sp/>moment<sp/>min<sp/>width<sp/>includes<sp/>paddings.<sp/>Maybe<sp/>it<sp/>is<sp/>better<sp/>that<sp/>min<sp/>width<sp/>weren&apos;t<sp/>include</highlight></codeline>
<codeline lineno="2363"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>paddings<sp/>but<sp/>be<sp/>min<sp/>width<sp/>of<sp/>the<sp/>cell<sp/>content<sp/>without<sp/>padding</highlight></codeline>
<codeline lineno="2364"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(context);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>;</highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>padding_left<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>row,<sp/>column,<sp/><ref refid="fort_8h_1a536d5cbb92b59dbc2e28891fa5bcd114" kindref="member">FT_CPROP_LEFT_PADDING</ref>);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>padding_right<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>row,<sp/>column,<sp/><ref refid="fort_8h_1a11cdcb1be7737d1f65f2b6bc4b8b7e86" kindref="member">FT_CPROP_RIGHT_PADDING</ref>);</highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>padding_left<sp/>+<sp/>padding_right;</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref><sp/>&amp;&amp;<sp/>cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/><ref refid="fort_8c_1adee94920422c7175c9dedd31fb9e5364" kindref="member">buffer_text_visible_width</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>);</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(result,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>row,<sp/>column,<sp/><ref refid="fort_8h_1aaa59596ed65b02b3c698e9aaf8d16bbd" kindref="member">FT_CPROP_MIN_WIDTH</ref>));</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2381"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2382"><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a9c241d6f1cadd55e3b1ce1f5928b9556" kindref="member">cell_invis_codes_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context)</highlight></codeline>
<codeline lineno="2385"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(context);</highlight></codeline>
<codeline lineno="2388"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cell_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a5eb660e527d2b076b21d88c35bef4089" kindref="member">get_style_tag_for_cell</ref>(properties,<sp/>row,<sp/>column,<sp/>cell_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>strlen(cell_style_tag);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reset_cell_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a14b841bae5c7188b971109613ab2b12a" kindref="member">get_reset_style_tag_for_cell</ref>(properties,<sp/>row,<sp/>column,<sp/>reset_cell_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>strlen(reset_cell_style_tag);</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>content_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ae1ca1606073ac2c174844a4633c8159d" kindref="member">get_style_tag_for_content</ref>(properties,<sp/>row,<sp/>column,<sp/>content_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>strlen(content_style_tag);</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reset_content_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab4db6996f6df6e03e566bdbdfba76da0" kindref="member">get_reset_style_tag_for_content</ref>(properties,<sp/>row,<sp/>column,<sp/>reset_content_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>strlen(reset_content_style_tag);</highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2410"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a4b4f366d1272078225219727401cde90" kindref="member">hint_height_cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context)</highlight></codeline>
<codeline lineno="2414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(context);</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>;</highlight></codeline>
<codeline lineno="2420"><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>padding_top<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>row,<sp/>column,<sp/><ref refid="fort_8h_1a2a5fd97edb51283e0baddcf896555e9d" kindref="member">FT_CPROP_TOP_PADDING</ref>);</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>padding_bottom<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>row,<sp/>column,<sp/><ref refid="fort_8h_1a47c8f3a9d83e32ac8f3ab5997dc5b542" kindref="member">FT_CPROP_BOTTOM_PADDING</ref>);</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>empty_string_height<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>row,<sp/>column,<sp/><ref refid="fort_8h_1aadf8488e2ae0a4e7c2e4ecbc715d2b18" kindref="member">FT_CPROP_EMPTY_STR_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>padding_top<sp/>+<sp/>padding_bottom;</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref><sp/>&amp;&amp;<sp/>cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>text_height<sp/>=<sp/><ref refid="fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b" kindref="member">buffer_text_visible_height</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>);</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>+=<sp/>text_height<sp/>==<sp/>0<sp/>?<sp/>empty_string_height<sp/>:<sp/>text_height;</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2431"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a9f85d4d29e5835229f6127609a265c02" kindref="member">cell_printf</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vis_width)</highlight></codeline>
<codeline lineno="2436"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context<sp/>=<sp/>cntx-&gt;<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>;</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_len<sp/>=<sp/>vis_width;</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL<sp/>||<sp/>(vis_width<sp/>&lt;<sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref>(cell,<sp/>context)))<sp/>{</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding_top<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/><ref refid="fort_8h_1a2a5fd97edb51283e0baddcf896555e9d" kindref="member">FT_CPROP_TOP_PADDING</ref>);</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding_left<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/><ref refid="fort_8h_1a536d5cbb92b59dbc2e28891fa5bcd114" kindref="member">FT_CPROP_LEFT_PADDING</ref>);</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>padding_right<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/><ref refid="fort_8h_1a11cdcb1be7737d1f65f2b6bc4b8b7e86" kindref="member">FT_CPROP_RIGHT_PADDING</ref>);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>invisible_written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>Dirty<sp/>hack<sp/>with<sp/>changing<sp/>buf_len!<sp/>need<sp/>refactoring.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Also<sp/>maybe<sp/>it<sp/>is<sp/>better<sp/>to<sp/>move<sp/>all<sp/>struff<sp/>with<sp/>colors<sp/>to<sp/>buffers?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2455"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>cell_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a5eb660e527d2b076b21d88c35bef4089" kindref="member">get_style_tag_for_cell</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/>cell_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_len<sp/>+=<sp/>strlen(cell_style_tag);</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reset_cell_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a14b841bae5c7188b971109613ab2b12a" kindref="member">get_reset_style_tag_for_cell</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/>reset_cell_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_len<sp/>+=<sp/>strlen(reset_cell_style_tag);</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>content_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ae1ca1606073ac2c174844a4633c8159d" kindref="member">get_style_tag_for_content</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/>content_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_len<sp/>+=<sp/>strlen(content_style_tag);</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>reset_content_style_tag[<ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>];</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab4db6996f6df6e03e566bdbdfba76da0" kindref="member">get_reset_style_tag_for_content</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/>reset_content_style_tag,<sp/><ref refid="fort_8c_1aaf9891f4d11d62599eb14bfd25af56d2" kindref="member">TEXT_STYLE_TAG_MAX_SIZE</ref>);</highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/><sp/>buf_len<sp/>+=<sp/>strlen(reset_content_style_tag);</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>CELL_STYLE_T<sp/><sp/><sp/>LEFT_PADDING<sp/><sp/><sp/>CONTENT_STYLE_T<sp/><sp/>CONTENT<sp/><sp/><sp/>RESET_CONTENT_STYLE_T<sp/><sp/><sp/><sp/>RIGHT_PADDING<sp/><sp/><sp/>RESET_CELL_STYLE_T</highlight></codeline>
<codeline lineno="2472"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="2473"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L1<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R1</highlight></codeline>
<codeline lineno="2474"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R2</highlight></codeline>
<codeline lineno="2475"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L3<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R3</highlight></codeline>
<codeline lineno="2476"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>L2<sp/>=<sp/>padding_left;</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>R2<sp/>=<sp/>padding_right;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>R3<sp/>=<sp/>strlen(reset_cell_style_tag);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>TOTAL_WRITTEN<sp/>(written<sp/>+<sp/>invisible_written)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>RIGHT<sp/>(padding_right<sp/>+<sp/>extra_right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITE_CELL_STYLE_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN(print_n_strings(cntx,<sp/>1,<sp/>cell_style_tag))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITE_RESET_CELL_STYLE_TAG<sp/><sp/>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN(print_n_strings(cntx,<sp/>1,<sp/>reset_cell_style_tag))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITE_CONTENT_STYLE_TAG<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN(print_n_strings(cntx,<sp/>1,<sp/>content_style_tag))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WRITE_RESET_CONTENT_STYLE_TAG<sp/><sp/>CHCK_RSLT_ADD_TO_INVISIBLE_WRITTEN(print_n_strings(cntx,<sp/>1,<sp/>reset_content_style_tag))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&gt;=<sp/><ref refid="fort_8c_1a4b4f366d1272078225219727401cde90" kindref="member">hint_height_cell</ref>(cell,<sp/>context)</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>row<sp/>&lt;<sp/>padding_top</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>row<sp/>&gt;=<sp/>(padding_top<sp/>+<sp/><ref refid="fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b" kindref="member">buffer_text_visible_height</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a31acf3be2a5038d72e7e9f08311e4f8a" kindref="member">WRITE_CELL_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a572a6ca19b88baf9e4d32d270f04b6a8" kindref="member">WRITE_CONTENT_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4dd3781a70086c75737fd2c6aafdc299" kindref="member">WRITE_RESET_CONTENT_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>buf_len<sp/>-<sp/><ref refid="fort_8c_1ab55660b1711634f2daf0089672257c2d" kindref="member">TOTAL_WRITTEN</ref><sp/>-<sp/>R3,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af9efa523650f6451fd7a1ed157f1511f" kindref="member">WRITE_RESET_CELL_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="fort_8c_1ab55660b1711634f2daf0089672257c2d" kindref="member">TOTAL_WRITTEN</ref>;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a31acf3be2a5038d72e7e9f08311e4f8a" kindref="member">WRITE_CELL_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>L2,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a0140429a7259d97aaa5711a8b89c5860" kindref="member">buffer_printf</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>,<sp/>row<sp/>-<sp/>padding_top,<sp/>cntx,<sp/>vis_width<sp/>-<sp/>L2<sp/>-<sp/>R2,<sp/>content_style_tag,<sp/>reset_content_style_tag));</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a572a6ca19b88baf9e4d32d270f04b6a8" kindref="member">WRITE_CONTENT_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4dd3781a70086c75737fd2c6aafdc299" kindref="member">WRITE_RESET_CONTENT_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>vis_width<sp/>-<sp/>L2<sp/>-<sp/>R2,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>R2,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af9efa523650f6451fd7a1ed157f1511f" kindref="member">WRITE_RESET_CELL_STYLE_TAG</ref>;</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="fort_8c_1ab55660b1711634f2daf0089672257c2d" kindref="member">TOTAL_WRITTEN</ref>;</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>WRITE_CELL_STYLE_TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>WRITE_RESET_CELL_STYLE_TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>WRITE_CONTENT_STYLE_TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>WRITE_RESET_CONTENT_STYLE_TAG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>TOTAL_WRITTEN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>RIGHT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a3bde4232e71f4b585df25c0253128137" kindref="member">fill_cell_from_string</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="2529"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(str);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a97269d36ab50d310bd99d9949d14489e" kindref="member">fill_buffer_from_string</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="2534"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae884baeeef1f6d0aa11118c89df4ae25" kindref="member">fill_cell_from_wstring</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="2539"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(str);</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9" kindref="member">fill_buffer_from_wstring</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/>fill_cell_from_u8string(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="2550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(str);</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a026f474e0d6b4c90c792a8833dde496c" kindref="member">fill_buffer_from_u8string</ref>(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>,<sp/>str);</highlight></codeline>
<codeline lineno="2554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1ab4f0992198f9be12d538e0ae6080c94d" kindref="member">cell_get_string_buffer</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell)</highlight></codeline>
<codeline lineno="2559"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>);</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell-&gt;<ref refid="structf__cell_1a3a1b8ca7bc50fff05b35ecd6c553f50b" kindref="member">str_buffer</ref>;</highlight></codeline>
<codeline lineno="2563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae2f26d50cef40dd4f5bb349631c6eeda" kindref="member">fill_cell_from_buffer</ref>(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="2567"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cell);</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3bde4232e71f4b585df25c0253128137" kindref="member">fill_cell_from_string</ref>(cell,<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>);</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae884baeeef1f6d0aa11118c89df4ae25" kindref="member">fill_cell_from_wstring</ref>(cell,<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>fill_cell_from_u8string(cell,<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>);</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2589"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;cell.c&quot;</highlight></codeline>
<codeline lineno="2590"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight></codeline>
<codeline lineno="2592"><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="2594"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;fort_impl.c&quot;</highlight></codeline>
<codeline lineno="2595"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2598"><highlight class="comment">libfort</highlight></codeline>
<codeline lineno="2599"><highlight class="comment"></highlight></codeline>
<codeline lineno="2600"><highlight class="comment">MIT<sp/>License</highlight></codeline>
<codeline lineno="2601"><highlight class="comment"></highlight></codeline>
<codeline lineno="2602"><highlight class="comment">Copyright<sp/>(c)<sp/>2017<sp/>-<sp/>2018<sp/>Seleznev<sp/>Anton</highlight></codeline>
<codeline lineno="2603"><highlight class="comment"></highlight></codeline>
<codeline lineno="2604"><highlight class="comment">Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a<sp/>copy</highlight></codeline>
<codeline lineno="2605"><highlight class="comment">of<sp/>this<sp/>software<sp/>and<sp/>associated<sp/>documentation<sp/>files<sp/>(the<sp/>&quot;Software&quot;),<sp/>to<sp/>deal</highlight></codeline>
<codeline lineno="2606"><highlight class="comment">in<sp/>the<sp/>Software<sp/>without<sp/>restriction,<sp/>including<sp/>without<sp/>limitation<sp/>the<sp/>rights</highlight></codeline>
<codeline lineno="2607"><highlight class="comment">to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell</highlight></codeline>
<codeline lineno="2608"><highlight class="comment">copies<sp/>of<sp/>the<sp/>Software,<sp/>and<sp/>to<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Software<sp/>is</highlight></codeline>
<codeline lineno="2609"><highlight class="comment">furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="2610"><highlight class="comment"></highlight></codeline>
<codeline lineno="2611"><highlight class="comment">The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included<sp/>in<sp/>all</highlight></codeline>
<codeline lineno="2612"><highlight class="comment">copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Software.</highlight></codeline>
<codeline lineno="2613"><highlight class="comment"></highlight></codeline>
<codeline lineno="2614"><highlight class="comment">THE<sp/>SOFTWARE<sp/>IS<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,<sp/>EXPRESS<sp/>OR</highlight></codeline>
<codeline lineno="2615"><highlight class="comment">IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF<sp/>MERCHANTABILITY,</highlight></codeline>
<codeline lineno="2616"><highlight class="comment">FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE</highlight></codeline>
<codeline lineno="2617"><highlight class="comment">AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER</highlight></codeline>
<codeline lineno="2618"><highlight class="comment">LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,</highlight></codeline>
<codeline lineno="2619"><highlight class="comment">OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE<sp/>SOFTWARE<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE</highlight></codeline>
<codeline lineno="2620"><highlight class="comment">SOFTWARE.</highlight></codeline>
<codeline lineno="2621"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"></highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2624"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdio.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../include/fort.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;vector.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;string_buffer.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;table.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;row.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;properties.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*<ref refid="fort_8c_1af73fc78695a3009f5ff79a2c0d28c600" kindref="member">ft_create_table</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="2640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*result<sp/>=<sp/>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structft__table" kindref="compound">ft_table_t</ref>));</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref><sp/>=<sp/><ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*),<sp/><ref refid="fort_8c_1ae79893aa9b2a96292bb66404e00eddf1" kindref="member">DEFAULT_VECTOR_CAPACITY</ref>);</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(result);</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref><sp/>=<sp/><ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*),<sp/><ref refid="fort_8c_1ae79893aa9b2a96292bb66404e00eddf1" kindref="member">DEFAULT_VECTOR_CAPACITY</ref>);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(result-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(result);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>=<sp/><ref refid="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" kindref="member">create_table_properties</ref>();</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(result-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>);</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(result-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(result);</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2668"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31" kindref="member">ft_destroy_table</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="2672"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_n<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>row_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(<ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>i,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_n<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>);</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>row_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a9a6706bef6f7dae20f91a49113fc2165" kindref="member">destroy_separator</ref>(<ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>i,<sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*));</highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a375c0af4b424ea5ae6bada04698665d5" kindref="member">destroy_table_properties</ref>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>);</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref>);</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(table);</highlight></codeline>
<codeline lineno="2695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*<ref refid="fort_8c_1a8470bf5021f5546b8961bd92cadffe6f" kindref="member">ft_copy_table</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="2698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*result<sp/>=<sp/><ref refid="fort_8c_1af73fc78695a3009f5ff79a2c0d28c600" kindref="member">ft_create_table</ref>();</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows_n<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>i,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*new_row<sp/>=<sp/><ref refid="fort_8c_1a3a01711036a669b10b641d6179f72610" kindref="member">copy_row</ref>(row);</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_row<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31" kindref="member">ft_destroy_table</ref>(result);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(result-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>&amp;new_row);</highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sep_sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>);</highlight></codeline>
<codeline lineno="2719"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sep_sz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>i,<sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*new_sep<sp/>=<sp/><ref refid="fort_8c_1af3cff45d0b6bbd125b6119cfec729ed6" kindref="member">copy_separator</ref>(sep);</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_sep<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31" kindref="member">ft_destroy_table</ref>(result);</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(result-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>&amp;new_sep);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>by<sp/>default<sp/>new<sp/>table<sp/>has<sp/>allocated<sp/>default<sp/>properties,<sp/>so<sp/>we</highlight></codeline>
<codeline lineno="2730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>have<sp/>to<sp/>destroy<sp/>them<sp/>first.</highlight></codeline>
<codeline lineno="2731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a375c0af4b424ea5ae6bada04698665d5" kindref="member">destroy_table_properties</ref>(result-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>);</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>=<sp/><ref refid="fort_8c_1a60b1666a1271172355ced7927d5f5eff" kindref="member">copy_table_properties</ref>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>);</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ad8cb9ed46da7455f8b6baed42a4a1d31" kindref="member">ft_destroy_table</ref>(result);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2740"><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>copy<sp/>conv_buffer<sp/><sp/>??<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref><sp/>=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref><sp/>=<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>;</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>split_cur_row(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>**tail_of_cur_row)</highlight></codeline>
<codeline lineno="2749"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref><sp/>&gt;=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail_of_cur_row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2754"><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref><sp/>&gt;=<sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(row))<sp/>{</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail_of_cur_row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*tail<sp/>=<sp/><ref refid="fort_8c_1a234cff841d6e8bffc9955dd06d334420" kindref="member">split_row</ref>(row,<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tail)<sp/>{</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tail_of_cur_row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/><sp/>*tail_of_cur_row<sp/>=<sp/>tail;</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="2769"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="2772"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/>*table_props<sp/>=<sp/>&amp;table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>;</highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(table_props-&gt;<ref refid="structfort__entire__table__properties_1a18b0b5e9a876a787e08d7f630d52152d" kindref="member">add_strategy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5acc1102bce0611e414231a7e41357300f" kindref="member">FT_STRATEGY_INSERT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*new_row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(split_cur_row(table,<sp/>&amp;new_row)))<sp/>{</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_row)<sp/>{</highlight></codeline>
<codeline lineno="2782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829" kindref="member">vector_insert</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>&amp;new_row,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref><sp/>+<sp/>1)))<sp/>{</highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(new_row);</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842" kindref="member">FT_STRATEGY_REPLACE</ref>:</highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>do<sp/>nothing</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>situation<sp/>inside<sp/>libfort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>++;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a71a30e02111b90af7babd37d13f3e4ee" kindref="member">ft_cur_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="2802"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="2805"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a4f3f1b331ee3637e3c8345ecb1b4ebd6" kindref="member">ft_cur_col</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="2808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>;</highlight></codeline>
<codeline lineno="2811"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a6dffc742cbce46e492cd3298de467b16" kindref="member">ft_set_cur_cell</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="2814"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref><sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref><sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="2818"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2819"><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a6791222986d387c26d905691c30e095b" kindref="member">ft_is_empty</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="2821"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa7e5d0d485d6c519198a5fe9eb706eba" kindref="member">ft_row_count</ref>(table)<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="2824"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight></codeline>
<codeline lineno="2826"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa7e5d0d485d6c519198a5fe9eb706eba" kindref="member">ft_row_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="2827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table<sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2830"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a53eb304387cf4e99f0198f780bc75dc8" kindref="member">ft_erase_range</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>top_left_row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>top_left_col,</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bottom_right_row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>bottom_right_col)</highlight></codeline>
<codeline lineno="2835"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table<sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows_n<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_left_row<sp/>==<sp/><ref refid="fort_8h_1a7b2a188460e60fa72f0182fc3d03c5e6" kindref="member">FT_CUR_ROW</ref>)</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_left_row<sp/>=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom_right_row<sp/>==<sp/><ref refid="fort_8h_1a7b2a188460e60fa72f0182fc3d03c5e6" kindref="member">FT_CUR_ROW</ref>)</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_right_row<sp/>=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_left_col<sp/>==<sp/><ref refid="fort_8h_1a460dec76b33f388a239206692141f6dd" kindref="member">FT_CUR_COLUMN</ref>)</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_left_col<sp/>=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bottom_right_col<sp/>==<sp/><ref refid="fort_8h_1a460dec76b33f388a239206692141f6dd" kindref="member">FT_CUR_COLUMN</ref>)</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_right_col<sp/>=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_left_row<sp/>&gt;<sp/>bottom_right_row<sp/>||<sp/>top_left_col<sp/>&gt;<sp/>bottom_right_col)</highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad0ec3314d73a84b1edb194b9c72a8c21" kindref="member">FT_EINVAL</ref>;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>top_left_row;</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>rows_n<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>bottom_right_row)<sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>i,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1aeb4ff36967a8e872f3d315e60d2bc4f9" kindref="member">ft_row_erase_range</ref>(row,<sp/>top_left_col,<sp/>bottom_right_col);</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*separator<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_iterations<sp/>=<sp/><ref refid="fort_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(rows_n<sp/>-<sp/>1,<sp/>bottom_right_row)<sp/>-<sp/>top_left_row<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/>i<sp/>=<sp/>top_left_row;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>n_iterations;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>i,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(row))<sp/>{</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(row);</highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1ae1d70435626d59e4d41971e22fa90fec" kindref="member">vector_erase</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>))<sp/>{</highlight></codeline>
<codeline lineno="2879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separator<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>i,<sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a9a6706bef6f7dae20f91a49113fc2165" kindref="member">destroy_separator</ref>(separator);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ae1d70435626d59e4d41971e22fa90fec" kindref="member">vector_erase</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>i);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2885"><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="2887"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ft_row_printf_impl_(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>*fmt,<sp/>va_list<sp/>*va)</highlight></codeline>
<codeline lineno="2891"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_cols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*new_row<sp/>=<sp/><ref refid="fort_8c_1a6bf142ab10b212be6fb4214805b98945" kindref="member">create_row_from_fmt_string</ref>(fmt,<sp/>va);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_row<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>**cur_row_p<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&gt;=<sp/>sz)<sp/>{</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>push_n<sp/>=<sp/>row<sp/>-<sp/>sz<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>push_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*padding_row<sp/>=<sp/><ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>();</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(padding_row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>&amp;padding_row)))<sp/>{</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(padding_row);</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>clearing<sp/>pushed<sp/>items<sp/>in<sp/>case<sp/>of<sp/>error<sp/>??<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/>new_cols<sp/>=<sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(new_row);</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_row_p<sp/>=<sp/>&amp;<ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>row,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>.<ref refid="structfort__entire__table__properties_1a18b0b5e9a876a787e08d7f630d52152d" kindref="member">add_strategy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5acc1102bce0611e414231a7e41357300f" kindref="member">FT_STRATEGY_INSERT</ref>:<sp/>{</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a651c99d3ef016298fb72557264c415bf" kindref="member">insert_row</ref>(*cur_row_p,<sp/>new_row,<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>)))</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842" kindref="member">FT_STRATEGY_REPLACE</ref>:<sp/>{</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1ae67f055e422299c4821b1a00d5bfeb6d" kindref="member">swap_row</ref>(*cur_row_p,<sp/>new_row,<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>)))</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>situation<sp/>inside<sp/>libfort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref><sp/>+=<sp/>new_cols;</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(new_row);</highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)new_cols;</highlight></codeline>
<codeline lineno="2943"><highlight class="normal"></highlight></codeline>
<codeline lineno="2944"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(new_row);</highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="2947"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_CLANG_COMPILER)<sp/>||<sp/>defined(FT_GCC_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PRINTF<sp/>ft_printf</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PRINTF_LN<sp/>ft_printf_ln</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PRINTF<sp/>ft_printf_impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_PRINTF_LN<sp/>ft_printf_ln_impl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight></codeline>
<codeline lineno="2958"><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1c5df369af358a17b90f4b5022121a4c" kindref="member">FT_PRINTF</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="2960"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>fmt);</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>fmt_str;</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.u.cstr<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ft_row_printf_impl_(table,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>,<sp/>&amp;fmt_str,<sp/>&amp;va);</highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2972"><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a50fa22fc7abbe64934bf11438e7c25e6" kindref="member">FT_PRINTF_LN</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="2974"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>fmt);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>fmt_str;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.u.cstr<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ft_row_printf_impl_(table,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>,<sp/>&amp;fmt_str,<sp/>&amp;va);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="2988"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"></highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>FT_PRINTF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2991"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>FT_PRINTF_LN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a93dacf69774a8a84fecee3035ad7650e" kindref="member">ft_wprintf</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="2995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>fmt);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>fmt_str;</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.u.wstr<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ft_row_printf_impl_(table,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>,<sp/>&amp;fmt_str,<sp/>&amp;va);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3006"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a756d50513a7dbf57d2e7144802dd23f4" kindref="member">ft_wprintf_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="3009"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>fmt);</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>fmt_str;</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.u.wstr<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ft_row_printf_impl_(table,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>,<sp/>&amp;fmt_str,<sp/>&amp;va);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a08dbade99a0cfc34c549f7ee29a60fe4" kindref="member">ft_set_default_printf_field_separator</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>separator)</highlight></codeline>
<codeline lineno="3028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref><sp/>=<sp/>separator;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ft_write_impl_(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__view" kindref="compound">f_string_view_t</ref><sp/>*cell_content)</highlight></codeline>
<codeline lineno="3033"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buf<sp/>=<sp/><ref refid="fort_8c_1a6855260f3c1d1da0696e5d1e652bc4ef" kindref="member">get_cur_str_buffer_and_create_if_not_exists</ref>(table);</highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buf<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="3038"><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cell_content-&gt;<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a97269d36ab50d310bd99d9949d14489e" kindref="member">fill_buffer_from_string</ref>(buf,<sp/>cell_content-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa44363a2ad0a535a64170738a2d6e58d" kindref="member">cstr</ref>);</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9" kindref="member">fill_buffer_from_wstring</ref>(buf,<sp/>cell_content-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1a0a19a0e48972c54f8faf0b433d5849dc" kindref="member">wstr</ref>);</highlight></codeline>
<codeline lineno="3047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a026f474e0d6b4c90c792a8833dde496c" kindref="member">fill_buffer_from_u8string</ref>(buf,<sp/>cell_content-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa9aef96a02d5687b18447086ae54dcbd" kindref="member">u8str</ref>);</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482" kindref="member">FT_IS_SUCCESS</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>++;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3061"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ft_write_impl(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cell_content)</highlight></codeline>
<codeline lineno="3064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__view" kindref="compound">f_string_view_t</ref><sp/>content;</highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><sp/>content.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>content.<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa44363a2ad0a535a64170738a2d6e58d" kindref="member">cstr</ref><sp/>=<sp/>cell_content;</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ft_write_impl_(table,<sp/>&amp;content);</highlight></codeline>
<codeline lineno="3069"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3070"><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ft_u8write_impl(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cell_content)</highlight></codeline>
<codeline lineno="3073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__view" kindref="compound">f_string_view_t</ref><sp/>content;</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/>content.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/>content.<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa9aef96a02d5687b18447086ae54dcbd" kindref="member">u8str</ref><sp/>=<sp/>cell_content;</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ft_write_impl_(table,<sp/>&amp;content);</highlight></codeline>
<codeline lineno="3078"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3079"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ft_wwrite_impl(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cell_content)</highlight></codeline>
<codeline lineno="3083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__view" kindref="compound">f_string_view_t</ref><sp/>content;</highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/><sp/>content.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/><sp/>content.<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1a0a19a0e48972c54f8faf0b433d5849dc" kindref="member">wstr</ref><sp/>=<sp/>cell_content;</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ft_write_impl_(table,<sp/>&amp;content);</highlight></codeline>
<codeline lineno="3088"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"></highlight></codeline>
<codeline lineno="3091"><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a69052e887e05d6dc3a0891550127619b" kindref="member">ft_nwrite</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cell_content,<sp/>...)</highlight></codeline>
<codeline lineno="3093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_write_impl(table,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/><sp/>--count;</highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cell<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ft_write_impl(table,<sp/>cell);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3114"><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a09342b73950f97c0e73bbed2df40b48a" kindref="member">ft_nwrite_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cell_content,<sp/>...)</highlight></codeline>
<codeline lineno="3116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_write_impl(table,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"><sp/><sp/><sp/><sp/>--count;</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>count;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cell<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ft_write_impl(table,<sp/>cell);</highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3135"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3139"><highlight class="normal"></highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight></codeline>
<codeline lineno="3141"><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac28f7840d0a323ca3c4df1e6f43bdf6" kindref="member">ft_nwwrite</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cell_content,<sp/>...)</highlight></codeline>
<codeline lineno="3146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_wwrite_impl(table,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cell<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ft_wwrite_impl(table,<sp/>cell);</highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3166"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3167"><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a313b73c39aa6127200cd7b7fee92d8f0" kindref="member">ft_nwwrite_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cell_content,<sp/>...)</highlight></codeline>
<codeline lineno="3169"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_wwrite_impl(table,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cell<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ft_wwrite_impl(table,<sp/>cell);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3191"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3192"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a53cf32548aedb54757ca598703db688c" kindref="member">ft_row_write</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cells[])</highlight></codeline>
<codeline lineno="3196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_write_impl(table,<sp/>cells[i]);</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>maybe<sp/>current<sp/>pos<sp/>in<sp/>case<sp/>of<sp/>error<sp/>should<sp/>be<sp/>equal<sp/>to<sp/>the<sp/>one<sp/>before<sp/>function<sp/>call?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a49f9c909317adb1f49c0f2af1e67afeb" kindref="member">ft_row_write_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cells[])</highlight></codeline>
<codeline lineno="3210"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a53cf32548aedb54757ca598703db688c" kindref="member">ft_row_write</ref>(table,<sp/>cols,<sp/>cells);</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482" kindref="member">FT_IS_SUCCESS</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3217"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a16ce443f98156fd69c251c8dab9fb7ba" kindref="member">ft_row_wwrite</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cells[])</highlight></codeline>
<codeline lineno="3221"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_wwrite_impl(table,<sp/>cells[i]);</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>maybe<sp/>current<sp/>pos<sp/>in<sp/>case<sp/>of<sp/>error<sp/>should<sp/>be<sp/>equal</highlight></codeline>
<codeline lineno="3228"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>one<sp/>before<sp/>function<sp/>call?</highlight></codeline>
<codeline lineno="3229"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3235"><highlight class="normal"></highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1abff22c6be328391a9e72e25bf0cf4d3c" kindref="member">ft_row_wwrite_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*cells[])</highlight></codeline>
<codeline lineno="3237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a16ce443f98156fd69c251c8dab9fb7ba" kindref="member">ft_row_wwrite</ref>(table,<sp/>cols,<sp/>cells);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482" kindref="member">FT_IS_SUCCESS</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac026a41e784483319aa4c7c89a9dfe06" kindref="member">ft_table_write</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*table_cells[])</highlight></codeline>
<codeline lineno="3250"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a53cf32548aedb54757ca598703db688c" kindref="member">ft_row_write</ref>(table,<sp/>cols,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)&amp;table_cells[i<sp/>*<sp/>cols]);</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>maybe<sp/>current<sp/>pos<sp/>in<sp/>case<sp/>of<sp/>error<sp/>should<sp/>be<sp/>equal</highlight></codeline>
<codeline lineno="3257"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>one<sp/>before<sp/>function<sp/>call?</highlight></codeline>
<codeline lineno="3258"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>rows<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3265"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ad9219b581d29cb079847b0bfd6911271" kindref="member">ft_table_write_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*table_cells[])</highlight></codeline>
<codeline lineno="3268"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1ac026a41e784483319aa4c7c89a9dfe06" kindref="member">ft_table_write</ref>(table,<sp/>rows,<sp/>cols,<sp/>table_cells);</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482" kindref="member">FT_IS_SUCCESS</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3276"><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1adb37fd79298ef7f28d9304f3aa135f08" kindref="member">ft_table_wwrite</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*table_cells[])</highlight></codeline>
<codeline lineno="3280"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a16ce443f98156fd69c251c8dab9fb7ba" kindref="member">ft_row_wwrite</ref>(table,<sp/>cols,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**)&amp;table_cells[i<sp/>*<sp/>cols]);</highlight></codeline>
<codeline lineno="3285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>maybe<sp/>current<sp/>pos<sp/>in<sp/>case<sp/>of<sp/>error<sp/>should<sp/>be<sp/>equal</highlight></codeline>
<codeline lineno="3287"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>to<sp/>the<sp/>one<sp/>before<sp/>function<sp/>call?</highlight></codeline>
<codeline lineno="3288"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>rows<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3295"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3296"><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac2c4cd5246efb7d713cc0ccd5dad49cf" kindref="member">ft_table_wwrite_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*table_cells[])</highlight></codeline>
<codeline lineno="3298"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1adb37fd79298ef7f28d9304f3aa135f08" kindref="member">ft_table_wwrite</ref>(table,<sp/>rows,<sp/>cols,<sp/>table_cells);</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482" kindref="member">FT_IS_SUCCESS</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3305"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*empty_str_arr[]<sp/>=<sp/>{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">};</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ft_to_string_impl(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref><sp/>b_type)</highlight></codeline>
<codeline lineno="3313"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3314"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Determine<sp/>size<sp/>of<sp/>table<sp/>string<sp/>representation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cod_height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cod_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1ae8047e766a703ad17a2dcc58645eb4df" kindref="member">table_internal_codepoints_geometry</ref>(table,<sp/>&amp;cod_height,<sp/>&amp;cod_width);</highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_codepoints<sp/>=<sp/>cod_height<sp/>*<sp/>cod_width<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Allocate<sp/>string<sp/>buffer<sp/>for<sp/>string<sp/>representation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*)table)-&gt;conv_buffer<sp/>=<sp/><ref refid="fort_8c_1ac940e33b846028d55c174b9f7a2164f5" kindref="member">create_string_buffer</ref>(n_codepoints,<sp/>b_type);</highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1acc99fa5ecb3035540808fb06ad4fa4e8" kindref="member">string_buffer_cod_width_capacity</ref>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref>)<sp/>&lt;<sp/>n_codepoints)<sp/>{</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a97de898073d1711de1d55369dfc067c7" kindref="member">realloc_string_buffer_without_copy</ref>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fort_8c_1a3d109493b9707163dc60dbe7f413f95a" kindref="member">buffer_check_align</ref>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref>))</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buffer<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1af8c64e48cffecc6fb8e5220a8feff523" kindref="member">buffer_get_data</ref>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref>);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_vis_width_arr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*row_vis_height_arr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1ac6a1014eacf8e41589fe6e7d6ffec493" kindref="member">table_rows_and_cols_geometry</ref>(table,<sp/>&amp;col_vis_width_arr,<sp/>&amp;cols,<sp/>&amp;row_vis_height_arr,<sp/>&amp;rows,<sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027a649c4250d469605327eeddcfb36bf296" kindref="member">VISIBLE_GEOMETRY</ref>);</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rows<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(col_vis_width_arr);</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(row_vis_height_arr);</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>empty_str_arr[b_type];</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>context;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref><sp/>=<sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>?<sp/>table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>:<sp/>&amp;<ref refid="fort_8c_1a7e383842a355b23739ccb9bb081cf543" kindref="member">g_table_properties</ref>);</highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*prev_row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*cur_row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*cur_sep<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sep_size<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>);</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"></highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>cntx;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx.<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx.<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>=<sp/><ref refid="fort_8c_1a66f99ddf13fdabb67f73a0a763307afb" kindref="member">string_buffer_raw_capacity</ref>(table-&gt;<ref refid="structft__table_1ab0cd6ded0a80760b696d73dedf40ed5b" kindref="member">conv_buffer</ref>);</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx.<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref><sp/>=<sp/>&amp;context;</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx.<ref refid="structf__conv__context_1ab7e55cddff5e671c753ca98520c3bab6" kindref="member">b_type</ref><sp/>=<sp/>b_type;</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>top<sp/>margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>context.<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>.<ref refid="structfort__entire__table__properties_1aae43b762bb8a8ee14752f7a1056f85de" kindref="member">top_margin</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a784abddef87cd2430529e032c3d8213e" kindref="member">FT_CHECK</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(&amp;cntx,<sp/>cod_width<sp/>-<sp/>1</highlight><highlight class="comment">/*<sp/>minus<sp/>new_line*/</highlight><highlight class="normal">,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a784abddef87cd2430529e032c3d8213e" kindref="member">FT_CHECK</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(&amp;cntx,<sp/>1,<sp/><ref refid="fort_8c_1a0474dfa1c9848f892832d4babf0e3cd8" kindref="member">FT_NEWLINE</ref>));</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_sep<sp/>=<sp/>(i<sp/>&lt;<sp/>sep_size)<sp/>?<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>i,<sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_row<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>i,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5" kindref="member">f_hor_separator_pos</ref><sp/>separatorPos<sp/>=<sp/>(i<sp/>==<sp/>0)<sp/>?<sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a20da53267127001ec3320abe91fa783e" kindref="member">TOP_SEPARATOR</ref><sp/>:<sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a23c6c5d09adaa5a3c4176c0b67263769" kindref="member">INSIDE_SEPARATOR</ref>;</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a784abddef87cd2430529e032c3d8213e" kindref="member">FT_CHECK</ref>(<ref refid="fort_8c_1a76b7a5fc469d3f72bedcefc8f97a8e58" kindref="member">print_row_separator</ref>(&amp;cntx,<sp/>col_vis_width_arr,<sp/>cols,<sp/>prev_row,<sp/>cur_row,<sp/>separatorPos,<sp/>cur_sep));</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a784abddef87cd2430529e032c3d8213e" kindref="member">FT_CHECK</ref>(<ref refid="fort_8c_1ac95471ef7b950b73451dc4aaf3a0e6f3" kindref="member">snprintf_row</ref>(cur_row,<sp/>&amp;cntx,<sp/>col_vis_width_arr,<sp/>cols,<sp/>row_vis_height_arr[i]));</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>prev_row<sp/>=<sp/>cur_row;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_row<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_sep<sp/>=<sp/>(i<sp/>&lt;<sp/>sep_size)<sp/>?<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>i,<sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref><sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a784abddef87cd2430529e032c3d8213e" kindref="member">FT_CHECK</ref>(<ref refid="fort_8c_1a76b7a5fc469d3f72bedcefc8f97a8e58" kindref="member">print_row_separator</ref>(&amp;cntx,<sp/>col_vis_width_arr,<sp/>cols,<sp/>prev_row,<sp/>cur_row,<sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a84ba29422768fd8057cd7d8f3239e59c" kindref="member">BOTTOM_SEPARATOR</ref>,<sp/>cur_sep));</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>bottom<sp/>margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>context.<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>.<ref refid="structfort__entire__table__properties_1aa80ec529af79ff50c442c24c505f512a" kindref="member">bottom_margin</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a784abddef87cd2430529e032c3d8213e" kindref="member">FT_CHECK</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(&amp;cntx,<sp/>cod_width<sp/>-<sp/>1</highlight><highlight class="comment">/*<sp/>minus<sp/>new_line*/</highlight><highlight class="normal">,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a784abddef87cd2430529e032c3d8213e" kindref="member">FT_CHECK</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(&amp;cntx,<sp/>1,<sp/><ref refid="fort_8c_1a0474dfa1c9848f892832d4babf0e3cd8" kindref="member">FT_NEWLINE</ref>));</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/>result<sp/>=<sp/>buffer;</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(col_vis_width_arr);</highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(row_vis_height_arr);</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1aba499778dc3afcddfed50e79b0d97832" kindref="member">ft_to_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="3406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)ft_to_string_impl(table,<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>);</highlight></codeline>
<codeline lineno="3408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1aac166e469337bc82fb4cc796a6e6b569" kindref="member">ft_to_wstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="3412"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*)ft_to_string_impl(table,<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>);</highlight></codeline>
<codeline lineno="3414"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3416"><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a22fc0b6196d1a9a398785e23673eeeb0" kindref="member">ft_add_separator</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="3419"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>)<sp/>&lt;=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep_p<sp/>=<sp/><ref refid="fort_8c_1a61340feda1ea158db1bd1da1671751ad" kindref="member">create_separator</ref>(<ref refid="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a7d1c5eb5c19fe2c534aa6fb6605927e4" kindref="member">F_FALSE</ref>);</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sep_p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>&amp;sep_p);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>**sep_p<sp/>=<sp/>&amp;<ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1ad22ec40b82a63a9e3e7971b136b721ba" kindref="member">separators</ref>,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>,<sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*sep_p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*sep_p<sp/>=<sp/><ref refid="fort_8c_1a61340feda1ea158db1bd1da1671751ad" kindref="member">create_separator</ref>(<ref refid="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a42654a58e5b0bffec1ba32aef39af469" kindref="member">F_TRUE</ref>);</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*sep_p)-&gt;enabled<sp/>=<sp/><ref refid="fort_8c_1a3a5f9e82f8a707db8996a502b0ca0f85a42654a58e5b0bffec1ba32aef39af469" kindref="member">F_TRUE</ref>;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(*sep_p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/>*built_in_styles[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1a1551acd214a753796743eb0272395869" kindref="member">FORT_BASIC_STYLE</ref>,</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1a18048056d8d37f0485dfc4480266b407" kindref="member">FORT_BASIC2_STYLE</ref>,</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1ac35b24f98659298aafaac4f782b35908" kindref="member">FORT_SIMPLE_STYLE</ref>,</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1afa51b0acbd3c7ce38f236fbd8accd283" kindref="member">FORT_PLAIN_STYLE</ref>,</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1ab5cfb34391ceae55c3adc0b856e2d3d1" kindref="member">FORT_DOT_STYLE</ref>,</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1a58948e002a53e826043f3f1fd0efa626" kindref="member">FORT_EMPTY_STYLE</ref>,</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1acd0057b56b50d3772d93a58a345f8498" kindref="member">FORT_EMPTY2_STYLE</ref>,</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1ab60c22c456490dc1c2b2581206aade7f" kindref="member">FORT_SOLID_STYLE</ref>,</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1afaadc6fcd0ea52e9bea97f198623dd34" kindref="member">FORT_SOLID_ROUND_STYLE</ref>,</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1ad07ecf56923564f20f54de569baa4c31" kindref="member">FORT_NICE_STYLE</ref>,</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1a8bea0c4f43e34eccd50a38cf7cf275d9" kindref="member">FORT_DOUBLE_STYLE</ref>,</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1ad7b86e58f7e8a1871d31e9d36e1afe8e" kindref="member">FORT_DOUBLE2_STYLE</ref>,</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1adce884980314dc4c5f6b5d19b6c9f0ae" kindref="member">FORT_BOLD_STYLE</ref>,</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1a2e98d54b72c590832a3d252dd43f68e7" kindref="member">FORT_BOLD2_STYLE</ref>,</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/><sp/>&amp;<ref refid="fort_8c_1a1ee29f5ac5af7b2100ca44d999f65493" kindref="member">FORT_FRAME_STYLE</ref>,</highlight></codeline>
<codeline lineno="3459"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BUILT_IN_STYLES_SZ<sp/>(sizeof(built_in_styles)<sp/>/<sp/>sizeof(built_in_styles[0]))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>todo:<sp/>remove<sp/>this<sp/>stupid<sp/>and<sp/>dangerous<sp/>code<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>built_in_external_styles[<ref refid="fort_8c_1ab179ba6d458ef3bf6a3b23232a4ae582" kindref="member">BUILT_IN_STYLES_SZ</ref>]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">},</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3469"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a4566853be8c0cdf91ba9c3f50eb426d4" kindref="member">FT_BASIC_STYLE</ref><sp/>=<sp/>&amp;built_in_external_styles[0];</highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab3ed5c4f1c4f7ca26b52b668fd4717f9" kindref="member">FT_BASIC2_STYLE</ref><sp/>=<sp/>&amp;built_in_external_styles[1];</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a7581c1fec7b7c2b88f93e3445c62424d" kindref="member">FT_SIMPLE_STYLE</ref><sp/>=<sp/>&amp;built_in_external_styles[2];</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1add469a34d262e6368adaa636d1cf76b7" kindref="member">FT_PLAIN_STYLE</ref><sp/>=<sp/>&amp;built_in_external_styles[3];</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a148f3f2c872531fdeca8e4ace60eb258" kindref="member">FT_DOT_STYLE</ref><sp/>=<sp/>&amp;built_in_external_styles[4];</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa8916e07fa9a8d1f24c1e1d1e6b68838" kindref="member">FT_EMPTY_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[5];</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a357302cc732e53c1c7049842fc0fc3c7" kindref="member">FT_EMPTY2_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[6];</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae4723d497ac2e6980b43ac7732e21f2d" kindref="member">FT_SOLID_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[7];</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aedcc877521b55c87758949920ef0ee96" kindref="member">FT_SOLID_ROUND_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[8];</highlight></codeline>
<codeline lineno="3480"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a91de4cab0e239a201fa2a7dc961b2fdc" kindref="member">FT_NICE_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[9];</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ad0e15260ea4a4c66f0bfa2c82b889107" kindref="member">FT_DOUBLE_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[10];</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a23314491db1204b8654f8cd610692260" kindref="member">FT_DOUBLE2_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[11];</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af392ad3ae759382d95921e1efb652744" kindref="member">FT_BOLD_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[12];</highlight></codeline>
<codeline lineno="3484"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a7b82fd38c92a289fc641d3666684bcd4" kindref="member">FT_BOLD2_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[13];</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aef91486de193b4dfe511a992f9b02bb9" kindref="member">FT_FRAME_STYLE</ref><sp/><sp/>=<sp/>&amp;built_in_external_styles[14];</highlight></codeline>
<codeline lineno="3486"><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set_border_props_for_props(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*style)</highlight></codeline>
<codeline lineno="3488"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(style<sp/>&gt;=<sp/>built_in_external_styles<sp/>&amp;&amp;<sp/>style<sp/>&lt;<sp/>(built_in_external_styles<sp/>+<sp/><ref refid="fort_8c_1ab179ba6d458ef3bf6a3b23232a4ae582" kindref="member">BUILT_IN_STYLES_SZ</ref>))<sp/>{</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos<sp/>=<sp/>(size_t)(style<sp/>-<sp/>built_in_external_styles);</highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;(properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>),<sp/>built_in_styles[pos],<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref>));</highlight></codeline>
<codeline lineno="3492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__chars" kindref="compound">ft_border_chars</ref><sp/>*border_chs<sp/>=<sp/>&amp;(style-&gt;<ref refid="structft__border__style_1aa852ca2701f51131c00cda4835c83a9b" kindref="member">border_chs</ref>);</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structft__border__chars" kindref="compound">ft_border_chars</ref><sp/>*header_border_chs<sp/>=<sp/>&amp;(style-&gt;<ref refid="structft__border__style_1ac036a7ad3b97a4b829fe0406302197f8" kindref="member">header_border_chs</ref>);</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOR_CHARS<sp/>properties-&gt;border_style.border_chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>H_BOR_CHARS<sp/>properties-&gt;border_style.header_border_chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SEP_CHARS<sp/>properties-&gt;border_style.separator_chars</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4" kindref="member">TT_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1ab7b5f8993a642dc2fdd0d8def9789502" kindref="member">top_border_ch</ref>;</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445" kindref="member">IH_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1af018595a39f8cfd750f2364ac7a20c5d" kindref="member">separator_ch</ref>;</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472" kindref="member">BB_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1aff7c70245cdbc36c6c1af8da5cd95333" kindref="member">bottom_border_ch</ref>;</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a889a1c24be63ae17b128192d9dec2d3a" kindref="member">LL_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29aad183d45427b545df2fd25ed9ecccc8c" kindref="member">IV_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a062e9c55d54121d574a4b8f244c2d964" kindref="member">RR_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1a17783add57d7bca171967cac3dcb0f20" kindref="member">side_border_ch</ref>;</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08" kindref="member">TL_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b" kindref="member">TV_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac" kindref="member">TR_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056" kindref="member">LH_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5" kindref="member">RH_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6" kindref="member">BL_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517" kindref="member">BV_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677" kindref="member">BR_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1496ce55ebf0dc1c90c6f8abd60ea272" kindref="member">II_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1a36d990167b38a72aa0c3dcdd9bd8472c" kindref="member">in_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a6e524723eac5b695737b627d74ac77fb" kindref="member">LI_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a9c128d27d24141f9c2df703a42521835" kindref="member">TI_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a0841d0344e52968b3d6dd1bfee6f98d2" kindref="member">RI_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a46945f957ff717cbf501e5a59d0f8e1d" kindref="member">BI_bip</ref>]<sp/>=<sp/>border_chs-&gt;<ref refid="structft__border__chars_1a36d990167b38a72aa0c3dcdd9bd8472c" kindref="member">in_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(border_chs-&gt;<ref refid="structft__border__chars_1af018595a39f8cfd750f2364ac7a20c5d" kindref="member">separator_ch</ref>)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>strlen(border_chs-&gt;<ref refid="structft__border__chars_1a36d990167b38a72aa0c3dcdd9bd8472c" kindref="member">in_intersect_ch</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056" kindref="member">LH_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5" kindref="member">RH_bip</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4" kindref="member">TT_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1ab7b5f8993a642dc2fdd0d8def9789502" kindref="member">top_border_ch</ref>;</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445" kindref="member">IH_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1af018595a39f8cfd750f2364ac7a20c5d" kindref="member">separator_ch</ref>;</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472" kindref="member">BB_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1aff7c70245cdbc36c6c1af8da5cd95333" kindref="member">bottom_border_ch</ref>;</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a889a1c24be63ae17b128192d9dec2d3a" kindref="member">LL_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29aad183d45427b545df2fd25ed9ecccc8c" kindref="member">IV_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a062e9c55d54121d574a4b8f244c2d964" kindref="member">RR_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a17783add57d7bca171967cac3dcb0f20" kindref="member">side_border_ch</ref>;</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08" kindref="member">TL_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b" kindref="member">TV_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac" kindref="member">TR_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056" kindref="member">LH_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5" kindref="member">RH_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6" kindref="member">BL_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517" kindref="member">BV_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677" kindref="member">BR_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1496ce55ebf0dc1c90c6f8abd60ea272" kindref="member">II_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a36d990167b38a72aa0c3dcdd9bd8472c" kindref="member">in_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a6e524723eac5b695737b627d74ac77fb" kindref="member">LI_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a9c128d27d24141f9c2df703a42521835" kindref="member">TI_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a0841d0344e52968b3d6dd1bfee6f98d2" kindref="member">RI_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a87b95d888583f9c786462fd44b9b3ab5" kindref="member">H_BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a46945f957ff717cbf501e5a59d0f8e1d" kindref="member">BI_bip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a36d990167b38a72aa0c3dcdd9bd8472c" kindref="member">in_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(strlen(header_border_chs-&gt;<ref refid="structft__border__chars_1af018595a39f8cfd750f2364ac7a20c5d" kindref="member">separator_ch</ref>)<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>strlen(header_border_chs-&gt;<ref refid="structft__border__chars_1a36d990167b38a72aa0c3dcdd9bd8472c" kindref="member">in_intersect_ch</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056" kindref="member">LH_bip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a4f856f14430626c4aad7bbe5c5d9ff01" kindref="member">BOR_CHARS</ref>[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5" kindref="member">RH_bip</ref>]<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;\0&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa" kindref="member">SEP_CHARS</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5bdf3707d8c0c144baceb9b432b080b" kindref="member">LH_sip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa" kindref="member">SEP_CHARS</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a9ef36a4ef68f74f53f7153992ac80c2e" kindref="member">RH_sip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa" kindref="member">SEP_CHARS</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35ae795b75c17ff1dc6b1d7a94e0db120e6" kindref="member">II_sip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa" kindref="member">SEP_CHARS</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a4dd526ac15d2f95dda29b58a7969250c" kindref="member">TI_sip</ref>]<sp/>=<sp/><ref refid="fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa" kindref="member">SEP_CHARS</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5c00304dc6ed19e75613b993f3b8510" kindref="member">BI_sip</ref>]<sp/>=<sp/>header_border_chs-&gt;<ref refid="structft__border__chars_1a4eeac7b14fc8f4ac59ef2e3de14264d4" kindref="member">out_intersect_ch</ref>;</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a71c4b4e49c32a083b3e41812e5acb5aa" kindref="member">SEP_CHARS</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a6edb298364e9b2705453e4fd3d764894" kindref="member">IH_sip</ref>]<sp/>=<sp/>style-&gt;<ref refid="structft__border__style_1a977dc73ea3a9d76cf2d3599bb94ff111" kindref="member">hor_separator_char</ref>;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>BOR_CHARS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>H_BOR_CHARS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>SEP_CHARS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1addb2484d7bc2a271be60cf743ae8eaeb" kindref="member">ft_set_default_border_style</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*style)</highlight></codeline>
<codeline lineno="3546"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><sp/>set_border_props_for_props(&amp;<ref refid="fort_8c_1a7e383842a355b23739ccb9bb081cf543" kindref="member">g_table_properties</ref>,<sp/>style);</highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3549"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aaa966b7da0ee2e2d2a93dc6a5e1ef81b" kindref="member">ft_set_border_style</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structft__border__style" kindref="compound">ft_border_style</ref><sp/>*style)</highlight></codeline>
<codeline lineno="3552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>=<sp/><ref refid="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" kindref="member">create_table_properties</ref>();</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/><sp/>set_border_props_for_props(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>,<sp/>style);</highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="3561"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a10dc95b3d810a0ab2bf6c90b7b8c66a4" kindref="member">ft_set_cell_prop</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="3566"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3568"><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>=<sp/><ref refid="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" kindref="member">create_table_properties</ref>();</highlight></codeline>
<codeline lineno="3571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>=<sp/><ref refid="fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c" kindref="member">create_cell_prop_container</ref>();</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/><ref refid="fort_8h_1a7b2a188460e60fa72f0182fc3d03c5e6" kindref="member">FT_CUR_ROW</ref>)</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>==<sp/><ref refid="fort_8h_1a460dec76b33f388a239206692141f6dd" kindref="member">FT_CUR_COLUMN</ref>)</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>;</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a59462cfbe20a08d695d7fdea80a53c94" kindref="member">set_cell_property</ref>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref>,<sp/>row,<sp/>col,<sp/>property,<sp/>value);</highlight></codeline>
<codeline lineno="3587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a894497fac87518023122266da59f8da1" kindref="member">ft_set_default_cell_prop</ref>(uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="3590"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a74f59c42e342ef32cba6dda001961f5d" kindref="member">set_default_cell_property</ref>(property,<sp/>value);</highlight></codeline>
<codeline lineno="3592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0ebdf7b17d363037f4b0d48ce1438a6c" kindref="member">ft_set_default_tbl_prop</ref>(uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="3596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a6552ebc09611ccba176d04a5702458a1" kindref="member">set_default_entire_table_property</ref>(property,<sp/>value);</highlight></codeline>
<codeline lineno="3598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac7ff4899d39f21d4cf8948c73bbb1595" kindref="member">ft_set_tbl_prop</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="3601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>=<sp/><ref refid="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" kindref="member">create_table_properties</ref>();</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1cde977c8162b3902a3eece0b649e451" kindref="member">set_entire_table_property</ref>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>,<sp/>property,<sp/>value);</highlight></codeline>
<codeline lineno="3610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3477def0e7247bbccacb0c93530aaee7" kindref="member">ft_set_memory_funcs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*f_malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f_free)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr))</highlight></codeline>
<codeline lineno="3613"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ae131c0f0e6d8da7a4708c7175bf1df10" kindref="member">set_memory_funcs</ref>(f_malloc,<sp/>f_free);</highlight></codeline>
<codeline lineno="3615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a50aacda85487577f3d84b3733134c660" kindref="member">ft_strerror</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>error_code)</highlight></codeline>
<codeline lineno="3618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(error_code)<sp/>{</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>:</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Out<sp/>of<sp/>memory&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>:</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;General<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad0ec3314d73a84b1edb194b9c72a8c21" kindref="member">FT_EINVAL</ref>:</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Invalid<sp/>argument&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a4b7146d6fb5f5349b4f8028601e4e2ff" kindref="member">FT_INTERN_ERROR</ref>:</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Internal<sp/>libfort<sp/>error&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_code<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Unknown<sp/>error<sp/>code&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Success&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae958a4787cc8fee9abb452bbced096f8" kindref="member">ft_set_cell_span</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hor_span)</highlight></codeline>
<codeline lineno="3637"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hor_span<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad0ec3314d73a84b1edb194b9c72a8c21" kindref="member">FT_EINVAL</ref>;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/><ref refid="fort_8h_1a7b2a188460e60fa72f0182fc3d03c5e6" kindref="member">FT_CUR_ROW</ref>)</highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>;</highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/><ref refid="fort_8h_1a460dec76b33f388a239206692141f6dd" kindref="member">FT_CUR_COLUMN</ref>)</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col<sp/>=<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>;</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row_p<sp/>=<sp/><ref refid="fort_8c_1ad4906ec40fada2d7ded7846d4dd0b2bf" kindref="member">get_row_and_create_if_not_exists</ref>(table,<sp/>row);</highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row_p<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="3650"><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a66ea4a81d6bd50cb139417df40d7aba2" kindref="member">row_set_cell_span</ref>(row_p,<sp/>col,<sp/>hor_span);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a61aec826074239282309ce1369563f64" kindref="member">ft_u8nwrite</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cell_content,<sp/>...)</highlight></codeline>
<codeline lineno="3657"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_u8write_impl(table,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cell<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ft_u8write_impl(table,<sp/>cell);</highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a4c378ecb73c881a0793930c76a64ff41" kindref="member">ft_u8nwrite_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cell_content,<sp/>...)</highlight></codeline>
<codeline lineno="3681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>ft_u8write_impl(table,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>cell_content);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cell<sp/>=<sp/>va_arg(va,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>ft_u8write_impl(table,<sp/>cell);</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"></highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><ref refid="fort_8h_1a2c09d90642d39a222d6e4f723e2a93bd" kindref="member">FT_PRINTF_ATTRIBUTE_FORMAT</ref>(2,<sp/>3)</highlight></codeline>
<codeline lineno="3706"><highlight class="normal">int<sp/><ref refid="fort_8c_1ab60bde884315e3378ad43a751d2beba8" kindref="member">ft_u8printf</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="3707"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>fmt);</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>fmt_str;</highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>;</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.u.cstr<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ft_row_printf_impl_(table,<sp/>table-&gt;cur_row,<sp/>&amp;fmt_str,<sp/>&amp;va);</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><ref refid="fort_8h_1a2c09d90642d39a222d6e4f723e2a93bd" kindref="member">FT_PRINTF_ATTRIBUTE_FORMAT</ref>(2,<sp/>3)</highlight></codeline>
<codeline lineno="3721"><highlight class="normal">int<sp/><ref refid="fort_8c_1aba01f77855c39b8ecdd47db944429088" kindref="member">ft_u8printf_ln</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/>const<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt,<sp/>...)</highlight></codeline>
<codeline lineno="3722"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/><sp/>va_start(va,<sp/>fmt);</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>fmt_str;</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>;</highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/>fmt_str.u.cstr<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>ft_row_printf_impl_(table,<sp/>table-&gt;cur_row,<sp/>&amp;fmt_str,<sp/>&amp;va);</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a35af71857b08488797170d7b2a15054a" kindref="member">ft_ln</ref>(table);</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3736"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight></codeline>
<codeline lineno="3738"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a5808261f472f79c8293323a61d10d552" kindref="member">ft_to_u8string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="3739"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)ft_to_string_impl(table,<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>);</highlight></codeline>
<codeline lineno="3741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac19c7bf75bde46f17a954159b27724f4" kindref="member">ft_set_u8strwid_func</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*u8strwid)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width))</highlight></codeline>
<codeline lineno="3744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a0e13f6f3d616f84fa0bd43e23d604034" kindref="member">buffer_set_u8strwid_func</ref>(u8strwid);</highlight></codeline>
<codeline lineno="3746"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3749"><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="3751"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;fort_impl.c&quot;</highlight></codeline>
<codeline lineno="3752"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="3756"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;fort_utils.c&quot;</highlight></codeline>
<codeline lineno="3757"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;utf8.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;string_buffer.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref><sp/>=<sp/><ref refid="fort_8c_1a3abeff93bbe13043e19c4bd8b6dd30df" kindref="member">FORT_DEFAULT_COL_SEPARATOR</ref>;</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight><highlight class="comment">/*****************************************************************************</highlight></codeline>
<codeline lineno="3772"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>LIBFORT<sp/>helpers</highlight></codeline>
<codeline lineno="3773"><highlight class="comment"><sp/>*****************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_GCC_COMPILER)<sp/>||<sp/>defined(FT_CLANG_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>&amp;malloc;</highlight></codeline>
<codeline lineno="3777"><highlight class="normal">void<sp/>(*<ref refid="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" kindref="member">fort_free</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)<sp/>=<sp/>&amp;free;</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_calloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>&amp;calloc;</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_realloc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>&amp;realloc;</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*local_malloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="3782"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>malloc(size);</highlight></codeline>
<codeline lineno="3784"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>local_free(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)</highlight></codeline>
<codeline lineno="3787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><sp/>free(ptr);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*local_calloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="3792"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>calloc(nmemb,<sp/>size);</highlight></codeline>
<codeline lineno="3794"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*local_realloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="3797"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>realloc(ptr,<sp/>size);</highlight></codeline>
<codeline lineno="3799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>&amp;local_malloc;</highlight></codeline>
<codeline lineno="3802"><highlight class="normal">void<sp/>(*<ref refid="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" kindref="member">fort_free</ref>)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr)<sp/>=<sp/>&amp;local_free;</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_calloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>&amp;local_calloc;</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*fort_realloc)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)<sp/>=<sp/>&amp;local_realloc;</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*custom_fort_calloc(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmemb,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="3808"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_size<sp/>=<sp/>nmemb<sp/>*<sp/>size;</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/><ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(total_size);</highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(result,<sp/>0,<sp/>total_size);</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"></highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*custom_fort_realloc(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size)</highlight></codeline>
<codeline lineno="3817"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ptr<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(size);</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(ptr);</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"></highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*new_chunk<sp/>=<sp/><ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(size);</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_chunk<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3830"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>theory<sp/>we<sp/>should<sp/>copy<sp/>MIN(size,<sp/>size<sp/>allocated<sp/>for<sp/>ptr)<sp/>bytes,</highlight></codeline>
<codeline lineno="3831"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>but<sp/>this<sp/>is<sp/>rather<sp/>dummy<sp/>implementation<sp/>so<sp/>we<sp/>don&apos;t<sp/>care<sp/>about<sp/>it</highlight></codeline>
<codeline lineno="3832"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3833"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(new_chunk,<sp/>ptr,<sp/>size);</highlight></codeline>
<codeline lineno="3834"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(ptr);</highlight></codeline>
<codeline lineno="3835"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_chunk;</highlight></codeline>
<codeline lineno="3836"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae131c0f0e6d8da7a4708c7175bf1df10" kindref="member">set_memory_funcs</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*f_malloc)(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size),<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*f_free)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr))</highlight></codeline>
<codeline lineno="3841"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/><sp/>assert((f_malloc<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>f_free<sp/>==<sp/>NULL)<sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>std<sp/>functions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(f_malloc<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>f_free<sp/>!=<sp/>NULL)<sp/></highlight><highlight class="comment">/*<sp/>Use<sp/>custom<sp/>functions<sp/>*/</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(f_malloc<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>f_free<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_GCC_COMPILER)<sp/>||<sp/>defined(FT_CLANG_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a792989ae317c7b690425af8179d88466" kindref="member">fort_malloc</ref><sp/>=<sp/>&amp;malloc;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" kindref="member">fort_free</ref><sp/>=<sp/>&amp;free;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37" kindref="member">fort_calloc</ref><sp/>=<sp/>&amp;calloc;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aac796d096112928799fe930648dc0da4" kindref="member">fort_realloc</ref><sp/>=<sp/>&amp;realloc;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a792989ae317c7b690425af8179d88466" kindref="member">fort_malloc</ref><sp/>=<sp/>&amp;local_malloc;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" kindref="member">fort_free</ref><sp/>=<sp/>&amp;local_free;</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37" kindref="member">fort_calloc</ref><sp/>=<sp/>&amp;local_calloc;</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aac796d096112928799fe930648dc0da4" kindref="member">fort_realloc</ref><sp/>=<sp/>&amp;local_realloc;</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a792989ae317c7b690425af8179d88466" kindref="member">fort_malloc</ref><sp/>=<sp/>f_malloc;</highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a2a6d016d7f881874b0a6212d08514f5b" kindref="member">fort_free</ref><sp/>=<sp/>f_free;</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab2604d3e25cf16a7e668feb1fc0e7b37" kindref="member">fort_calloc</ref><sp/>=<sp/>&amp;custom_fort_calloc;</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aac796d096112928799fe930648dc0da4" kindref="member">fort_realloc</ref><sp/>=<sp/>&amp;custom_fort_realloc;</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3865"><highlight class="normal"></highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1ac8f846ccc1871712ed5d17b25dfbff5c" kindref="member">fort_strdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="3868"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3871"><highlight class="normal"></highlight></codeline>
<codeline lineno="3872"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>strlen(str);</highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_copy<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>((sz<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char));</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/>strcpy(str_copy,<sp/>str);</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str_copy;</highlight></codeline>
<codeline lineno="3879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_WCHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1afbb101e4e75dbefa32076dc1f8a07762" kindref="member">fort_wcsdup</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="3884"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>wcslen(str);</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str_copy<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>((sz<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t));</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/>wcscpy(str_copy,<sp/>str);</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str_copy;</highlight></codeline>
<codeline lineno="3895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns_number_in_fmt_string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fmt)</highlight></codeline>
<codeline lineno="3901"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>separator_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pos<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>strchr(pos,<sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref>);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separator_counter++;</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>separator_counter<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3913"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_WCHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns_number_in_fmt_wstring(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*fmt)</highlight></codeline>
<codeline lineno="3918"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>separator_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*pos<sp/>=<sp/>fmt;</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>wcschr(pos,<sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref>);</highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3925"><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separator_counter++;</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>separator_counter<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3930"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>columns_number_in_fmt_u8string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*fmt)</highlight></codeline>
<codeline lineno="3936"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>separator_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*pos<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)fmt;</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(pos,<sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref>);</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separator_counter++;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>separator_counter<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="3948"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="3952"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5140ca8ce544c7fe7fd8580b46eb7919" kindref="member">number_of_columns_in_format_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__view" kindref="compound">f_string_view_t</ref><sp/>*fmt)</highlight></codeline>
<codeline lineno="3953"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(fmt-&gt;<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>columns_number_in_fmt_string(fmt-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa44363a2ad0a535a64170738a2d6e58d" kindref="member">cstr</ref>);</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>columns_number_in_fmt_wstring(fmt-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1a0a19a0e48972c54f8faf0b433d5849dc" kindref="member">wstr</ref>);</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>columns_number_in_fmt_u8string(fmt-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa9aef96a02d5687b18447086ae54dcbd" kindref="member">u8str</ref>);</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3969"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="3972"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a99b4b352713722a3c4bd74f977dcddfb" kindref="member">number_of_columns_in_format_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*fmt)</highlight></codeline>
<codeline lineno="3973"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(fmt-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>columns_number_in_fmt_string(fmt-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>);</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="3979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>columns_number_in_fmt_wstring(fmt-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>);</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3981"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>columns_number_in_fmt_u8string(fmt-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>);</highlight></codeline>
<codeline lineno="3984"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="3989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>snprint_n_strings_impl(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="3993"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>str_len<sp/>=<sp/>strlen(str);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;=<sp/>n<sp/>*<sp/>str_len)</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"></highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>ensure<sp/>valid<sp/>return<sp/>value<sp/>it<sp/>is<sp/>safely<sp/>not<sp/>print<sp/>such<sp/>big<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>*<sp/>str_len<sp/>&gt;<sp/>INT_MAX)</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"></highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>snprintf(buf,<sp/>length,<sp/></highlight><highlight class="stringliteral">&quot;%0*d&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(n<sp/>*<sp/>str_len),<sp/>0);</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_p<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str_p)</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(buf++)<sp/>=<sp/>*(str_p++);</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(n<sp/>*<sp/>str_len);</highlight></codeline>
<codeline lineno="4019"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>snprint_n_strings(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="4023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w<sp/>=<sp/>snprint_n_strings_impl(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>,<sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref>,<sp/>n,<sp/>str);</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>+=<sp/>w;</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>-=<sp/>w;</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="4030"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_WCHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wsnprint_n_string(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="4035"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u8nprint_n_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str);</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="4045"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>cod_w;</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>raw_written;</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cntx-&gt;<ref refid="structf__conv__context_1ab7e55cddff5e671c753ca98520c3bab6" kindref="member">b_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_written<sp/>=<sp/>snprint_n_strings(cntx,<sp/>n,<sp/>str);</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cod_w<sp/>=<sp/>raw_written;</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cod_w;</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cod_w<sp/>=<sp/>wsnprint_n_string(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1aa90b4ed90e90c0b406451c868720e395" kindref="member">wbuf</ref>,<sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref>,<sp/>n,<sp/>str);</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cod_w<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cod_w;</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_written<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t)<sp/>*<sp/>cod_w;</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>+=<sp/>raw_written;</highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>-=<sp/>raw_written;</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cod_w;</highlight></codeline>
<codeline lineno="4064"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Everying<sp/>is<sp/>very<sp/>strange<sp/>and<sp/>differs<sp/>with<sp/>W_CHAR_BUF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>raw_written<sp/>=<sp/>u8nprint_n_strings(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>,<sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref>,<sp/>n,<sp/>str);</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(raw_written<sp/>&lt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fprintf(stderr,<sp/></highlight><highlight class="stringliteral">&quot;<sp/>raw_written<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>raw_written);</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_written;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>+=<sp/>raw_written;</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>-=<sp/>raw_written;</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acf9a71744695b4e13bd8fe284f6493f5" kindref="member">utf8len</ref>(str)<sp/>*<sp/>n;</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4082"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1adc410898e7cdde87f19083209df4bb02" kindref="member">ft_nprint</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strlen)</highlight></codeline>
<codeline lineno="4086"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>+<sp/>1</highlight><highlight class="comment">/*<sp/>for<sp/>0<sp/>*/</highlight><highlight class="normal"><sp/>&lt;<sp/>strlen)</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>,<sp/>str,<sp/>strlen);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>+=<sp/>strlen;</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>-=<sp/>strlen;</highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><sp/>*cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>we<sp/>need<sp/>this<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strlen;</highlight></codeline>
<codeline lineno="4095"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4096"><highlight class="normal"></highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af86c27e4ebf239a915a36b6972d1d607" kindref="member">ft_nwprint</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>strlen)</highlight></codeline>
<codeline lineno="4099"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>+<sp/>1</highlight><highlight class="comment">/*<sp/>for<sp/>0<sp/>*/</highlight><highlight class="normal"><sp/>&lt;<sp/>strlen)</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>raw_len<sp/>=<sp/>strlen<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>,<sp/>str,<sp/>raw_len);</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>+=<sp/>raw_len;</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>-=<sp/>raw_len;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"></highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>we<sp/>need<sp/>this<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>end_of_string<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4111"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>,<sp/>&amp;end_of_string,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strlen;</highlight></codeline>
<codeline lineno="4113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4114"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3e59820002f722488daba674c799bb97" kindref="member">ft_nu8print</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end)</highlight></codeline>
<codeline lineno="4119"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bc<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)beg;</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ec<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)end;</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>raw_len<sp/>=<sp/>ec<sp/>-<sp/>bc;</highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>+<sp/>1<sp/>&lt;<sp/>raw_len)</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"></highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>,<sp/>beg,<sp/>raw_len);</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref><sp/>+=<sp/>raw_len;</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/><sp/>cntx-&gt;<ref refid="structf__conv__context_1ade0ad9364f66318b0e4a4ac90accdee1" kindref="member">raw_avail</ref><sp/>-=<sp/>raw_len;</highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/><sp/>*(cntx-&gt;<ref refid="structf__conv__context_1a9fb671c65c4d8e62af6aedb6145fa422" kindref="member">u</ref>.<ref refid="structf__conv__context_1a1fe855c208bc17a51a4d34fefdb2d5b1" kindref="member">buf</ref>)<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>we<sp/>need<sp/>this<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>raw_len;<sp/></highlight><highlight class="comment">/*<sp/>what<sp/>return<sp/>here<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight></codeline>
<codeline lineno="4134"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_WCHAR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>WCS_SIZE<sp/>64</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>wsnprint_n_string(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="4139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>str_len<sp/>=<sp/>strlen(str);</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>note:<sp/>maybe<sp/>it&apos;s,<sp/>better<sp/>to<sp/>return<sp/>-1<sp/>in<sp/>case<sp/>of<sp/>multibyte<sp/>character</highlight></codeline>
<codeline lineno="4143"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>strings<sp/>(not<sp/>sure<sp/>this<sp/>case<sp/>is<sp/>done<sp/>correctly).</highlight></codeline>
<codeline lineno="4144"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_len<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str;</highlight></codeline>
<codeline lineno="4147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*p)<sp/>{</highlight></codeline>
<codeline lineno="4148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*p<sp/>&lt;=<sp/>127)</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p++;</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>wcs[<ref refid="fort_8c_1a372768dcf109902d738ffaedff0faeac" kindref="member">WCS_SIZE</ref>];</highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>wcs_len;</highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mbstate_t<sp/>mbst;</highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;mbst,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(mbst));</highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wcs_len<sp/>=<sp/>mbsrtowcs(wcs,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)&amp;ptr,<sp/><ref refid="fort_8c_1a372768dcf109902d738ffaedff0faeac" kindref="member">WCS_SIZE</ref>,<sp/>&amp;mbst);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>for<sp/>simplicity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((wcs_len<sp/>==<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)<sp/>-<sp/>1)<sp/>||<sp/>wcs_len<sp/>&gt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>wcs[wcs_len]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(k)<sp/>{</highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*buf<sp/>=<sp/>*wcs;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++buf;</highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--k;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf[n]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)n;</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;=<sp/>n<sp/>*<sp/>str_len)</highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4177"><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>ensure<sp/>valid<sp/>return<sp/>value<sp/>it<sp/>is<sp/>safely<sp/>not<sp/>print<sp/>such<sp/>big<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>*<sp/>str_len<sp/>&gt;<sp/>INT_MAX)</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_len<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>swprintf(buf,<sp/>length,<sp/>L</highlight><highlight class="stringliteral">&quot;%0*d&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(n<sp/>*<sp/>str_len),<sp/>0);</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(status<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_p<sp/>=<sp/>str;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*str_p)</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(buf++)<sp/>=<sp/>(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">)<sp/>*<sp/>(str_p++);</highlight></codeline>
<codeline lineno="4197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(n<sp/>*<sp/>str_len);</highlight></codeline>
<codeline lineno="4199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>u8nprint_n_strings(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buf,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>length,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="4206"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>str_size<sp/>=<sp/><ref refid="fort_8c_1a1ef3ed7cdde8e5b378fad2edc26366d9" kindref="member">utf8size</ref>(str)<sp/>-<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>str_size<sp/>-<sp/>raw<sp/>size<sp/>in<sp/>bytes,<sp/>excluding<sp/>\0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(length<sp/>&lt;=<sp/>n<sp/>*<sp/>str_size)</highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>To<sp/>ensure<sp/>valid<sp/>return<sp/>value<sp/>it<sp/>is<sp/>safely<sp/>not<sp/>print<sp/>such<sp/>big<sp/>strings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>*<sp/>str_size<sp/>&gt;<sp/>INT_MAX)</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i)<sp/>{</highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(buf,<sp/>str,<sp/>str_size);</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buf<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf<sp/>+<sp/>str_size;</highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/><sp/>*(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buf<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(n<sp/>*<sp/>str_size);</highlight></codeline>
<codeline lineno="4229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="4233"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;fort_utils.c&quot;</highlight></codeline>
<codeline lineno="4234"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4235"><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="4238"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;properties.c&quot;</highlight></codeline>
<codeline lineno="4239"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal"></highlight></codeline>
<codeline lineno="4241"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;fort_utils.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;properties.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4244"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;vector.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4245"><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FT_RESET_COLOR<sp/>&quot;\033[0m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4247"><highlight class="normal"></highlight></codeline>
<codeline lineno="4248"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fg_colors[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[30m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[31m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[32m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[33m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[34m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[35m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[36m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[37m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[90m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[91m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[92m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[93m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[94m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[95m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[96m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[97m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4266"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*bg_colors[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[40m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[41m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[42m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[43m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[44m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[45m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[46m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[47m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[100m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[101m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[102m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[103m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[104m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[105m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[106m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[107m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4286"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"></highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text_styles[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[1m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[2m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[3m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[4m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[5m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[7m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;\033[8m&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4297"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UNIVERSAL_RESET_TAG<sp/>&quot;\033[0m&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight></codeline>
<codeline lineno="4301"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_fg_colors<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fg_colors)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fg_colors[0]);</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_bg_colors<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bg_colors)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(bg_colors[0]);</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_styles<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(text_styles)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(text_styles[0]);</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5eb660e527d2b076b21d88c35bef4089" kindref="member">get_style_tag_for_cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="4307"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)sz;</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"></highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bg_color_number<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1a8eec90e0b1b004749b85052422c48671" kindref="member">FT_CPROP_CELL_BG_COLOR</ref>);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>text_style<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1a82551a6b4f9bdc48c57fec86faa05052" kindref="member">FT_CPROP_CELL_TEXT_STYLE</ref>);</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"></highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/>style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&lt;<sp/>(1U<sp/>&lt;&lt;<sp/>n_styles))<sp/>{</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_styles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(style_tag,<sp/>text_styles[i]);</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_color_number<sp/>&lt;<sp/>n_bg_colors)<sp/>{</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(style_tag,<sp/>bg_colors[bg_color_number]);</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal">error:</highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>be<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/>style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4339"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a14b841bae5c7188b971109613ab2b12a" kindref="member">get_reset_style_tag_for_cell</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reset_style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="4343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)sz;</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bg_color_number<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1a8eec90e0b1b004749b85052422c48671" kindref="member">FT_CPROP_CELL_BG_COLOR</ref>);</highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>text_style<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1a82551a6b4f9bdc48c57fec86faa05052" kindref="member">FT_CPROP_CELL_TEXT_STYLE</ref>);</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&lt;<sp/>(1U<sp/>&lt;&lt;<sp/>n_styles))<sp/>{</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_styles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>FT_TSTYLE_DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>reset_style;</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_color_number<sp/>&lt;<sp/>n_bg_colors)<sp/>{</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_color_number)</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>reset_style;</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"></highlight></codeline>
<codeline lineno="4372"><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal">reset_style:</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(reset_style_tag,<sp/><ref refid="fort_8c_1a1dfc09e89d646bcb4852592debb5c8e5" kindref="member">UNIVERSAL_RESET_TAG</ref>);</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"></highlight></codeline>
<codeline lineno="4377"><highlight class="normal">error:</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>be<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"></highlight></codeline>
<codeline lineno="4384"><highlight class="normal"></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae1ca1606073ac2c174844a4633c8159d" kindref="member">get_style_tag_for_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="4387"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)sz;</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>text_style<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1aef6afa765c79403917d52a565db47b65" kindref="member">FT_CPROP_CONT_TEXT_STYLE</ref>);</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>fg_color_number<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1ad078aa3c64959b51e29ddbc52dc42edc" kindref="member">FT_CPROP_CONT_FG_COLOR</ref>);</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bg_color_number<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1a979f10a47f0977e563ebf79d2144a8b1" kindref="member">FT_CPROP_CONT_BG_COLOR</ref>);</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/><sp/>style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&lt;<sp/>(1U<sp/>&lt;&lt;<sp/>n_styles))<sp/>{</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_styles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(style_tag,<sp/>text_styles[i]);</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"></highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fg_color_number<sp/>&lt;<sp/>n_fg_colors)<sp/>{</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fg_color_number)</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(style_tag,<sp/>fg_colors[fg_color_number]);</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"></highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_color_number<sp/>&lt;<sp/>n_bg_colors)<sp/>{</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>strcat(style_tag,<sp/>bg_colors[bg_color_number]);</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal">error:</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>be<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/><sp/>style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab4db6996f6df6e03e566bdbdfba76da0" kindref="member">get_reset_style_tag_for_content</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props,</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reset_style_tag,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz)</highlight></codeline>
<codeline lineno="4431"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/>(void)sz;</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>text_style<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1aef6afa765c79403917d52a565db47b65" kindref="member">FT_CPROP_CONT_TEXT_STYLE</ref>);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>fg_color_number<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1ad078aa3c64959b51e29ddbc52dc42edc" kindref="member">FT_CPROP_CONT_FG_COLOR</ref>);</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>bg_color_number<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>col,<sp/><ref refid="fort_8h_1a979f10a47f0977e563ebf79d2144a8b1" kindref="member">FT_CPROP_CONT_BG_COLOR</ref>);</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"></highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&lt;<sp/>(1U<sp/>&lt;&lt;<sp/>n_styles))<sp/>{</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n_styles;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(text_style<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>i))<sp/>{</highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>!=<sp/>0)<sp/></highlight><highlight class="comment">//<sp/>FT_TSTYLE_DEFAULT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>reset_style;</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4452"><highlight class="normal"></highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fg_color_number<sp/>&lt;<sp/>n_fg_colors)<sp/>{</highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fg_color_number)</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>reset_style;</highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_color_number<sp/>&lt;<sp/>n_bg_colors)<sp/>{</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bg_color_number)</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>reset_style;</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4468"><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal">reset_style:</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/>strcat(reset_style_tag,<sp/><ref refid="fort_8c_1a1dfc09e89d646bcb4852592debb5c8e5" kindref="member">UNIVERSAL_RESET_TAG</ref>);</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/>len<sp/>=<sp/>strlen(reset_style_tag);</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a5eb660e527d2b076b21d88c35bef4089" kindref="member">get_style_tag_for_cell</ref>(props,<sp/>row,<sp/>col,<sp/>reset_style_tag<sp/>+<sp/>len,<sp/>sz<sp/>-<sp/>len);</highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal">error:</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>be<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/><sp/>reset_style_tag[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__cell__props" kindref="compound">f_cell_props</ref><sp/>g_default_cell_properties<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref>,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cell_row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>,<sp/></highlight><highlight class="comment">/*<sp/>cell_col<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>properties_flags<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1aaa59596ed65b02b3c698e9aaf8d16bbd" kindref="member">FT_CPROP_MIN_WIDTH</ref><sp/><sp/>|<sp/><ref refid="fort_8h_1ae5586130d3dd258d477e370923d0889e" kindref="member">FT_CPROP_TEXT_ALIGN</ref><sp/>|<sp/><ref refid="fort_8h_1a2a5fd97edb51283e0baddcf896555e9d" kindref="member">FT_CPROP_TOP_PADDING</ref></highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/><ref refid="fort_8h_1a47c8f3a9d83e32ac8f3ab5997dc5b542" kindref="member">FT_CPROP_BOTTOM_PADDING</ref><sp/>|<sp/><ref refid="fort_8h_1a536d5cbb92b59dbc2e28891fa5bcd114" kindref="member">FT_CPROP_LEFT_PADDING</ref><sp/>|<sp/><ref refid="fort_8h_1a11cdcb1be7737d1f65f2b6bc4b8b7e86" kindref="member">FT_CPROP_RIGHT_PADDING</ref></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/><ref refid="fort_8h_1aadf8488e2ae0a4e7c2e4ecbc715d2b18" kindref="member">FT_CPROP_EMPTY_STR_HEIGHT</ref><sp/>|<sp/><ref refid="fort_8h_1ad078aa3c64959b51e29ddbc52dc42edc" kindref="member">FT_CPROP_CONT_FG_COLOR</ref><sp/>|<sp/><ref refid="fort_8h_1a8eec90e0b1b004749b85052422c48671" kindref="member">FT_CPROP_CELL_BG_COLOR</ref></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/>|<sp/><ref refid="fort_8h_1a979f10a47f0977e563ebf79d2144a8b1" kindref="member">FT_CPROP_CONT_BG_COLOR</ref><sp/>|<sp/><ref refid="fort_8h_1a82551a6b4f9bdc48c57fec86faa05052" kindref="member">FT_CPROP_CELL_TEXT_STYLE</ref><sp/>|<sp/><ref refid="fort_8h_1aef6afa765c79403917d52a565db47b65" kindref="member">FT_CPROP_CONT_TEXT_STYLE</ref>,</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight></codeline>
<codeline lineno="4494"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>col_min_width<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32ca62837cbc7c859d5d38d608f51806e66d" kindref="member">FT_ALIGNED_LEFT</ref>,<sp/><sp/></highlight><highlight class="comment">/*<sp/>align<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cell_padding_top<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cell_padding_bottom<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cell_padding_left<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cell_padding_right<sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cell_empty_string_height<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4501"><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34ae50a530e078dd8425784ca02e66d2433" kindref="member">FT_ROW_COMMON</ref>,<sp/></highlight><highlight class="comment">/*<sp/>row_type<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1a8a64c62f618f7c34310da2e2ef31f63face2e85ce681b17d9334eb832a1558445" kindref="member">FT_COLOR_DEFAULT</ref>,<sp/></highlight><highlight class="comment">/*<sp/>content_fg_color_number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1a8a64c62f618f7c34310da2e2ef31f63face2e85ce681b17d9334eb832a1558445" kindref="member">FT_COLOR_DEFAULT</ref>,<sp/></highlight><highlight class="comment">/*<sp/>content_bg_color_number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1a8a64c62f618f7c34310da2e2ef31f63face2e85ce681b17d9334eb832a1558445" kindref="member">FT_COLOR_DEFAULT</ref>,<sp/></highlight><highlight class="comment">/*<sp/>cell_bg_color_number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2" kindref="member">FT_TSTYLE_DEFAULT</ref>,<sp/></highlight><highlight class="comment">/*<sp/>cell_text_style<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2" kindref="member">FT_TSTYLE_DEFAULT</ref>,<sp/></highlight><highlight class="comment">/*<sp/>content_text_style<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4508"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>get_prop_value_if_exists_otherwise_default(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props</ref><sp/>*cell_opts,<sp/>uint32_t<sp/>property)</highlight></codeline>
<codeline lineno="4511"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_opts<sp/>==<sp/>NULL<sp/>||<sp/>!<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(cell_opts-&gt;<ref refid="structf__cell__props_1a07b356a4c56beedc874b9fb0320d984d" kindref="member">properties_flags</ref>,<sp/>property))<sp/>{</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell_opts<sp/>=<sp/>&amp;g_default_cell_properties;</highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(property)<sp/>{</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aaa59596ed65b02b3c698e9aaf8d16bbd" kindref="member">FT_CPROP_MIN_WIDTH</ref>:</highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a54ccd4f1df4cc1d45c57eb7f43cdf020" kindref="member">col_min_width</ref>;</highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ae5586130d3dd258d477e370923d0889e" kindref="member">FT_CPROP_TEXT_ALIGN</ref>:</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1aca4ea7fd31004d666dcde97abd4a872d" kindref="member">align</ref>;</highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a2a5fd97edb51283e0baddcf896555e9d" kindref="member">FT_CPROP_TOP_PADDING</ref>:</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a0eab802d4da7ff81976176b083e3e6ec" kindref="member">cell_padding_top</ref>;</highlight></codeline>
<codeline lineno="4523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a47c8f3a9d83e32ac8f3ab5997dc5b542" kindref="member">FT_CPROP_BOTTOM_PADDING</ref>:</highlight></codeline>
<codeline lineno="4524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a530aadfddba7770d625b7267052b30a5" kindref="member">cell_padding_bottom</ref>;</highlight></codeline>
<codeline lineno="4525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a536d5cbb92b59dbc2e28891fa5bcd114" kindref="member">FT_CPROP_LEFT_PADDING</ref>:</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a974956182cc69378a7ac0fb26d650873" kindref="member">cell_padding_left</ref>;</highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a11cdcb1be7737d1f65f2b6bc4b8b7e86" kindref="member">FT_CPROP_RIGHT_PADDING</ref>:</highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a544a47782e13d41f71497b0af2daac09" kindref="member">cell_padding_right</ref>;</highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aadf8488e2ae0a4e7c2e4ecbc715d2b18" kindref="member">FT_CPROP_EMPTY_STR_HEIGHT</ref>:</highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1afcc77435b807752ced89810351d7dffb" kindref="member">cell_empty_string_height</ref>;</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abd5e4b5a6cb494024967f9d22a50c708" kindref="member">FT_CPROP_ROW_TYPE</ref>:</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a348652d60163f3aeb6afabb8929e4af5" kindref="member">row_type</ref>;</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad078aa3c64959b51e29ddbc52dc42edc" kindref="member">FT_CPROP_CONT_FG_COLOR</ref>:</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1af53c0c19d0256a3939e44f608013dbf8" kindref="member">content_fg_color_number</ref>;</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a979f10a47f0977e563ebf79d2144a8b1" kindref="member">FT_CPROP_CONT_BG_COLOR</ref>:</highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a8430efd49c624f163472b3007db3d5f3" kindref="member">content_bg_color_number</ref>;</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a8eec90e0b1b004749b85052422c48671" kindref="member">FT_CPROP_CELL_BG_COLOR</ref>:</highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1af0d3576ca232677f454cb734e284e117" kindref="member">cell_bg_color_number</ref>;</highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a82551a6b4f9bdc48c57fec86faa05052" kindref="member">FT_CPROP_CELL_TEXT_STYLE</ref>:</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a6b58066d703ac528955249e429754809" kindref="member">cell_text_style</ref>;</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aef6afa765c79403917d52a565db47b65" kindref="member">FT_CPROP_CONT_TEXT_STYLE</ref>:</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cell_opts-&gt;<ref refid="structf__cell__props_1a194687916c07a762386a70acce5ea344" kindref="member">content_text_style</ref>;</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>implement<sp/>later<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(333);</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4548"><highlight class="normal"></highlight></codeline>
<codeline lineno="4549"><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4551"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*<ref refid="fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c" kindref="member">create_cell_prop_container</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="4552"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*ret<sp/>=<sp/><ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref>),<sp/><ref refid="fort_8c_1ae79893aa9b2a96292bb66404e00eddf1" kindref="member">DEFAULT_VECTOR_CAPACITY</ref>);</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a2266ed2c80b2571032776541bfa14174" kindref="member">destroy_cell_prop_container</ref>(<ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont)</highlight></codeline>
<codeline lineno="4560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cont)</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(cont);</highlight></codeline>
<codeline lineno="4563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight></codeline>
<codeline lineno="4565"><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*<ref refid="fort_8c_1a2ce14d6f2ae9343c8d2e4eb6d4fc0775" kindref="member">cget_cell_prop</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="4568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cont);</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(cont);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*opt<sp/>=<sp/>&amp;<ref refid="fort_8c_1a9d43ef6423e42a608c3e28e9fef6d053" kindref="member">VECTOR_AT_C</ref>(cont,<sp/>i,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref>);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="structf__cell__props_1aebc7e6d02395da1d92d0f429651fb1b9" kindref="member">cell_row</ref><sp/>==<sp/>row<sp/>&amp;&amp;<sp/>opt-&gt;<ref refid="structf__cell__props_1a2050cfae9730fb07f1c72689f050ec94" kindref="member">cell_col</ref><sp/>==<sp/>col)</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4579"><highlight class="normal"></highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4582"><highlight class="normal"><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*<ref refid="fort_8c_1a9cf22afc8e3f8fbc1038722b1e918f76" kindref="member">get_cell_prop_and_create_if_not_exists</ref>(<ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="4583"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cont);</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(cont);</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*opt<sp/>=<sp/>&amp;<ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(cont,<sp/>i,<sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref>);</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt-&gt;<ref refid="structf__cell__props_1aebc7e6d02395da1d92d0f429651fb1b9" kindref="member">cell_row</ref><sp/>==<sp/>row<sp/>&amp;&amp;<sp/>opt-&gt;<ref refid="structf__cell__props_1a2050cfae9730fb07f1c72689f050ec94" kindref="member">cell_col</ref><sp/>==<sp/>col)</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>opt;</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>opt;</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/><ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref><sp/>&amp;&amp;<sp/>col<sp/>==<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>)</highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;opt,<sp/>&amp;g_default_cell_properties,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref>));</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;opt,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref>));</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.<ref refid="structf__cell__props_1aebc7e6d02395da1d92d0f429651fb1b9" kindref="member">cell_row</ref><sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/>opt.<ref refid="structf__cell__props_1a2050cfae9730fb07f1c72689f050ec94" kindref="member">cell_col</ref><sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482" kindref="member">FT_IS_SUCCESS</ref>(<ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(cont,<sp/>&amp;opt)))<sp/>{</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;<ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(cont,<sp/>sz,<sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref>);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="4606"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*propertiess,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column,<sp/>uint32_t<sp/>property)</highlight></codeline>
<codeline lineno="4611"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(propertiess);</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_origin<sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*opt<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(propertiess-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt<sp/>=<sp/><ref refid="fort_8c_1a2ce14d6f2ae9343c8d2e4eb6d4fc0775" kindref="member">cget_cell_prop</ref>(propertiess-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref>,<sp/>row,<sp/>column);</highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/><ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(opt-&gt;<ref refid="structf__cell__props_1a07b356a4c56beedc874b9fb0320d984d" kindref="member">properties_flags</ref>,<sp/>property))</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4621"><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>!=<sp/><ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref><sp/>&amp;&amp;<sp/>column<sp/>!=<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/><ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref>;</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/><ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref><sp/>&amp;&amp;<sp/>column<sp/>!=<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/>row_origin;</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column<sp/>=<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>;</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>!=<sp/><ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref><sp/><sp/>&amp;&amp;<sp/>column<sp/>==<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row<sp/>=<sp/><ref refid="fort_8h_1a18fe66b5bbb33d73be7ba06518c1f40d" kindref="member">FT_ANY_ROW</ref>;</highlight></codeline>
<codeline lineno="4631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>column<sp/>=<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>;</highlight></codeline>
<codeline lineno="4632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"></highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4639"><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_prop_value_if_exists_otherwise_default(opt,<sp/>property);</highlight></codeline>
<codeline lineno="4641"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight></codeline>
<codeline lineno="4644"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/>set_cell_property_impl(<ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*opt,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="4645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(opt);</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"></highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a292665f9426d532a04d9db2f47f8cc1f" kindref="member">PROP_SET</ref>(opt-&gt;<ref refid="structf__cell__props_1a07b356a4c56beedc874b9fb0320d984d" kindref="member">properties_flags</ref>,<sp/>property);</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1aaa59596ed65b02b3c698e9aaf8d16bbd" kindref="member">FT_CPROP_MIN_WIDTH</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aab06de152ddaae54d61db939ee942b20" kindref="member">CHECK_NOT_NEGATIVE</ref>(value);</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a54ccd4f1df4cc1d45c57eb7f43cdf020" kindref="member">col_min_width</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1ae5586130d3dd258d477e370923d0889e" kindref="member">FT_CPROP_TEXT_ALIGN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1aca4ea7fd31004d666dcde97abd4a872d" kindref="member">align</ref><sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32c" kindref="member">ft_text_alignment</ref>)value;</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a2a5fd97edb51283e0baddcf896555e9d" kindref="member">FT_CPROP_TOP_PADDING</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aab06de152ddaae54d61db939ee942b20" kindref="member">CHECK_NOT_NEGATIVE</ref>(value);</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a0eab802d4da7ff81976176b083e3e6ec" kindref="member">cell_padding_top</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a47c8f3a9d83e32ac8f3ab5997dc5b542" kindref="member">FT_CPROP_BOTTOM_PADDING</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aab06de152ddaae54d61db939ee942b20" kindref="member">CHECK_NOT_NEGATIVE</ref>(value);</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a530aadfddba7770d625b7267052b30a5" kindref="member">cell_padding_bottom</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a536d5cbb92b59dbc2e28891fa5bcd114" kindref="member">FT_CPROP_LEFT_PADDING</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aab06de152ddaae54d61db939ee942b20" kindref="member">CHECK_NOT_NEGATIVE</ref>(value);</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a974956182cc69378a7ac0fb26d650873" kindref="member">cell_padding_left</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a11cdcb1be7737d1f65f2b6bc4b8b7e86" kindref="member">FT_CPROP_RIGHT_PADDING</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aab06de152ddaae54d61db939ee942b20" kindref="member">CHECK_NOT_NEGATIVE</ref>(value);</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a544a47782e13d41f71497b0af2daac09" kindref="member">cell_padding_right</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1aadf8488e2ae0a4e7c2e4ecbc715d2b18" kindref="member">FT_CPROP_EMPTY_STR_HEIGHT</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aab06de152ddaae54d61db939ee942b20" kindref="member">CHECK_NOT_NEGATIVE</ref>(value);</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1afcc77435b807752ced89810351d7dffb" kindref="member">cell_empty_string_height</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4669"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1abd5e4b5a6cb494024967f9d22a50c708" kindref="member">FT_CPROP_ROW_TYPE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a348652d60163f3aeb6afabb8929e4af5" kindref="member">row_type</ref><sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref>)value;</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1ad078aa3c64959b51e29ddbc52dc42edc" kindref="member">FT_CPROP_CONT_FG_COLOR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1af53c0c19d0256a3939e44f608013dbf8" kindref="member">content_fg_color_number</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a979f10a47f0977e563ebf79d2144a8b1" kindref="member">FT_CPROP_CONT_BG_COLOR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a8430efd49c624f163472b3007db3d5f3" kindref="member">content_bg_color_number</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a8eec90e0b1b004749b85052422c48671" kindref="member">FT_CPROP_CELL_BG_COLOR</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1af0d3576ca232677f454cb734e284e117" kindref="member">cell_bg_color_number</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a82551a6b4f9bdc48c57fec86faa05052" kindref="member">FT_CPROP_CELL_TEXT_STYLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref><sp/>v<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref>)value;</highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2" kindref="member">FT_TSTYLE_DEFAULT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a6b58066d703ac528955249e429754809" kindref="member">cell_text_style</ref><sp/>=<sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2" kindref="member">FT_TSTYLE_DEFAULT</ref>;</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a6b58066d703ac528955249e429754809" kindref="member">cell_text_style</ref><sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref>)(opt-&gt;<ref refid="structf__cell__props_1a6b58066d703ac528955249e429754809" kindref="member">cell_text_style</ref><sp/>|<sp/>v);</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1aef6afa765c79403917d52a565db47b65" kindref="member">FT_CPROP_CONT_TEXT_STYLE</ref>))<sp/>{</highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref><sp/>v<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref>)value;</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0bad81d0dad8f26df01c149638ccbb6b3e2" kindref="member">FT_TSTYLE_DEFAULT</ref>)<sp/>{</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a194687916c07a762386a70acce5ea344" kindref="member">content_text_style</ref><sp/>=<sp/>v;</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;<ref refid="structf__cell__props_1a194687916c07a762386a70acce5ea344" kindref="member">content_text_style</ref><sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1abc496f06f2a4c7fb58b1730ce813be0b" kindref="member">ft_text_style</ref>)(opt-&gt;<ref refid="structf__cell__props_1a194687916c07a762386a70acce5ea344" kindref="member">content_text_style</ref><sp/>|<sp/>v);</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"></highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"></highlight></codeline>
<codeline lineno="4695"><highlight class="normal">fort_fail:</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad0ec3314d73a84b1edb194b9c72a8c21" kindref="member">FT_EINVAL</ref>;</highlight></codeline>
<codeline lineno="4697"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"></highlight></codeline>
<codeline lineno="4699"><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a59462cfbe20a08d695d7fdea80a53c94" kindref="member">set_cell_property</ref>(<ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="4702"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*opt<sp/>=<sp/><ref refid="fort_8c_1a9cf22afc8e3f8fbc1038722b1e918f76" kindref="member">get_cell_prop_and_create_if_not_exists</ref>(cont,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(opt<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"></highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_cell_property_impl(opt,<sp/>property,<sp/>value);</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4709"><highlight class="comment"><sp/><sp/><sp/><sp/>PROP_SET(opt-&gt;propertiess,<sp/>property);</highlight></codeline>
<codeline lineno="4710"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(PROP_IS_SET(property,<sp/>FT_CPROP_MIN_WIDTH))<sp/>{</highlight></codeline>
<codeline lineno="4711"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;col_min_width<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4712"><highlight class="comment"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>if<sp/>(PROP_IS_SET(property,<sp/>FT_CPROP_TEXT_ALIGN))<sp/>{</highlight></codeline>
<codeline lineno="4713"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>opt-&gt;align<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="4714"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4715"><highlight class="comment"></highlight></codeline>
<codeline lineno="4716"><highlight class="comment"><sp/><sp/><sp/><sp/>return<sp/>FT_SUCCESS;</highlight></codeline>
<codeline lineno="4717"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"></highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a74f59c42e342ef32cba6dda001961f5d" kindref="member">set_default_cell_property</ref>(uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="4723"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_cell_property_impl(&amp;g_default_cell_properties,<sp/>property,<sp/>value);</highlight></codeline>
<codeline lineno="4725"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"></highlight></codeline>
<codeline lineno="4727"><highlight class="normal"></highlight></codeline>
<codeline lineno="4728"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASIC_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4729"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4730"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4731"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4736"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4738"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4739"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;+&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4746"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4747"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;+&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4750"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"></highlight></codeline>
<codeline lineno="4752"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BASIC2_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4753"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4754"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4755"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4762"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4763"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;+&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/>&quot;|&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4770"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4771"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;+&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;+&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4774"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SIMPLE_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4777"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4778"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4779"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4786"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4787"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;-&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;-&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;-&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4793"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4794"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4795"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4796"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4798"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PLAIN_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4801"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4802"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4803"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4810"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4811"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;-&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;-&quot;,<sp/>&quot;-&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4814"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;-&quot;,<sp/>&quot;-&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;-&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;-&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4818"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4819"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;-&quot;,<sp/>&quot;-&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;-&quot;,<sp/>&quot;-&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4822"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"></highlight></codeline>
<codeline lineno="4824"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOT_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4825"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4826"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4827"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;.&quot;</highlight><highlight class="normal">,<sp/>&quot;.&quot;,<sp/>&quot;.&quot;,<sp/>&quot;.&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4830"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;:&quot;,<sp/>&quot;.&quot;,<sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;:&quot;,<sp/>&quot;+&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4834"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4835"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;.&quot;</highlight><highlight class="normal">,<sp/>&quot;.&quot;,<sp/>&quot;.&quot;,<sp/>&quot;.&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;:&quot;,<sp/>&quot;.&quot;,<sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;:&quot;,<sp/>&quot;.&quot;,<sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;+&quot;,<sp/>&quot;.&quot;,<sp/>&quot;+&quot;,<sp/>&quot;.&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4840"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4842"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4843"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;:&quot;</highlight><highlight class="normal">,<sp/>&quot;.&quot;,<sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;:&quot;,<sp/>&quot;:&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4846"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMPTY_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4849"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4850"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4851"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4858"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4859"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4866"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4867"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;\0&quot;</highlight><highlight class="normal">,<sp/>&quot;<sp/>&quot;,<sp/>&quot;\0<sp/>&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"></highlight></codeline>
<codeline lineno="4872"><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>EMPTY2_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4874"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4875"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4876"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4883"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4884"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/>&quot;\0&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4891"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4892"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;</highlight><highlight class="normal">,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;<sp/>&quot;,<sp/>&quot;<sp/>&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4895"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOLID_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4898"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4899"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4900"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;┌&quot;</highlight><highlight class="normal">,<sp/>&quot;─&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;┐&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;└&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┴&quot;,<sp/>&quot;┘&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;│&quot;,<sp/>&quot;─&quot;,<sp/>&quot;│&quot;,<sp/>&quot;─&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4905"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4907"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4908"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;┌&quot;</highlight><highlight class="normal">,<sp/>&quot;─&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;┐&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;├&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;┤&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4911"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;└&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┴&quot;,<sp/>&quot;┘&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┼&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;┴&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4915"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4916"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;├&quot;</highlight><highlight class="normal">,<sp/>&quot;─&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;┤&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┬&quot;,<sp/>&quot;┴&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4918"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4919"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SOLID_ROUND_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4922"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4923"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4924"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;╭&quot;</highlight><highlight class="normal">,<sp/>&quot;─&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;╮&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;╰&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┴&quot;,<sp/>&quot;╯&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;│&quot;,<sp/>&quot;─&quot;,<sp/>&quot;│&quot;,<sp/>&quot;─&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4931"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4932"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;╭&quot;</highlight><highlight class="normal">,<sp/>&quot;─&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;╮&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/>&quot;│&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;├&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;┤&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╰&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┴&quot;,<sp/>&quot;╯&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┼&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;┴&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4939"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4940"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;├&quot;</highlight><highlight class="normal">,<sp/>&quot;─&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;┤&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┬&quot;,<sp/>&quot;┴&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4943"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4944"><highlight class="normal"></highlight></codeline>
<codeline lineno="4945"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NICE_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4946"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4947"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4948"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;╔&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╦&quot;,<sp/>&quot;╗&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;╚&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╩&quot;,<sp/>&quot;╝&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;┻&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;┳&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4955"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4956"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;╔&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╦&quot;,<sp/>&quot;╗&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╠&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╬&quot;,<sp/>&quot;╣&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╚&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╩&quot;,<sp/>&quot;╝&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;╦&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;╩&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4963"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4964"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;╟&quot;</highlight><highlight class="normal">,<sp/>&quot;─&quot;,<sp/>&quot;╫&quot;,<sp/>&quot;╢&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╥&quot;,<sp/>&quot;╨&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4967"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4968"><highlight class="normal"></highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOUBLE_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4970"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4971"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4972"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;╔&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╦&quot;,<sp/>&quot;╗&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;╚&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╩&quot;,<sp/>&quot;╝&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;┻&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;┳&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4979"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4980"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;╔&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╦&quot;,<sp/>&quot;╗&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/>&quot;║&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╠&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╬&quot;,<sp/>&quot;╣&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╚&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╩&quot;,<sp/>&quot;╝&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;╦&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;╩&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4987"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4988"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;╠&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╬&quot;,<sp/>&quot;╣&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╦&quot;,<sp/>&quot;╩&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4991"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4992"><highlight class="normal"></highlight></codeline>
<codeline lineno="4993"><highlight class="normal"></highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DOUBLE2_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4997"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4998"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="4999"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;╔&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╤&quot;,<sp/>&quot;╗&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;║&quot;,<sp/>&quot;│&quot;,<sp/>&quot;║&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;╟&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;╢&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;╚&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╧&quot;,<sp/>&quot;╝&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;├&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;┤&quot;,<sp/>&quot;┴&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5006"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5007"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;╔&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╤&quot;,<sp/>&quot;╗&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;║&quot;,<sp/>&quot;│&quot;,<sp/>&quot;║&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╠&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╪&quot;,<sp/>&quot;╣&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╚&quot;,<sp/>&quot;═&quot;,<sp/>&quot;╧&quot;,<sp/>&quot;╝&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;├&quot;,<sp/>&quot;╤&quot;,<sp/>&quot;┤&quot;,<sp/>&quot;╧&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5014"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5015"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;╠&quot;</highlight><highlight class="normal">,<sp/>&quot;═&quot;,<sp/>&quot;╪&quot;,<sp/>&quot;╣&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╤&quot;,<sp/>&quot;╧&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5018"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5019"><highlight class="normal"></highlight></codeline>
<codeline lineno="5020"><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOLD_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5022"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5023"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5024"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;┏&quot;</highlight><highlight class="normal">,<sp/>&quot;━&quot;,<sp/>&quot;┳&quot;,<sp/>&quot;┓&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┃&quot;,<sp/>&quot;┃&quot;,<sp/>&quot;┃&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┗&quot;,<sp/>&quot;━&quot;,<sp/>&quot;┻&quot;,<sp/>&quot;┛&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;┻&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;┳&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5031"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5032"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;┏&quot;</highlight><highlight class="normal">,<sp/>&quot;━&quot;,<sp/>&quot;┳&quot;,<sp/>&quot;┓&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┃&quot;,<sp/>&quot;┃&quot;,<sp/>&quot;┃&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;━&quot;,<sp/>&quot;╋&quot;,<sp/>&quot;┫&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┗&quot;,<sp/>&quot;━&quot;,<sp/>&quot;┻&quot;,<sp/>&quot;┛&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;┳&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;┻&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5039"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5040"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;┣&quot;</highlight><highlight class="normal">,<sp/>&quot;━&quot;,<sp/>&quot;╋&quot;,<sp/>&quot;┫&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┳&quot;,<sp/>&quot;┻&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5043"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"></highlight></codeline>
<codeline lineno="5045"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>BOLD2_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5046"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5047"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5048"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;┏&quot;</highlight><highlight class="normal">,<sp/>&quot;━&quot;,<sp/>&quot;┯&quot;,<sp/>&quot;┓&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┃&quot;,<sp/>&quot;│&quot;,<sp/>&quot;┃&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┠&quot;,<sp/>&quot;─&quot;,<sp/>&quot;┼&quot;,<sp/>&quot;┨&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┗&quot;,<sp/>&quot;━&quot;,<sp/>&quot;┷&quot;,<sp/>&quot;┛&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;┬&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;┴&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5055"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5056"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;┏&quot;</highlight><highlight class="normal">,<sp/>&quot;━&quot;,<sp/>&quot;┯&quot;,<sp/>&quot;┓&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┃&quot;,<sp/>&quot;│&quot;,<sp/>&quot;┃&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;━&quot;,<sp/>&quot;┿&quot;,<sp/>&quot;┫&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┗&quot;,<sp/>&quot;━&quot;,<sp/>&quot;┷&quot;,<sp/>&quot;┛&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;┯&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;┷&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5063"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5064"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;┣&quot;</highlight><highlight class="normal">,<sp/>&quot;━&quot;,<sp/>&quot;┿&quot;,<sp/>&quot;┫&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┯&quot;,<sp/>&quot;┷&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"></highlight></codeline>
<codeline lineno="5069"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FRAME_STYLE<sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5070"><highlight class="preprocessor"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5071"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5072"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>&quot;▛&quot;</highlight><highlight class="normal">,<sp/>&quot;▀&quot;,<sp/>&quot;▀&quot;,<sp/>&quot;▜&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;▌&quot;,<sp/>&quot;┃&quot;,<sp/>&quot;▐&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/>&quot;&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;▙&quot;,<sp/>&quot;▄&quot;,<sp/>&quot;▄&quot;,<sp/>&quot;▟&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;━&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;━&quot;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>header_border_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5079"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5080"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;▛&quot;</highlight><highlight class="normal">,<sp/>&quot;▀&quot;,<sp/>&quot;▀&quot;,<sp/>&quot;▜&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;▌&quot;,<sp/>&quot;┃&quot;,<sp/>&quot;▐&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;▌&quot;,<sp/>&quot;━&quot;,<sp/>&quot;╋&quot;,<sp/>&quot;▐&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;▙&quot;,<sp/>&quot;▄&quot;,<sp/>&quot;▄&quot;,<sp/>&quot;▟&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;┣&quot;,<sp/>&quot;━&quot;,<sp/>&quot;┣&quot;,<sp/>&quot;━&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>separator_chars<sp/>*/</highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5087"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5088"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>&quot;▌&quot;</highlight><highlight class="normal">,<sp/>&quot;━&quot;,<sp/>&quot;╋&quot;,<sp/>&quot;▐&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/>&quot;╋&quot;,<sp/>&quot;╋&quot;,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/>},<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"></highlight></codeline>
<codeline lineno="5093"><highlight class="normal"></highlight></codeline>
<codeline lineno="5094"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a1551acd214a753796743eb0272395869" kindref="member">FORT_BASIC_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a25b25babc27e11fbe4cfae21995881e6" kindref="member">BASIC_STYLE</ref>;</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a18048056d8d37f0485dfc4480266b407" kindref="member">FORT_BASIC2_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a84323253628c81be9d93a0d6fadc891c" kindref="member">BASIC2_STYLE</ref>;</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ac35b24f98659298aafaac4f782b35908" kindref="member">FORT_SIMPLE_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a58a32c54547e08b469930b07ec56d9d4" kindref="member">SIMPLE_STYLE</ref>;</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1afa51b0acbd3c7ce38f236fbd8accd283" kindref="member">FORT_PLAIN_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1ad95c8d93533ada8f96019637c188f641" kindref="member">PLAIN_STYLE</ref>;</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ab5cfb34391ceae55c3adc0b856e2d3d1" kindref="member">FORT_DOT_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a40f9b235882059f09a69c951205869fe" kindref="member">DOT_STYLE</ref>;</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a58948e002a53e826043f3f1fd0efa626" kindref="member">FORT_EMPTY_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1ad19626848a66b2a7f33ae0e16db45b7f" kindref="member">EMPTY_STYLE</ref>;</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1acd0057b56b50d3772d93a58a345f8498" kindref="member">FORT_EMPTY2_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a34458dc60b60037c1df5622184763bd1" kindref="member">EMPTY2_STYLE</ref>;</highlight></codeline>
<codeline lineno="5101"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ab60c22c456490dc1c2b2581206aade7f" kindref="member">FORT_SOLID_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1ac551f30a3d753dbce194e2d5c50a7950" kindref="member">SOLID_STYLE</ref>;</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1afaadc6fcd0ea52e9bea97f198623dd34" kindref="member">FORT_SOLID_ROUND_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1adb4ab5efdfbfd2cfb08cfdb595c4f90a" kindref="member">SOLID_ROUND_STYLE</ref>;</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ad07ecf56923564f20f54de569baa4c31" kindref="member">FORT_NICE_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1ad112a91d6823b6b59b1791ceb6445a93" kindref="member">NICE_STYLE</ref>;</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a8bea0c4f43e34eccd50a38cf7cf275d9" kindref="member">FORT_DOUBLE_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a6c3842c70b6f4100cd5973e7a288c2d4" kindref="member">DOUBLE_STYLE</ref>;</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1ad7b86e58f7e8a1871d31e9d36e1afe8e" kindref="member">FORT_DOUBLE2_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a2977b3d23b0acedf98ddb75cfa3714c2" kindref="member">DOUBLE2_STYLE</ref>;</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1adce884980314dc4c5f6b5d19b6c9f0ae" kindref="member">FORT_BOLD_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a818cdb05e2e0ee60b8693016efdcebff" kindref="member">BOLD_STYLE</ref>;</highlight></codeline>
<codeline lineno="5107"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a2e98d54b72c590832a3d252dd43f68e7" kindref="member">FORT_BOLD2_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1aa6f6720b767dd4451f95654b138af84c" kindref="member">BOLD2_STYLE</ref>;</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/><ref refid="fort_8c_1a1ee29f5ac5af7b2100ca44d999f65493" kindref="member">FORT_FRAME_STYLE</ref><sp/>=<sp/><ref refid="fort_8c_1a9307749f2660d6c9ac81a0f3ae89a0de" kindref="member">FRAME_STYLE</ref>;</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"></highlight></codeline>
<codeline lineno="5110"><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/><ref refid="fort_8c_1a59d265136eda43200385d8b5f04ecd2c" kindref="member">g_entire_table_properties</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>left_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>top_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>right_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>bottom_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842" kindref="member">FT_STRATEGY_REPLACE</ref>,<sp/></highlight><highlight class="comment">/*<sp/>add_strategy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5118"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"></highlight></codeline>
<codeline lineno="5120"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/>set_entire_table_property_internal(<ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/>*properties,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="5121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(properties);</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aab06de152ddaae54d61db939ee942b20" kindref="member">CHECK_NOT_NEGATIVE</ref>(value);</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a6556cdb107bc9e5ef97c0e80c8c4492d" kindref="member">FT_TPROP_LEFT_MARGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties-&gt;<ref refid="structfort__entire__table__properties_1a87484e19e9dff2efeabfbbcfdc0c0f80" kindref="member">left_margin</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a72f9e4b2eb759e81b4bd15798b4af42a" kindref="member">FT_TPROP_TOP_MARGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties-&gt;<ref refid="structfort__entire__table__properties_1aae43b762bb8a8ee14752f7a1056f85de" kindref="member">top_margin</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a19471b7f5a81ddac7980d4a615b9c020" kindref="member">FT_TPROP_RIGHT_MARGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties-&gt;<ref refid="structfort__entire__table__properties_1a3d505e3f1169ea3f86ecf36aefe24be3" kindref="member">right_margin</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1ac12c48db088c87088e471656a72de7ad" kindref="member">FT_TPROP_BOTTOM_MARGIN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties-&gt;<ref refid="structfort__entire__table__properties_1aa80ec529af79ff50c442c24c505f512a" kindref="member">bottom_margin</ref><sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a89b695ac3096c15aeaa67152e30c003d" kindref="member">PROP_IS_SET</ref>(property,<sp/><ref refid="fort_8h_1a1de2ce152f17fb058c7d397e97a9837d" kindref="member">FT_TPROP_ADDING_STRATEGY</ref>))<sp/>{</highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>properties-&gt;<ref refid="structfort__entire__table__properties_1a18b0b5e9a876a787e08d7f630d52152d" kindref="member">add_strategy</ref><sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5" kindref="member">ft_adding_strategy</ref>)value;</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad0ec3314d73a84b1edb194b9c72a8c21" kindref="member">FT_EINVAL</ref>;</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"></highlight></codeline>
<codeline lineno="5139"><highlight class="normal">fort_fail:</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad0ec3314d73a84b1edb194b9c72a8c21" kindref="member">FT_EINVAL</ref>;</highlight></codeline>
<codeline lineno="5141"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"></highlight></codeline>
<codeline lineno="5143"><highlight class="normal"></highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a1cde977c8162b3902a3eece0b649e451" kindref="member">set_entire_table_property</ref>(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*table_properties,<sp/>uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="5146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table_properties);</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_entire_table_property_internal(&amp;table_properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>,<sp/>property,<sp/>value);</highlight></codeline>
<codeline lineno="5149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"></highlight></codeline>
<codeline lineno="5151"><highlight class="normal"></highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5153"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a6552ebc09611ccba176d04a5702458a1" kindref="member">set_default_entire_table_property</ref>(uint32_t<sp/>property,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>value)</highlight></codeline>
<codeline lineno="5154"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>set_entire_table_property_internal(&amp;<ref refid="fort_8c_1a59d265136eda43200385d8b5f04ecd2c" kindref="member">g_entire_table_properties</ref>,<sp/>property,<sp/>value);</highlight></codeline>
<codeline lineno="5156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5157"><highlight class="normal"></highlight></codeline>
<codeline lineno="5158"><highlight class="normal"></highlight></codeline>
<codeline lineno="5159"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5160"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a218b12058c9822ff0ad91544aedd2a13" kindref="member">max_border_elem_strlen</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties</ref><sp/>*properties)</highlight></codeline>
<codeline lineno="5161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(properties);</highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(result,<sp/>strlen(properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>.<ref refid="structfort__border__style_1ad9cb9c8195dabd4fb4698c2b2410d9e8" kindref="member">border_chars</ref>[i]));</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"></highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(result,<sp/>strlen(properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>.<ref refid="structfort__border__style_1a1c9522cfeb12351002e6e0a67c192175" kindref="member">header_border_chars</ref>[i]));</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a1011b2e48e304397b1f174798923779c" kindref="member">SEPARATOR_ITEM_POS_SIZE</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(result,<sp/>strlen(properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>.<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[i]));</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5177"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"></highlight></codeline>
<codeline lineno="5179"><highlight class="normal"></highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/><ref refid="fort_8c_1a7e383842a355b23739ccb9bb081cf543" kindref="member">g_table_properties</ref><sp/>=<sp/>{</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>border_style<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a25b25babc27e11fbe4cfae21995881e6" kindref="member">BASIC_STYLE</ref>,</highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/>NULL,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>cell_properties<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>entire_table_properties<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>left_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>top_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">/*<sp/>right_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/><sp/></highlight><highlight class="comment">/*<sp/>bottom_margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842" kindref="member">FT_STRATEGY_REPLACE</ref>,<sp/></highlight><highlight class="comment">/*<sp/>add_strategy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5192"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"></highlight></codeline>
<codeline lineno="5194"><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*<ref refid="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" kindref="member">create_table_properties</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref>),<sp/>1);</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(properties,<sp/>&amp;<ref refid="fort_8c_1a7e383842a355b23739ccb9bb081cf543" kindref="member">g_table_properties</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref>));</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/>properties-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>=<sp/><ref refid="fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c" kindref="member">create_cell_prop_container</ref>();</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a375c0af4b424ea5ae6bada04698665d5" kindref="member">destroy_table_properties</ref>(properties);</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>,<sp/>&amp;<ref refid="fort_8c_1a59d265136eda43200385d8b5f04ecd2c" kindref="member">g_entire_table_properties</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref>));</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>properties;</highlight></codeline>
<codeline lineno="5210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a375c0af4b424ea5ae6bada04698665d5" kindref="member">destroy_table_properties</ref>(<ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties)</highlight></codeline>
<codeline lineno="5214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"></highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a2266ed2c80b2571032776541bfa14174" kindref="member">destroy_cell_prop_container</ref>(properties-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref>);</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(properties);</highlight></codeline>
<codeline lineno="5222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"></highlight></codeline>
<codeline lineno="5224"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*copy_cell_properties(<ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*cont)</highlight></codeline>
<codeline lineno="5226"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_cell_prop_container_t</ref><sp/>*result<sp/>=<sp/><ref refid="fort_8c_1ab75c8f1799cd2f51d264bfc38e85971c" kindref="member">create_cell_prop_container</ref>();</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5230"><highlight class="normal"></highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(cont);</highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*opt<sp/>=<sp/>(<ref refid="structf__cell__props" kindref="compound">f_cell_props_t</ref><sp/>*)<ref refid="fort_8c_1abb033777a1a8c0b490f14541bc0332fa" kindref="member">vector_at</ref>(cont,<sp/>i);</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(result,<sp/>opt)))<sp/>{</highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a2266ed2c80b2571032776541bfa14174" kindref="member">destroy_cell_prop_container</ref>(result);</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"></highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*<ref refid="fort_8c_1a60b1666a1271172355ced7927d5f5eff" kindref="member">copy_table_properties</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties)</highlight></codeline>
<codeline lineno="5245"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*new_opt<sp/>=<sp/><ref refid="fort_8c_1acd24714fffb2ff7c987d049e7485b7ff" kindref="member">create_table_properties</ref>();</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_opt<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"></highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(new_opt-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref>);</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/>new_opt-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>=<sp/>copy_cell_properties(properties-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref>);</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_opt-&gt;<ref refid="structf__table__properties_1a1f691d257479bcdfd6f69c1e51b7e01f" kindref="member">cell_properties</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a375c0af4b424ea5ae6bada04698665d5" kindref="member">destroy_table_properties</ref>(new_opt);</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5256"><highlight class="normal"></highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;new_opt-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>,<sp/>&amp;properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref>));</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(&amp;new_opt-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>,</highlight></codeline>
<codeline lineno="5259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref>));</highlight></codeline>
<codeline lineno="5260"><highlight class="normal"></highlight></codeline>
<codeline lineno="5261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_opt;</highlight></codeline>
<codeline lineno="5262"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5263"><highlight class="normal"></highlight></codeline>
<codeline lineno="5264"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="5265"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;properties.c&quot;</highlight></codeline>
<codeline lineno="5266"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5267"><highlight class="normal"></highlight></codeline>
<codeline lineno="5268"><highlight class="normal"></highlight></codeline>
<codeline lineno="5269"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="5270"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;row.c&quot;</highlight></codeline>
<codeline lineno="5271"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5272"><highlight class="normal"></highlight></codeline>
<codeline lineno="5273"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5274"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ctype.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5275"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;row.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5276"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;cell.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5277"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;string_buffer.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5278"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;vector.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5279"><highlight class="normal"></highlight></codeline>
<codeline lineno="5280"><highlight class="normal"></highlight></codeline>
<codeline lineno="5281" refid="structf__row" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row</ref><sp/>{</highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>;</highlight></codeline>
<codeline lineno="5283"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"></highlight></codeline>
<codeline lineno="5285"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*create_row_impl(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*cells)</highlight></codeline>
<codeline lineno="5287"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5288"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__row" kindref="compound">f_row_t</ref>));</highlight></codeline>
<codeline lineno="5289"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5291"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cells)<sp/>{</highlight></codeline>
<codeline lineno="5292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref><sp/>=<sp/>cells;</highlight></codeline>
<codeline lineno="5293"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref><sp/>=<sp/><ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*),<sp/><ref refid="fort_8c_1ae79893aa9b2a96292bb66404e00eddf1" kindref="member">DEFAULT_VECTOR_CAPACITY</ref>);</highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(row);</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="5301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"></highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="5305"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>create_row_impl(NULL);</highlight></codeline>
<codeline lineno="5307"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"></highlight></codeline>
<codeline lineno="5309"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>destroy_each_cell(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*cells)</highlight></codeline>
<codeline lineno="5311"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cells_n<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(cells);</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cells_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(cells,<sp/>i,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="5316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5317"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5318"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5319"><highlight class="normal"></highlight></codeline>
<codeline lineno="5320"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5321"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row)</highlight></codeline>
<codeline lineno="5322"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"></highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy_each_cell(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"></highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(row);</highlight></codeline>
<codeline lineno="5332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"></highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a3a01711036a669b10b641d6179f72610" kindref="member">copy_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row)</highlight></codeline>
<codeline lineno="5336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(row);</highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*result<sp/>=<sp/><ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>();</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5341"><highlight class="normal"></highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols_n<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols_n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>i,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*new_cell<sp/>=<sp/><ref refid="fort_8c_1a236a2db76f5d456475a97dc2726ca7b3" kindref="member">copy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_cell<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(result);</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(result-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;new_cell);</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"></highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5355"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"></highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a234cff841d6e8bffc9955dd06d334420" kindref="member">split_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="5359"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(row);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*cells<sp/>=<sp/><ref refid="fort_8c_1acb4f5f3823ce6b50e51c8223c5fb9c2a" kindref="member">vector_split</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>pos);</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cells)</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*tail<sp/>=<sp/>create_row_impl(cells);</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tail)<sp/>{</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>destroy_each_cell(cells);</highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(cells);</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tail;</highlight></codeline>
<codeline lineno="5371"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"></highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5374"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aeb4ff36967a8e872f3d315e60d2bc4f9" kindref="member">ft_row_erase_range</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>left,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>right)</highlight></codeline>
<codeline lineno="5375"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(row);</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols_n<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cols_n<sp/>==<sp/>0<sp/>||<sp/>(right<sp/>&lt;<sp/>left))</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"></highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>left;</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i<sp/>&lt;<sp/>cols_n<sp/>&amp;&amp;<sp/>i<sp/>&lt;=<sp/>right)<sp/>{</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>i,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_destroy<sp/>=<sp/><ref refid="fort_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(cols_n<sp/>-<sp/>1,<sp/>right)<sp/>-<sp/>left<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n_destroy--)<sp/>{</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ae1d70435626d59e4d41971e22fa90fec" kindref="member">vector_erase</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>left);</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="5393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"></highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5396"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row)</highlight></codeline>
<codeline lineno="5397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL<sp/>||<sp/>row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"></highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5402"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"></highlight></codeline>
<codeline lineno="5404"><highlight class="normal"></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*get_cell_impl(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879" kindref="member">f_get_policy</ref><sp/>policy)</highlight></codeline>
<codeline lineno="5407"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL<sp/>||<sp/>row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"></highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(policy)<sp/>{</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc" kindref="member">DONT_CREATE_ON_NULL</ref>:</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col<sp/>&lt;<sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(row))<sp/>{</highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>col,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a" kindref="member">CREATE_ON_NULL</ref>:</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(col<sp/>&gt;=<sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(row))<sp/>{</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*new_cell<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;new_cell)))<sp/>{</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(new_cell);</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>col,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"></highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Shouldn&apos;t<sp/>be<sp/>here!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5433"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"></highlight></codeline>
<codeline lineno="5435"><highlight class="normal"></highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a840fa27cb400833ddeb735488e1d8947" kindref="member">get_cell</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="5438"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_cell_impl(row,<sp/>col,<sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc" kindref="member">DONT_CREATE_ON_NULL</ref>);</highlight></codeline>
<codeline lineno="5440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"></highlight></codeline>
<codeline lineno="5442"><highlight class="normal"></highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5444"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="5445"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a840fa27cb400833ddeb735488e1d8947" kindref="member">get_cell</ref>((<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*)row,<sp/>col);</highlight></codeline>
<codeline lineno="5447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"></highlight></codeline>
<codeline lineno="5449"><highlight class="normal"></highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0" kindref="member">get_cell_and_create_if_not_exists</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="5452"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_cell_impl(row,<sp/>col,<sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a" kindref="member">CREATE_ON_NULL</ref>);</highlight></codeline>
<codeline lineno="5454"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"></highlight></codeline>
<codeline lineno="5456"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*<ref refid="fort_8c_1a40ddd32fd7bb25bdda626db532e7412b" kindref="member">create_cell_in_position</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col)</highlight></codeline>
<codeline lineno="5458"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL<sp/>||<sp/>row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5462"><highlight class="normal"></highlight></codeline>
<codeline lineno="5463"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*new_cell<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="5464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5466"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829" kindref="member">vector_insert</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;new_cell,<sp/>col)))<sp/>{</highlight></codeline>
<codeline lineno="5467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(new_cell);</highlight></codeline>
<codeline lineno="5468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5469"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5470"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>col,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="5471"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5472"><highlight class="normal"></highlight></codeline>
<codeline lineno="5473"><highlight class="normal"></highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae67f055e422299c4821b1a00d5bfeb6d" kindref="member">swap_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*cur_row,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*ins_row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="5476"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cur_row);</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ins_row);</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cur_sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(cur_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_sz<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>pos<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;tmp,<sp/>cur_row,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__row" kindref="compound">f_row_t</ref>));</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(cur_row,<sp/>ins_row,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__row" kindref="compound">f_row_t</ref>));</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(ins_row,<sp/>&amp;tmp,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__row" kindref="compound">f_row_t</ref>));</highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a844f2a888602cd950e5a2d7c332c3b07" kindref="member">vector_swap</ref>(cur_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>ins_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>pos);</highlight></codeline>
<codeline lineno="5489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"></highlight></codeline>
<codeline lineno="5491"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Ownership<sp/>of<sp/>cells<sp/>of<sp/>`ins_row`<sp/>is<sp/>passed<sp/>to<sp/>`cur_row`.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5492"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5493"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a651c99d3ef016298fb72557264c415bf" kindref="member">insert_row</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*cur_row,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*ins_row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="5494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5495"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cur_row);</highlight></codeline>
<codeline lineno="5496"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(ins_row);</highlight></codeline>
<codeline lineno="5497"><highlight class="normal"></highlight></codeline>
<codeline lineno="5498"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(cur_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>)<sp/>&lt;<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="5499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*new_cell<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="5500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_cell)</highlight></codeline>
<codeline lineno="5501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="5502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(cur_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;new_cell);</highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"></highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(ins_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>sz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(ins_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>i,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829" kindref="member">vector_insert</ref>(cur_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;cell,<sp/>pos<sp/>+<sp/>i)))<sp/>{</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>clean<sp/>up<sp/>what<sp/>we<sp/>have<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(i--)<sp/>{</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ae1d70435626d59e4d41971e22fa90fec" kindref="member">vector_erase</ref>(cur_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>pos);</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Clear<sp/>cells<sp/>so<sp/>that<sp/>it<sp/>will<sp/>be<sp/>safe<sp/>to<sp/>destroy<sp/>this<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aeed5528bb1a8124b530766b5cdd607f4" kindref="member">vector_clear</ref>(ins_row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="5520"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5521"><highlight class="normal"></highlight></codeline>
<codeline lineno="5522"><highlight class="normal"></highlight></codeline>
<codeline lineno="5523"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5524"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab36a4052c23098fca6dce54d6201d96b" kindref="member">group_cell_number</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>master_cell_col)</highlight></codeline>
<codeline lineno="5525"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(row);</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*master_cell<sp/>=<sp/><ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(row,<sp/>master_cell_col);</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(master_cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"></highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" kindref="member">get_cell_type</ref>(master_cell)<sp/>!=<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" kindref="member">GROUP_MASTER_CELL</ref>)</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"></highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>total_cols<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>);</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slave_col<sp/>=<sp/>master_cell_col<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(slave_col<sp/>&lt;<sp/>total_cols)<sp/>{</highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(row,<sp/>slave_col);</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>&amp;&amp;<sp/><ref refid="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" kindref="member">get_cell_type</ref>(cell)<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++slave_col;</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>slave_col<sp/>-<sp/>master_cell_col;</highlight></codeline>
<codeline lineno="5545"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"></highlight></codeline>
<codeline lineno="5547"><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5549"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a187174d63ce94aa162d2468933cd3cbc" kindref="member">get_row_cell_types</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>*types,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>types_sz)</highlight></codeline>
<codeline lineno="5550"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(row);</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(types);</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>types_sz;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(row,<sp/>i);</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell)<sp/>{</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[i]<sp/>=<sp/><ref refid="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" kindref="member">get_cell_type</ref>(cell);</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>types[i]<sp/>=<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc" kindref="member">COMMON_CELL</ref>;</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="5563"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"></highlight></codeline>
<codeline lineno="5565"><highlight class="normal"></highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a66ea4a81d6bd50cb139417df40d7aba2" kindref="member">row_set_cell_span</ref>(<ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cell_column,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hor_span)</highlight></codeline>
<codeline lineno="5568"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(row);</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"></highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(hor_span<sp/>&lt;<sp/>2)</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1ad0ec3314d73a84b1edb194b9c72a8c21" kindref="member">FT_EINVAL</ref>;</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*main_cell<sp/>=<sp/><ref refid="fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0" kindref="member">get_cell_and_create_if_not_exists</ref>(row,<sp/>cell_column);</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(main_cell<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa406a5dc43875274fb9eaa3c941ce753" kindref="member">set_cell_type</ref>(main_cell,<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" kindref="member">GROUP_MASTER_CELL</ref>);</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"><sp/><sp/><sp/><sp/>--hor_span;</highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/><sp/><sp/>++cell_column;</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"></highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(hor_span)<sp/>{</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*slave_cell<sp/>=<sp/><ref refid="fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0" kindref="member">get_cell_and_create_if_not_exists</ref>(row,<sp/>cell_column);</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(slave_cell<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa406a5dc43875274fb9eaa3c941ce753" kindref="member">set_cell_type</ref>(slave_cell,<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref>);</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--hor_span;</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++cell_column;</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"></highlight></codeline>
<codeline lineno="5592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="5593"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"></highlight></codeline>
<codeline lineno="5595"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5596"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>print_row_separator_impl(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*upper_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*lower_row,</highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5" kindref="member">f_hor_separator_pos</ref><sp/>separatorPos,</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep)</highlight></codeline>
<codeline lineno="5601"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cntx);</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"></highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"></highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context<sp/>=<sp/>cntx-&gt;<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>;</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"></highlight></codeline>
<codeline lineno="5608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Get<sp/>cell<sp/>types</highlight></codeline>
<codeline lineno="5609"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5610"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>Regions<sp/>above<sp/>top<sp/>row<sp/>and<sp/>below<sp/>bottom<sp/>row<sp/>areconsidered<sp/>full<sp/>of<sp/>virtual</highlight></codeline>
<codeline lineno="5611"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>GROUP_SLAVE_CELL<sp/>cells</highlight></codeline>
<codeline lineno="5612"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>*top_row_types<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>*)<ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref>)<sp/>*<sp/>cols<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_row_types<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4" kindref="member">f_cell_type</ref><sp/>*bottom_row_types<sp/>=<sp/>top_row_types<sp/>+<sp/>cols;</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper_row)<sp/>{</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a187174d63ce94aa162d2468933cd3cbc" kindref="member">get_row_cell_types</ref>(upper_row,<sp/>top_row_types,<sp/>cols);</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols;<sp/>++i)</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>top_row_types[i]<sp/>=<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref>;</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower_row)<sp/>{</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a187174d63ce94aa162d2468933cd3cbc" kindref="member">get_row_cell_types</ref>(lower_row,<sp/>bottom_row_types,<sp/>cols);</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols;<sp/>++i)</highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bottom_row_types[i]<sp/>=<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref>;</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"></highlight></codeline>
<codeline lineno="5633"><highlight class="normal"></highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/>*entire_tprops<sp/>=<sp/>&amp;properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>;</highlight></codeline>
<codeline lineno="5636"><highlight class="normal"></highlight></codeline>
<codeline lineno="5637"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5639"><highlight class="normal"></highlight></codeline>
<codeline lineno="5640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref><sp/>lower_row_type<sp/>=<sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34ae50a530e078dd8425784ca02e66d2433" kindref="member">FT_ROW_COMMON</ref>;</highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower_row<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lower_row_type<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref>)<ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>,<sp/><ref refid="fort_8h_1abd5e4b5a6cb494024967f9d22a50c708" kindref="member">FT_CPROP_ROW_TYPE</ref>);</highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref><sp/>upper_row_type<sp/>=<sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34ae50a530e078dd8425784ca02e66d2433" kindref="member">FT_ROW_COMMON</ref>;</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper_row<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upper_row_type<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref>)<ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref><sp/>-<sp/>1,<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>,<sp/><ref refid="fort_8h_1abd5e4b5a6cb494024967f9d22a50c708" kindref="member">FT_CPROP_ROW_TYPE</ref>);</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"></highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Row<sp/>separator<sp/>anatomy</highlight></codeline>
<codeline lineno="5650"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="5651"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>C11<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>C12<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C13<sp/><sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>C14<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C15<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="5652"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>L<sp/><sp/>I<sp/><sp/>I<sp/><sp/>I<sp/><sp/><sp/>IV<sp/><sp/>I<sp/><sp/><sp/>I<sp/><sp/><sp/>IT<sp/><sp/>I<sp/><sp/>I<sp/><sp/>I<sp/><sp/>IB<sp/><sp/><sp/><sp/>I<sp/><sp/><sp/><sp/>I<sp/><sp/><sp/><sp/><sp/>II<sp/><sp/><sp/><sp/>I<sp/><sp/><sp/><sp/>I<sp/><sp/><sp/><sp/><sp/>R</highlight></codeline>
<codeline lineno="5653"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>|<sp/><sp/><sp/><sp/><sp/><sp/>C21<sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>C22<sp/><sp/><sp/><sp/><sp/>|<sp/><sp/><sp/>C23<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C24<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>C25<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|</highlight></codeline>
<codeline lineno="5654"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**L<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**I<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**IV<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**IT<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**IB<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**II<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"></highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfort__border__style" kindref="compound">fort_border_style</ref><sp/>*border_style<sp/>=<sp/>&amp;properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>;</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"></highlight></codeline>
<codeline lineno="5665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(*border_chars_point_t)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>];</highlight></codeline>
<codeline lineno="5666"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>]<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfort__border__style_1ad9cb9c8195dabd4fb4698c2b2410d9e8" kindref="member">border_chars</ref><sp/>=<sp/>(border_chars_point_t)&amp;border_style-&gt;<ref refid="structfort__border__style_1ad9cb9c8195dabd4fb4698c2b2410d9e8" kindref="member">border_chars</ref>;</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/>if<sp/>(upper_row_type<sp/>==<sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34a2a0a31078eac88202029c3e9bdaa614a" kindref="member">FT_ROW_HEADER</ref><sp/>||<sp/>lower_row_type<sp/>==<sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34a2a0a31078eac88202029c3e9bdaa614a" kindref="member">FT_ROW_HEADER</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structfort__border__style_1ad9cb9c8195dabd4fb4698c2b2410d9e8" kindref="member">border_chars</ref><sp/>=<sp/>(border_chars_point_t)&amp;border_style-&gt;<ref refid="structfort__border__style_1a1c9522cfeb12351002e6e0a67c192175" kindref="member">header_border_chars</ref>;</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"></highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sep<sp/>&amp;&amp;<sp/>sep-&gt;<ref refid="structf__separator_1a03e6cca0c879c0443efb431c30c14f76" kindref="member">enabled</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>&amp;(border_style-&gt;<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5bdf3707d8c0c144baceb9b432b080b" kindref="member">LH_sip</ref>]);</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/>&amp;(border_style-&gt;<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a6edb298364e9b2705453e4fd3d764894" kindref="member">IH_sip</ref>]);</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/>=<sp/>&amp;(border_style-&gt;<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35ae795b75c17ff1dc6b1d7a94e0db120e6" kindref="member">II_sip</ref>]);</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>&amp;(border_style-&gt;<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a9ef36a4ef68f74f53f7153992ac80c2e" kindref="member">RH_sip</ref>]);</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"></highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IT<sp/>=<sp/>&amp;(border_style-&gt;<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a4dd526ac15d2f95dda29b58a7969250c" kindref="member">TI_sip</ref>]);</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IB<sp/>=<sp/>&amp;(border_style-&gt;<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35af5c00304dc6ed19e75613b993f3b8510" kindref="member">BI_sip</ref>]);</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>II<sp/>=<sp/>&amp;(border_style-&gt;<ref refid="structfort__border__style_1ae3447882221c2df968c612e36e65ed96" kindref="member">separator_chars</ref>[<ref refid="fort_8c_1a50e65894fa1562b8b5c3a78899509c35a6edb298364e9b2705453e4fd3d764894" kindref="member">IH_sip</ref>]);</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"></highlight></codeline>
<codeline lineno="5682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(lower_row<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6" kindref="member">BL_bip</ref>];</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677" kindref="member">BR_bip</ref>];</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(upper_row<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08" kindref="member">TL_bip</ref>];</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac" kindref="member">TR_bip</ref>];</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(separatorPos)<sp/>{</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a20da53267127001ec3320abe91fa783e" kindref="member">TOP_SEPARATOR</ref>:</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1ec0255840e5ab81cff847681a715b08" kindref="member">TL_bip</ref>];</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4" kindref="member">TT_bip</ref>];</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b" kindref="member">TV_bip</ref>];</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a22d4696994865fe8121ec409e148bfac" kindref="member">TR_bip</ref>];</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"></highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IT<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b" kindref="member">TV_bip</ref>];</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IB<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a649b973e5f4975036c8271fc94243b3b" kindref="member">TV_bip</ref>];</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>II<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a17451858f18bd17d08f1b9c9677f6fe4" kindref="member">TT_bip</ref>];</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a23c6c5d09adaa5a3c4176c0b67263769" kindref="member">INSIDE_SEPARATOR</ref>:</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a39a100939802cb577416e58d02938056" kindref="member">LH_bip</ref>];</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445" kindref="member">IH_bip</ref>];</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a1496ce55ebf0dc1c90c6f8abd60ea272" kindref="member">II_bip</ref>];</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a8284e2f20ee28045694355f5c74bc1a5" kindref="member">RH_bip</ref>];</highlight></codeline>
<codeline lineno="5706"><highlight class="normal"></highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IT<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a9c128d27d24141f9c2df703a42521835" kindref="member">TI_bip</ref>];</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IB<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a46945f957ff717cbf501e5a59d0f8e1d" kindref="member">BI_bip</ref>];</highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>II<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a11e0bf08571e805873e7e8c2772e1445" kindref="member">IH_bip</ref>];</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5a84ba29422768fd8057cd7d8f3239e59c" kindref="member">BOTTOM_SEPARATOR</ref>:</highlight></codeline>
<codeline lineno="5712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>L<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ab1ee2d1f7d29465d2d1f9c6a4c2037b6" kindref="member">BL_bip</ref>];</highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>I<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472" kindref="member">BB_bip</ref>];</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IV<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517" kindref="member">BV_bip</ref>];</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>R<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a675b8ffdf47d8160e8ab3f5493b97677" kindref="member">BR_bip</ref>];</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"></highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IT<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517" kindref="member">BV_bip</ref>];</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IB<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ac101b442110364e7401b8b2d61730517" kindref="member">BV_bip</ref>];</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>II<sp/>=<sp/>&amp;(*border_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29ae48f39d06e91b11b022fda6d6d373472" kindref="member">BB_bip</ref>];</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"></highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"></highlight></codeline>
<codeline lineno="5728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>all<sp/>chars<sp/>are<sp/>not<sp/>printable,<sp/>skip<sp/>line<sp/>separator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>NOTE:<sp/>argument<sp/>of<sp/>`isprint`<sp/>should<sp/>be<sp/>explicitly<sp/>converted<sp/>to</highlight></codeline>
<codeline lineno="5730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>unsigned<sp/>char<sp/>according<sp/>to</highlight></codeline>
<codeline lineno="5731"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>https://en.cppreference.com/w/c/string/byte/isprint</highlight></codeline>
<codeline lineno="5732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5733"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((strlen(*L)<sp/>==<sp/>0<sp/>||<sp/>(strlen(*L)<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!isprint((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>**L)))</highlight></codeline>
<codeline lineno="5734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(strlen(*I)<sp/>==<sp/>0<sp/>||<sp/>(strlen(*I)<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!isprint((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>**I)))</highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(strlen(*IV)<sp/>==<sp/>0<sp/>||<sp/>(strlen(*IV)<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!isprint((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>**IV)))</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(strlen(*R)<sp/>==<sp/>0<sp/>||<sp/>(strlen(*R)<sp/>==<sp/>1<sp/>&amp;&amp;<sp/>!isprint((</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>**R))))<sp/>{</highlight></codeline>
<codeline lineno="5737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"></highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>left<sp/>margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>entire_tprops-&gt;<ref refid="structfort__entire__table__properties_1a87484e19e9dff2efeabfbbcfdc0c0f80" kindref="member">left_margin</ref>,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"></highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*L));</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((top_row_types[i]<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc" kindref="member">COMMON_CELL</ref><sp/>||<sp/>top_row_types[i]<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" kindref="member">GROUP_MASTER_CELL</ref>)</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>(bottom_row_types[i]<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc" kindref="member">COMMON_CELL</ref><sp/>||<sp/>bottom_row_types[i]<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" kindref="member">GROUP_MASTER_CELL</ref>))<sp/>{</highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*IV));</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_row_types[i]<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref><sp/>&amp;&amp;<sp/>bottom_row_types[i]<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*II));</highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(top_row_types[i]<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*IT));</highlight></codeline>
<codeline lineno="5755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*IB));</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>col_width_arr[i],<sp/>*I));</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*R));</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"></highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>right<sp/>margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>entire_tprops-&gt;<ref refid="structfort__entire__table__properties_1a3d505e3f1169ea3f86ecf36aefe24be3" kindref="member">right_margin</ref>,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"></highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/><ref refid="fort_8c_1a0474dfa1c9848f892832d4babf0e3cd8" kindref="member">FT_NEWLINE</ref>));</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"></highlight></codeline>
<codeline lineno="5768"><highlight class="normal"><sp/><sp/><sp/><sp/>status<sp/>=<sp/>(int)written;</highlight></codeline>
<codeline lineno="5769"><highlight class="normal"></highlight></codeline>
<codeline lineno="5770"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="5771"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(top_row_types);</highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="5773"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"></highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5776"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a76b7a5fc469d3f72bedcefc8f97a8e58" kindref="member">print_row_separator</ref>(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols,</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*upper_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*lower_row,</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a114ae9015942e72d33913dbca07d18f5" kindref="member">f_hor_separator_pos</ref><sp/>separatorPos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep)</highlight></codeline>
<codeline lineno="5780"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>print_row_separator_impl(cntx,<sp/>col_width_arr,<sp/>cols,<sp/>upper_row,<sp/>lower_row,</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separatorPos,<sp/>sep);</highlight></codeline>
<codeline lineno="5783"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"></highlight></codeline>
<codeline lineno="5785"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a727e646203a4b57b987d1da7ef5fb700" kindref="member">create_row_from_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="5787"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>char_type;</highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*(*strdup_)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type<sp/>*<sp/>str)<sp/>=<sp/><ref refid="fort_8c_1a6b396d87fd0d7c48631754638ecf17f2" kindref="member">F_STRDUP</ref>;</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type<sp/>zero_char<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref>(*fill_cell_from_string_)(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>=<sp/><ref refid="fort_8c_1a3bde4232e71f4b585df25c0253128137" kindref="member">fill_cell_from_string</ref>;</highlight></codeline>
<codeline lineno="5792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zero_string<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5793"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRCHR<sp/>strchr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5794"><highlight class="normal"></highlight></codeline>
<codeline lineno="5795"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*pos<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5796"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*base_pos<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>number_of_separators<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5798"><highlight class="normal"></highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>();</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"></highlight></codeline>
<codeline lineno="5803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="5805"><highlight class="normal"></highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*str_copy<sp/>=<sp/>strdup_(str);</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5809"><highlight class="normal"></highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>str_copy;</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/><sp/><sp/>base_pos<sp/>=<sp/>str_copy;</highlight></codeline>
<codeline lineno="5812"><highlight class="normal"><sp/><sp/><sp/><sp/>number_of_separators<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pos)<sp/>{</highlight></codeline>
<codeline lineno="5814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/><ref refid="fort_8c_1a1acd15654d584ab951286e96248e5c9c" kindref="member">STRCHR</ref>(pos,<sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref>);</highlight></codeline>
<codeline lineno="5815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pos)<sp/>=<sp/>zero_char;</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="5818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_of_separators++;</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"></highlight></codeline>
<codeline lineno="5821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="5822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5824"><highlight class="normal"></highlight></codeline>
<codeline lineno="5825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>fill_cell_from_string_(cell,<sp/>base_pos);</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5830"><highlight class="normal"></highlight></codeline>
<codeline lineno="5831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;cell);</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5834"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"></highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5841"><highlight class="normal"></highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>if<sp/>in<sp/>format<sp/>string<sp/>last<sp/>cell<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>)<sp/>&lt;<sp/>(number_of_separators<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"></highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>fill_cell_from_string_(cell,<sp/>zero_string);</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5853"><highlight class="normal"></highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;cell);</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"></highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(str_copy);</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"></highlight></codeline>
<codeline lineno="5864"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(row);</highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(str_copy);</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"></highlight></codeline>
<codeline lineno="5869"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STRCHR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5870"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"></highlight></codeline>
<codeline lineno="5872"><highlight class="normal"></highlight></codeline>
<codeline lineno="5873"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1ad094494ea525a6a511399b4bf8aac45c" kindref="member">create_row_from_wstring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="5876"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>char_type;</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*(*strdup_)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type<sp/>*<sp/>str)<sp/>=<sp/><ref refid="fort_8c_1a62f4a36b4f123d858a97f079fda2834f" kindref="member">F_WCSDUP</ref>;</highlight></codeline>
<codeline lineno="5879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type<sp/>zero_char<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref>(*fill_cell_from_string_)(<ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str)<sp/>=<sp/><ref refid="fort_8c_1ae884baeeef1f6d0aa11118c89df4ae25" kindref="member">fill_cell_from_wstring</ref>;</highlight></codeline>
<codeline lineno="5881"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>char_type<sp/>*</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>zero_string<sp/>=<sp/>L</highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5882"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>STRCHR<sp/>wcschr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5883"><highlight class="normal"></highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*pos<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*base_pos<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>number_of_separators<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>();</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"></highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"></highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/>char_type<sp/>*str_copy<sp/>=<sp/>strdup_(str);</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5898"><highlight class="normal"></highlight></codeline>
<codeline lineno="5899"><highlight class="normal"><sp/><sp/><sp/><sp/>pos<sp/>=<sp/>str_copy;</highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><sp/><sp/>base_pos<sp/>=<sp/>str_copy;</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"><sp/><sp/><sp/><sp/>number_of_separators<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*pos)<sp/>{</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/>=<sp/><ref refid="fort_8c_1a1acd15654d584ab951286e96248e5c9c" kindref="member">STRCHR</ref>(pos,<sp/><ref refid="fort_8c_1a75ae5722df432140a46c9ff1fe069570" kindref="member">g_col_separator</ref>);</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*(pos)<sp/>=<sp/>zero_char;</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++pos;</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>number_of_separators++;</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"></highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"></highlight></codeline>
<codeline lineno="5914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>fill_cell_from_string_(cell,<sp/>base_pos);</highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"></highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;cell);</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"></highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>base_pos<sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"></highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>special<sp/>case<sp/>if<sp/>in<sp/>format<sp/>string<sp/>last<sp/>cell<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>)<sp/>&lt;<sp/>(number_of_separators<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1add95ba36a0f2ad7d730320fe1e6a182e" kindref="member">create_cell</ref>();</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"></highlight></codeline>
<codeline lineno="5937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/>fill_cell_from_string_(cell,<sp/>zero_string);</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"></highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>&amp;cell);</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))<sp/>{</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a941e7d7921fd2ca180894fe481af986b" kindref="member">destroy_cell</ref>(cell);</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"></highlight></codeline>
<codeline lineno="5950"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(str_copy);</highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"></highlight></codeline>
<codeline lineno="5953"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(row);</highlight></codeline>
<codeline lineno="5955"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(str_copy);</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>STRCHR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5960"><highlight class="normal"></highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1ac2a338b2686d9caaf68f9812458af00d" kindref="member">create_row_from_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="5963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a727e646203a4b57b987d1da7ef5fb700" kindref="member">create_row_from_string</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>);</highlight></codeline>
<codeline lineno="5967"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ad094494ea525a6a511399b4bf8aac45c" kindref="member">create_row_from_wstring</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>);</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5971"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a727e646203a4b57b987d1da7ef5fb700" kindref="member">create_row_from_string</ref>((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>);</highlight></codeline>
<codeline lineno="5974"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"></highlight></codeline>
<codeline lineno="5981"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5982"><highlight class="normal">vsnprintf_buffer(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/>*fmt,</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>*va)</highlight></codeline>
<codeline lineno="5984"><highlight class="normal">{</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Disable<sp/>compiler<sp/>diagnostic<sp/>(format<sp/>string<sp/>is<sp/>not<sp/>a<sp/>string<sp/>literal)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5986"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_CLANG_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5987"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5988"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wformat-nonliteral&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5990"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_GCC_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5991"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>push</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5992"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>ignored<sp/>&quot;-Wformat-nonliteral&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5993"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width_capacity<sp/>=<sp/><ref refid="fort_8c_1a398a13f3db5a43bca6fecdc119f38a88" kindref="member">string_buffer_width_capacity</ref>(buffer);</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vsnprintf(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>,<sp/>width_capacity,<sp/>fmt-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa44363a2ad0a535a64170738a2d6e58d" kindref="member">cstr</ref>,<sp/>*va);</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vswprintf(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>,<sp/>width_capacity,<sp/>fmt-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1a0a19a0e48972c54f8faf0b433d5849dc" kindref="member">wstr</ref>,<sp/>*va);</highlight></codeline>
<codeline lineno="6001"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6002"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vsnprintf(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>,<sp/>width_capacity,<sp/>fmt-&gt;<ref refid="structf__string__view_1affad9cd42dfb6c87f001c39abfada73a" kindref="member">u</ref>.<ref refid="structf__string__view_1aa44363a2ad0a535a64170738a2d6e58d" kindref="member">cstr</ref>,<sp/>*va);</highlight></codeline>
<codeline lineno="6005"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_CLANG_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6011"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>clang<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6012"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6013"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_GCC_COMPILER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6014"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>GCC<sp/>diagnostic<sp/>pop</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6015"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"></highlight></codeline>
<codeline lineno="6018"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a6bf142ab10b212be6fb4214805b98945" kindref="member">create_row_from_fmt_string</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structf__string__view" kindref="compound">f_string_view</ref><sp/><sp/>*fmt,<sp/>va_list<sp/>*va_args)</highlight></codeline>
<codeline lineno="6020"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6021"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer<sp/>=<sp/><ref refid="fort_8c_1ac940e33b846028d55c174b9f7a2164f5" kindref="member">create_string_buffer</ref>(<ref refid="fort_8c_1aae64a8d6a29845f7f4aa2f1bc3e095dd" kindref="member">DEFAULT_STR_BUF_SIZE</ref>,<sp/>fmt-&gt;<ref refid="structf__string__view_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6024"><highlight class="normal"></highlight></codeline>
<codeline lineno="6025"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols_origin<sp/>=<sp/><ref refid="fort_8c_1a5140ca8ce544c7fe7fd8580b46eb7919" kindref="member">number_of_columns_in_format_string</ref>(fmt);</highlight></codeline>
<codeline lineno="6026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6027"><highlight class="normal"></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="6029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_list<sp/>va;</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_copy(va,<sp/>*va_args);</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>virtual_sz<sp/>=<sp/>vsnprintf_buffer(buffer,<sp/>fmt,<sp/>&amp;va);</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>va_end(va);</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>If<sp/>error<sp/>encountered<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(virtual_sz<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="6036"><highlight class="normal"></highlight></codeline>
<codeline lineno="6037"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Successful<sp/>write<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)virtual_sz<sp/>&lt;<sp/><ref refid="fort_8c_1a398a13f3db5a43bca6fecdc119f38a88" kindref="member">string_buffer_width_capacity</ref>(buffer))</highlight></codeline>
<codeline lineno="6039"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6040"><highlight class="normal"></highlight></codeline>
<codeline lineno="6041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Otherwise<sp/>buffer<sp/>was<sp/>too<sp/>small,<sp/>so<sp/>incr.<sp/>buffer<sp/>size<sp/>ant<sp/>try<sp/>again.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="fort_8h_1a5c6f8ddf4b77763f2a8ab042db36f482" kindref="member">FT_IS_SUCCESS</ref>(<ref refid="fort_8c_1a97de898073d1711de1d55369dfc067c7" kindref="member">realloc_string_buffer_without_copy</ref>(buffer)))</highlight></codeline>
<codeline lineno="6043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="6044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6045"><highlight class="normal"></highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/>cols<sp/>=<sp/><ref refid="fort_8c_1a99b4b352713722a3c4bd74f977dcddfb" kindref="member">number_of_columns_in_format_buffer</ref>(buffer);</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cols<sp/>==<sp/>cols_origin)<sp/>{</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1ac2a338b2686d9caaf68f9812458af00d" kindref="member">create_row_from_buffer</ref>(buffer);</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6052"><highlight class="normal"></highlight></codeline>
<codeline lineno="6053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(buffer);</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="6055"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6056"><highlight class="normal"></highlight></codeline>
<codeline lineno="6057"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cols_origin<sp/>==<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="6058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>();</highlight></codeline>
<codeline lineno="6059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="6061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"></highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0" kindref="member">get_cell_and_create_if_not_exists</ref>(row,<sp/>0);</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(row);</highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"></highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/>result<sp/>=<sp/><ref refid="fort_8c_1ae2f26d50cef40dd4f5bb349631c6eeda" kindref="member">fill_cell_from_buffer</ref>(cell,<sp/>buffer);</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(result))<sp/>{</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(row);</highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">goto</highlight><highlight class="normal"><sp/>clear;</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"></highlight></codeline>
<codeline lineno="6075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(buffer);</highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>row;</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"></highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="6080"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>todo:<sp/>add<sp/>processing<sp/>of<sp/>cols<sp/>!=<sp/>cols_origin<sp/>in<sp/>a<sp/>general<sp/>way</highlight></codeline>
<codeline lineno="6081"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>(when<sp/>cols_origin<sp/>!=<sp/>1).</highlight></codeline>
<codeline lineno="6082"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6083"><highlight class="normal"></highlight></codeline>
<codeline lineno="6084"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(buffer);</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6087"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"></highlight></codeline>
<codeline lineno="6089"><highlight class="normal"></highlight></codeline>
<codeline lineno="6090"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6091"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ac95471ef7b950b73451dc4aaf3a0e6f3" kindref="member">snprintf_row</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row,<sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col_width_arr_sz,</highlight></codeline>
<codeline lineno="6092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_height)</highlight></codeline>
<codeline lineno="6093"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6094"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context<sp/>=<sp/>cntx-&gt;<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>;</highlight></codeline>
<codeline lineno="6095"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(context);</highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight></codeline>
<codeline lineno="6097"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"></highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols_in_row<sp/>=<sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(row);</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cols_in_row<sp/>&gt;<sp/>col_width_arr_sz)</highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"></highlight></codeline>
<codeline lineno="6104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/><sp/>Row<sp/>separator<sp/>anatomy</highlight></codeline>
<codeline lineno="6105"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="6106"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>L<sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/>IV<sp/><sp/><sp/><sp/>data<sp/><sp/><sp/>IV<sp/><sp/><sp/>data<sp/><sp/><sp/><sp/>R</highlight></codeline>
<codeline lineno="6107"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"></highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(*border_chars_point_t)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>];</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref><sp/>row_type<sp/>=<sp/>(</highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34" kindref="member">ft_row_type</ref>)<ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(properties,<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/><ref refid="fort_8h_1ad5b6b32262309f37874d11369f47c7a5" kindref="member">FT_ANY_COLUMN</ref>,<sp/><ref refid="fort_8h_1abd5e4b5a6cb494024967f9d22a50c708" kindref="member">FT_CPROP_ROW_TYPE</ref>);</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*(*bord_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a56d2b99637c35906282c659f4edb5652" kindref="member">BORDER_ITEM_POS_SIZE</ref>]<sp/>=<sp/>(row_type<sp/>==<sp/><ref refid="fort_8h_1a06d9536a2e476d68f5055820535d3b34a2a0a31078eac88202029c3e9bdaa614a" kindref="member">FT_ROW_HEADER</ref>)</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(border_chars_point_t)(&amp;properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>.<ref refid="structfort__border__style_1a1c9522cfeb12351002e6e0a67c192175" kindref="member">header_border_chars</ref>)</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>(border_chars_point_t)(&amp;properties-&gt;<ref refid="structf__table__properties_1a58f57f6a9e9774a494bca8ec6cf1297e" kindref="member">border_style</ref>.<ref refid="structfort__border__style_1ad9cb9c8195dabd4fb4698c2b2410d9e8" kindref="member">border_chars</ref>);</highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**L<sp/>=<sp/>&amp;(*bord_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a889a1c24be63ae17b128192d9dec2d3a" kindref="member">LL_bip</ref>];</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**IV<sp/>=<sp/>&amp;(*bord_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29aad183d45427b545df2fd25ed9ecccc8c" kindref="member">IV_bip</ref>];</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**R<sp/>=<sp/>&amp;(*bord_chars)[<ref refid="fort_8c_1aeb26e59c445583e1b4924086f650bc29a062e9c55d54121d574a4b8f244c2d964" kindref="member">RR_bip</ref>];</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"></highlight></codeline>
<codeline lineno="6119"><highlight class="normal"></highlight></codeline>
<codeline lineno="6120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6123"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/>*entire_tprops<sp/>=<sp/>&amp;context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>;</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>row_height;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>left<sp/>margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>entire_tprops-&gt;<ref refid="structfort__entire__table__properties_1a87484e19e9dff2efeabfbbcfdc0c0f80" kindref="member">left_margin</ref>,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"></highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>left<sp/>table<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*L));</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>col_width_arr_sz)<sp/>{</highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>cols_in_row)<sp/>{</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((<ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*)context)-&gt;column<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(row-&gt;<ref refid="structf__row_1af69e5feee90fe03458ea6994bc804df4" kindref="member">cells</ref>,<sp/>j,<sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6136"><highlight class="normal"></highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>group_slave_sz<sp/>=<sp/><ref refid="fort_8c_1ab36a4052c23098fca6dce54d6201d96b" kindref="member">group_cell_number</ref>(row,<sp/>j);</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref><sp/>=<sp/>col_width_arr[j];</highlight></codeline>
<codeline lineno="6139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slave_j<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>master_j<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="6141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(slave_j<sp/>=<sp/>master_j<sp/>+<sp/>1;<sp/>slave_j<sp/>&lt;<sp/>(master_j<sp/>+<sp/>group_slave_sz);<sp/>++slave_j)<sp/>{</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref><sp/>+=<sp/>col_width_arr[slave_j]<sp/>+<sp/><ref refid="fort_8c_1ac22fb60cd88090750f4536ce213d7076" kindref="member">FORT_COL_SEPARATOR_LENGTH</ref>;</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"></highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a9f85d4d29e5835229f6127609a265c02" kindref="member">cell_printf</ref>(cell,<sp/>i,<sp/>cntx,<sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref>));</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>empty<sp/>cell<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>col_width_arr[j],<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"></highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>boundary<sp/>between<sp/>cells<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(j<sp/>&lt;<sp/>col_width_arr_sz<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*IV));</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"></highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++j;</highlight></codeline>
<codeline lineno="6157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"></highlight></codeline>
<codeline lineno="6159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>right<sp/>table<sp/>boundary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>*R));</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"></highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>right<sp/>margin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>entire_tprops-&gt;<ref refid="structfort__entire__table__properties_1a3d505e3f1169ea3f86ecf36aefe24be3" kindref="member">right_margin</ref>,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"></highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Print<sp/>new<sp/>line<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/><ref refid="fort_8c_1a0474dfa1c9848f892832d4babf0e3cd8" kindref="member">FT_NEWLINE</ref>));</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)written;</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"></highlight></codeline>
<codeline lineno="6170"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6172"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"></highlight></codeline>
<codeline lineno="6174"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="6175"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;row.c&quot;</highlight></codeline>
<codeline lineno="6176"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6177"><highlight class="normal"></highlight></codeline>
<codeline lineno="6178"><highlight class="normal"></highlight></codeline>
<codeline lineno="6179"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="6180"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;string_buffer.c&quot;</highlight></codeline>
<codeline lineno="6181"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6182"><highlight class="normal"></highlight></codeline>
<codeline lineno="6183"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;string_buffer.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;properties.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6185"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;wcwidth.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6186"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6187"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6188"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6189"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wchar.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6190"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6191"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6192"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;utf8.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6194"><highlight class="normal"></highlight></codeline>
<codeline lineno="6195"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/>str_iter_width(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end)</highlight></codeline>
<codeline lineno="6196"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(end<sp/>&gt;=<sp/>beg);</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(end<sp/>-<sp/>beg);</highlight></codeline>
<codeline lineno="6199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"></highlight></codeline>
<codeline lineno="6201"><highlight class="normal"></highlight></codeline>
<codeline lineno="6202"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6203"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>ptrdiff_t<sp/>wcs_iter_width(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*end)</highlight></codeline>
<codeline lineno="6204"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(end<sp/>&gt;=<sp/>beg);</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a8c6234fb096b466971193e24d3f9c85b" kindref="member">mk_wcswidth</ref>(beg,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(end<sp/>-<sp/>beg));</highlight></codeline>
<codeline lineno="6207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6208"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6209"><highlight class="normal"></highlight></codeline>
<codeline lineno="6210"><highlight class="normal"></highlight></codeline>
<codeline lineno="6211"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buf_str_len(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buf)</highlight></codeline>
<codeline lineno="6212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buf);</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"></highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buf-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>strlen(buf-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>);</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>wcslen(buf-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>);</highlight></codeline>
<codeline lineno="6221"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6222"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acf9a71744695b4e13bd8fe284f6493f5" kindref="member">utf8len</ref>(buf-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>);</highlight></codeline>
<codeline lineno="6225"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6227"><highlight class="normal"></highlight></codeline>
<codeline lineno="6228"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"></highlight></codeline>
<codeline lineno="6232"><highlight class="normal"></highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6234"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae289954698a8c45f5e5b8691dfb3c158" kindref="member">strchr_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="6235"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6238"><highlight class="normal"></highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>strchr(str,<sp/>ch);</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str)<sp/>{</highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="6244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>strchr(str,<sp/>ch);</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6246"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="6247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"></highlight></codeline>
<codeline lineno="6249"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6251"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a8ca255a1bafc7d73de3e0dcc4736f992" kindref="member">wstrchr_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>ch)</highlight></codeline>
<codeline lineno="6252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6255"><highlight class="normal"></highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>wcschr(str,<sp/>ch);</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str)<sp/>{</highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="6261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>wcschr(str,<sp/>ch);</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6263"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="6264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6266"><highlight class="normal"></highlight></codeline>
<codeline lineno="6267"><highlight class="normal"></highlight></codeline>
<codeline lineno="6268"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6269"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>todo:<sp/>do<sp/>something<sp/>with<sp/>code<sp/>below!!!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6270"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a9902d63c0d741e454d99a080cda0ee3f" kindref="member">ut8next</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="6272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>out_codepoint;</highlight></codeline>
<codeline lineno="6274"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a1d32516c9d2e05071fd357ed5baacc2e" kindref="member">utf8codepoint</ref>(str,<sp/>&amp;out_codepoint);</highlight></codeline>
<codeline lineno="6275"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"></highlight></codeline>
<codeline lineno="6277"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6278"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af2542674afdd3d9ad6961fb066dd6c4d" kindref="member">utf8chr_count</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>ch)</highlight></codeline>
<codeline lineno="6279"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6282"><highlight class="normal"></highlight></codeline>
<codeline lineno="6283"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>count<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(str,<sp/>ch);</highlight></codeline>
<codeline lineno="6285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str)<sp/>{</highlight></codeline>
<codeline lineno="6286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count++;</highlight></codeline>
<codeline lineno="6287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a9902d63c0d741e454d99a080cda0ee3f" kindref="member">ut8next</ref>(str);</highlight></codeline>
<codeline lineno="6288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(str,<sp/>ch);</highlight></codeline>
<codeline lineno="6289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>count;</highlight></codeline>
<codeline lineno="6291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6293"><highlight class="normal"></highlight></codeline>
<codeline lineno="6294"><highlight class="normal"></highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6296"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a119606a116660b7fff9cca27c427938e" kindref="member">str_n_substring_beg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch_separator,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="6297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"></highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"></highlight></codeline>
<codeline lineno="6304"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>strchr(str,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>strchr(str,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str<sp/>?<sp/>(str<sp/>+<sp/>1)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="6314"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6315"><highlight class="normal"></highlight></codeline>
<codeline lineno="6316"><highlight class="normal"></highlight></codeline>
<codeline lineno="6317"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6319"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1afa36de19c4268bd2e49fb76ff812b61e" kindref="member">wstr_n_substring_beg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>ch_separator,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="6320"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"></highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"></highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/>wcschr(str,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str++;</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/>wcschr(str,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str<sp/>?<sp/>(str<sp/>+<sp/>1)<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="6337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6339"><highlight class="normal"></highlight></codeline>
<codeline lineno="6340"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6342"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1ab80403e5752df2019a950e8d4bfd6d02" kindref="member">utf8_n_substring_beg</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>ch_separator,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="6343"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6346"><highlight class="normal"></highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str;</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"></highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(str,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(n<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--n;</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a9902d63c0d741e454d99a080cda0ee3f" kindref="member">ut8next</ref>(str);</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str<sp/>=<sp/><ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(str,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str<sp/>?<sp/>(<ref refid="fort_8c_1a9902d63c0d741e454d99a080cda0ee3f" kindref="member">ut8next</ref>(str))<sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="6360"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6362"><highlight class="normal"></highlight></codeline>
<codeline lineno="6363"><highlight class="normal"></highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6365"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a813d4ec1a357d5ea24ab7f3abd339dfe" kindref="member">str_n_substring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ch_separator,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**end)</highlight></codeline>
<codeline lineno="6366"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*beg<sp/>=<sp/><ref refid="fort_8c_1a119606a116660b7fff9cca27c427938e" kindref="member">str_n_substring_beg</ref>(str,<sp/>ch_separator,<sp/>n);</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*begin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"></highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*en<sp/>=<sp/>strchr(beg,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(en<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en<sp/>=<sp/>str<sp/>+<sp/>strlen(str);</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"></highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/><sp/><sp/>*begin<sp/>=<sp/>beg;</highlight></codeline>
<codeline lineno="6380"><highlight class="normal"><sp/><sp/><sp/><sp/>*end<sp/>=<sp/>en;</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"></highlight></codeline>
<codeline lineno="6384"><highlight class="normal"></highlight></codeline>
<codeline lineno="6385"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6386"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1abf373d518201debe18cd197815ca9ac5" kindref="member">wstr_n_substring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str,<sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>ch_separator,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**end)</highlight></codeline>
<codeline lineno="6388"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*beg<sp/>=<sp/><ref refid="fort_8c_1afa36de19c4268bd2e49fb76ff812b61e" kindref="member">wstr_n_substring_beg</ref>(str,<sp/>ch_separator,<sp/>n);</highlight></codeline>
<codeline lineno="6390"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*begin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6394"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"></highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*en<sp/>=<sp/>wcschr(beg,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(en<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en<sp/>=<sp/>str<sp/>+<sp/>wcslen(str);</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"></highlight></codeline>
<codeline lineno="6401"><highlight class="normal"><sp/><sp/><sp/><sp/>*begin<sp/>=<sp/>beg;</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"><sp/><sp/><sp/><sp/>*end<sp/>=<sp/>en;</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6404"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6405"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6406"><highlight class="normal"></highlight></codeline>
<codeline lineno="6407"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(FT_HAVE_UTF8)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ad9fad63df44484d04f254de1a6e25e91" kindref="member">utf8_n_substring</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str,<sp/><ref refid="fort_8c_1a3da3a66d7d414df5608bad52de75cc94" kindref="member">utf8_int32_t</ref><sp/>ch_separator,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**end)</highlight></codeline>
<codeline lineno="6410"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*beg<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1ab80403e5752df2019a950e8d4bfd6d02" kindref="member">utf8_n_substring_beg</ref>(str,<sp/>ch_separator,<sp/>n);</highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beg<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*begin<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"></highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*en<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a26d8cb716ec6b80b8e1ecc0d242de961" kindref="member">utf8chr</ref>(beg,<sp/>ch_separator);</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(en<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>en<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str<sp/>+<sp/>strlen((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)str);</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"></highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/>*begin<sp/>=<sp/>beg;</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/>*end<sp/>=<sp/>en;</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6426"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6428"><highlight class="normal"></highlight></codeline>
<codeline lineno="6429"><highlight class="normal"></highlight></codeline>
<codeline lineno="6430"><highlight class="normal"></highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1ac940e33b846028d55c174b9f7a2164f5" kindref="member">create_string_buffer</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n_chars,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aa" kindref="member">f_string_type</ref><sp/>type)</highlight></codeline>
<codeline lineno="6433"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>char_sz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_sz<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_sz<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t);</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6444"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>char_sz<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"></highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>n_chars<sp/>*<sp/>char_sz;</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*result<sp/>=<sp/>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*)<ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref>));</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref><sp/>=<sp/><ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(sz);</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(result);</highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref><sp/>=<sp/>sz;</highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"></highlight></codeline>
<codeline lineno="6463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sz)<sp/>{</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(type)<sp/>{</highlight></codeline>
<codeline lineno="6465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>[0]<sp/>=<sp/>L</highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6473"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>[0]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6480"><highlight class="normal"></highlight></codeline>
<codeline lineno="6481"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6482"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"></highlight></codeline>
<codeline lineno="6484"><highlight class="normal"></highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6486"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(buffer);</highlight></codeline>
<codeline lineno="6493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6494"><highlight class="normal"></highlight></codeline>
<codeline lineno="6495"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6496"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1a414a5ce9226b67140bda7955ff1b21e5" kindref="member">copy_string_buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6497"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6498"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*result<sp/>=<sp/><ref refid="fort_8c_1ac940e33b846028d55c174b9f7a2164f5" kindref="member">create_string_buffer</ref>(buffer-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref>,<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>);</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(result<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a97269d36ab50d310bd99d9949d14489e" kindref="member">fill_buffer_from_string</ref>(result,<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(result);</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9" kindref="member">fill_buffer_from_wstring</ref>(result,<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(result);</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6516"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aa2c482e66f3237521dbdfbab4211f434" kindref="member">destroy_string_buffer</ref>(result);</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6522"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6523"><highlight class="normal"></highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a97de898073d1711de1d55369dfc067c7" kindref="member">realloc_string_buffer_without_copy</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6526"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*new_str<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(buffer-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref><sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_str<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref><sp/>=<sp/>new_str;</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref><sp/>*=<sp/>2;</highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="6536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6537"><highlight class="normal"></highlight></codeline>
<codeline lineno="6538"><highlight class="normal"></highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a97269d36ab50d310bd99d9949d14489e" kindref="member">fill_buffer_from_string</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="6541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(str);</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"></highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*copy<sp/>=<sp/><ref refid="fort_8c_1a6b396d87fd0d7c48631754638ecf17f2" kindref="member">F_STRDUP</ref>(str);</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="6548"><highlight class="normal"></highlight></codeline>
<codeline lineno="6549"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="6550"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref><sp/>=<sp/>copy;</highlight></codeline>
<codeline lineno="6551"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"></highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="6554"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6555"><highlight class="normal"></highlight></codeline>
<codeline lineno="6556"><highlight class="normal"></highlight></codeline>
<codeline lineno="6557"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a8fc30ad88cfc706d2a96e04f1cd159e9" kindref="member">fill_buffer_from_wstring</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="6560"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(str);</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"></highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*copy<sp/>=<sp/><ref refid="fort_8c_1a62f4a36b4f123d858a97f079fda2834f" kindref="member">F_WCSDUP</ref>(str);</highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="6567"><highlight class="normal"></highlight></codeline>
<codeline lineno="6568"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="6569"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref><sp/>=<sp/>copy;</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>;</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"></highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="6573"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6575"><highlight class="normal"></highlight></codeline>
<codeline lineno="6576"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6578"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a026f474e0d6b4c90c792a8833dde496c" kindref="member">fill_buffer_from_u8string</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*str)</highlight></codeline>
<codeline lineno="6579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(str);</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"></highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*copy<sp/>=<sp/><ref refid="fort_8c_1a273fee17f4143f522a4cb3c67a05aa1a" kindref="member">F_UTF8DUP</ref>(str);</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copy<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"></highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>);</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref><sp/>=<sp/>copy;</highlight></codeline>
<codeline lineno="6589"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>=<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>;</highlight></codeline>
<codeline lineno="6590"><highlight class="normal"></highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="6592"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6594"><highlight class="normal"></highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6596"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b" kindref="member">buffer_text_visible_height</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6597"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL<sp/>||<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref><sp/>==<sp/>NULL<sp/>||<sp/>buf_str_len(buffer)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="6599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6600"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>==<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>)</highlight></codeline>
<codeline lineno="6602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/><ref refid="fort_8c_1ae289954698a8c45f5e5b8691dfb3c158" kindref="member">strchr_count</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6603"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>==<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>)</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/><ref refid="fort_8c_1a8ca255a1bafc7d73de3e0dcc4736f992" kindref="member">wstrchr_count</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>,<sp/>L</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6607"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>==<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>)</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+<sp/><ref refid="fort_8c_1af2542674afdd3d9ad6961fb066dd6c4d" kindref="member">utf8chr_count</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6611"><highlight class="normal"></highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6614"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"></highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6617"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acc99fa5ecb3035540808fb06ad4fa4e8" kindref="member">string_buffer_cod_width_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6618"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a398a13f3db5a43bca6fecdc119f38a88" kindref="member">string_buffer_width_capacity</ref>(buffer);</highlight></codeline>
<codeline lineno="6620"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6621"><highlight class="normal"></highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6623"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a66f99ddf13fdabb67f73a0a763307afb" kindref="member">string_buffer_raw_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6624"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref>;</highlight></codeline>
<codeline lineno="6626"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6627"><highlight class="normal"></highlight></codeline>
<codeline lineno="6628"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6629"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>User<sp/>provided<sp/>function<sp/>to<sp/>compute<sp/>utf8<sp/>string<sp/>visible<sp/>width<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>int<sp/>(*_custom_u8strwid)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width)<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"></highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0e13f6f3d616f84fa0bd43e23d604034" kindref="member">buffer_set_u8strwid_func</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>(*u8strwid)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width))</highlight></codeline>
<codeline lineno="6634"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/>_custom_u8strwid<sp/>=<sp/>u8strwid;</highlight></codeline>
<codeline lineno="6636"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6637"><highlight class="normal"></highlight></codeline>
<codeline lineno="6638"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6639"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>utf8_width(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end)</highlight></codeline>
<codeline lineno="6640"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(_custom_u8strwid)<sp/>{</highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!_custom_u8strwid(beg,<sp/>end,<sp/>&amp;width))</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6646"><highlight class="normal"></highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>sz<sp/>=<sp/>(size_t)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)end<sp/>-<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)beg);</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">)<sp/>*<sp/>(sz<sp/>+<sp/>1));</highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>@todo:<sp/>add<sp/>check<sp/>to<sp/>tmp</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6650"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(tmp);</highlight></codeline>
<codeline lineno="6651"><highlight class="normal"></highlight></codeline>
<codeline lineno="6652"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(tmp,<sp/>beg,<sp/>sz);</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"><sp/><sp/><sp/><sp/>tmp[sz]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6654"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>result<sp/>=<sp/><ref refid="fort_8c_1ac93b14073da51fe7722162b16b117d34" kindref="member">utf8width</ref>(tmp);</highlight></codeline>
<codeline lineno="6655"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(tmp);</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="6657"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6659"><highlight class="normal"></highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6661"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1adee94920422c7175c9dedd31fb9e5364" kindref="member">buffer_text_visible_width</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_length<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>==<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*beg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a813d4ec1a357d5ea24ab7f3abd339dfe" kindref="member">str_n_substring</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>n,<sp/>&amp;beg,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="6670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beg<sp/>==<sp/>NULL<sp/>||<sp/>end<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_length;</highlight></codeline>
<codeline lineno="6672"><highlight class="normal"></highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_length<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(max_length,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(end<sp/>-<sp/>beg));</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>==<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*beg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1abf373d518201debe18cd197815ca9ac5" kindref="member">wstr_n_substring</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>,<sp/>L</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>n,<sp/>&amp;beg,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beg<sp/>==<sp/>NULL<sp/>||<sp/>end<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_length;</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"></highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>line_width<sp/>=<sp/><ref refid="fort_8c_1a8c6234fb096b466971193e24d3f9c85b" kindref="member">mk_wcswidth</ref>(beg,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)(end<sp/>-<sp/>beg));</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_width<sp/>&lt;<sp/>0)<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>safety<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>line_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_length<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(max_length,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)line_width);</highlight></codeline>
<codeline lineno="6690"><highlight class="normal"></highlight></codeline>
<codeline lineno="6691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="6692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6693"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6694"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref><sp/>==<sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ad9fad63df44484d04f254de1a6e25e91" kindref="member">utf8_n_substring</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>n,<sp/>&amp;beg,<sp/>&amp;end);</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beg<sp/>==<sp/>NULL<sp/>||<sp/>end<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_length;</highlight></codeline>
<codeline lineno="6703"><highlight class="normal"></highlight></codeline>
<codeline lineno="6704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_length<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(max_length,<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)utf8_width(beg,<sp/>end));</highlight></codeline>
<codeline lineno="6705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++n;</highlight></codeline>
<codeline lineno="6706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"></highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>max_length;<sp/></highlight><highlight class="comment">/*<sp/>shouldn&apos;t<sp/>be<sp/>here<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6711"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"></highlight></codeline>
<codeline lineno="6713"><highlight class="normal"></highlight></codeline>
<codeline lineno="6714"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6715"><highlight class="normal">buffer_substring(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_row,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**begin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**end,<sp/><sp/>ptrdiff_t<sp/>*str_it_width)</highlight></codeline>
<codeline lineno="6716"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1a813d4ec1a357d5ea24ab7f3abd339dfe" kindref="member">str_n_substring</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a34fb7534f6055596f02f5b93372fb074" kindref="member">cstr</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>buffer_row,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)begin,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)end);</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)begin)<sp/>&amp;&amp;<sp/>(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)end))</highlight></codeline>
<codeline lineno="6721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str_it_width<sp/>=<sp/>str_iter_width(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)begin,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)end);</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6723"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1abf373d518201debe18cd197815ca9ac5" kindref="member">wstr_n_substring</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a17fd526c8928a29bf932676f56a935c6" kindref="member">wstr</ref>,<sp/>L</highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>buffer_row,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**)begin,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**)end);</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**)begin)<sp/>&amp;&amp;<sp/>(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**)end))</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str_it_width<sp/>=<sp/>wcs_iter_width(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**)begin,<sp/>*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>**)end);</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6729"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6730"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ad9fad63df44484d04f254de1a6e25e91" kindref="member">utf8_n_substring</ref>(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a096c4ee47c061cec8b83c9035cbcaf2b" kindref="member">u8str</ref>,<sp/></highlight><highlight class="charliteral">&apos;\n&apos;</highlight><highlight class="normal">,<sp/>buffer_row,<sp/>begin,<sp/>end);</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)begin)<sp/>&amp;&amp;<sp/>(*(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)end))</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*str_it_width<sp/>=<sp/>utf8_width(*begin,<sp/>*end);</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6741"><highlight class="normal"></highlight></codeline>
<codeline lineno="6742"><highlight class="normal"></highlight></codeline>
<codeline lineno="6743"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6744"><highlight class="normal">buffer_print_range(<ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end)</highlight></codeline>
<codeline lineno="6745"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(cntx-&gt;<ref refid="structf__conv__context_1ab7e55cddff5e671c753ca98520c3bab6" kindref="member">b_type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(size_t)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)end<sp/>-<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)beg);</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1adc410898e7cdde87f19083209df4bb02" kindref="member">ft_nprint</ref>(cntx,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)beg,<sp/>len);</highlight></codeline>
<codeline lineno="6751"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>=<sp/>(size_t)((</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*)end<sp/>-<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*)beg);</highlight></codeline>
<codeline lineno="6754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af86c27e4ebf239a915a36b6972d1d607" kindref="member">ft_nwprint</ref>(cntx,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*)beg,<sp/>len);</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6756"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3e59820002f722488daba674c799bb97" kindref="member">ft_nu8print</ref>(cntx,<sp/>beg,<sp/>end);</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_UTF8<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6764"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"></highlight></codeline>
<codeline lineno="6766"><highlight class="normal"></highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6768"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0140429a7259d97aaa5711a8b89c5860" kindref="member">buffer_printf</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>buffer_row,<sp/><ref refid="structf__conv__context" kindref="compound">f_conv_context_t</ref><sp/>*cntx,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vis_width,</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*content_style_tag,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*reset_content_style_tag)</highlight></codeline>
<codeline lineno="6770"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>*context<sp/>=<sp/>cntx-&gt;<ref refid="structf__conv__context_1a294d6894fda1ddbce737ad28fa939af6" kindref="member">cntx</ref>;</highlight></codeline>
<codeline lineno="6772"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*props<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>;</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>;</highlight></codeline>
<codeline lineno="6774"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>column<sp/>=<sp/>context-&gt;<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>;</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"></highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(buffer<sp/>==<sp/>NULL<sp/>||<sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref><sp/>==<sp/>NULL</highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>buffer_row<sp/>&gt;=<sp/><ref refid="fort_8c_1a85ef6eb340328e5a1d6f4140b2dc8a6b" kindref="member">buffer_text_visible_height</ref>(buffer))<sp/>{</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6780"><highlight class="normal"></highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>content_width<sp/>=<sp/><ref refid="fort_8c_1adee94920422c7175c9dedd31fb9e5364" kindref="member">buffer_text_visible_width</ref>(buffer);</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vis_width<sp/>&lt;<sp/>content_width)</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"></highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>right<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(props,<sp/>row,<sp/>column,<sp/><ref refid="fort_8h_1ae5586130d3dd258d477e370923d0889e" kindref="member">FT_CPROP_TEXT_ALIGN</ref>))<sp/>{</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32ca62837cbc7c859d5d38d608f51806e66d" kindref="member">FT_ALIGNED_LEFT</ref>:</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>(vis_width)<sp/>-<sp/>content_width;</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32cac43d09334b02f1300989a8789455183e" kindref="member">FT_ALIGNED_CENTER</ref>:</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>((vis_width)<sp/>-<sp/>content_width)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="6794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>((vis_width)<sp/>-<sp/>content_width)<sp/>-<sp/>left;</highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a3ce6dedcf688e310a3cfbb5cdae9d32ca31bdf997c2db055fe5669e9e174277cc" kindref="member">FT_ALIGNED_RIGHT</ref>:</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/>=<sp/>(vis_width)<sp/>-<sp/>content_width;</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6804"><highlight class="normal"></highlight></codeline>
<codeline lineno="6805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><sp/>written<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tmp<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6807"><highlight class="normal"><sp/><sp/><sp/><sp/>ptrdiff_t<sp/>str_it_width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="6808"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*beg<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*end<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/>buffer_substring(buffer,<sp/>buffer_row,<sp/>&amp;beg,<sp/>&amp;end,<sp/>&amp;str_it_width);</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(beg<sp/>==<sp/>NULL<sp/>||<sp/>end<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_it_width<sp/>&lt;<sp/>0<sp/>||<sp/>content_width<sp/>&lt;<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">)str_it_width)</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"></highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>padding<sp/>=<sp/>content_width<sp/>-<sp/>(size_t)str_it_width;</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"></highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>left,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>content_style_tag));</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(buffer_print_range(cntx,<sp/>beg,<sp/>end));</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>1,<sp/>reset_content_style_tag));</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>padding,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="6823"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1af468b631f72d69aec8ef2e7843e8b8a1" kindref="member">CHCK_RSLT_ADD_TO_WRITTEN</ref>(<ref refid="fort_8c_1a3e1f24169bad7166d9c73022ce44461f" kindref="member">print_n_strings</ref>(cntx,<sp/>right,<sp/><ref refid="fort_8c_1aa0b6bc44009d4e3a5cc6cd2a0cb86748" kindref="member">FT_SPACE</ref>));</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)written;</highlight></codeline>
<codeline lineno="6825"><highlight class="normal"></highlight></codeline>
<codeline lineno="6826"><highlight class="normal">clear:</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="6828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6829"><highlight class="normal"></highlight></codeline>
<codeline lineno="6830"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6831"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a398a13f3db5a43bca6fecdc119f38a88" kindref="member">string_buffer_width_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref>;</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref><sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(wchar_t);</highlight></codeline>
<codeline lineno="6840"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6841"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structf__string__buffer_1afe9328a1cad699fec66a3ab8f5879bef" kindref="member">data_sz</ref><sp/>/<sp/>4;</highlight></codeline>
<codeline lineno="6844"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6849"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6850"><highlight class="normal"></highlight></codeline>
<codeline lineno="6851"><highlight class="normal"></highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6853"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1af8c64e48cffecc6fb8e5220a8feff523" kindref="member">buffer_get_data</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6854"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6855"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>;</highlight></codeline>
<codeline lineno="6857"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6858"><highlight class="normal"></highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6860"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a3d109493b9707163dc60dbe7f413f95a" kindref="member">buffer_check_align</ref>(<ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*buffer)</highlight></codeline>
<codeline lineno="6861"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer);</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>);</highlight></codeline>
<codeline lineno="6864"><highlight class="normal"></highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(buffer-&gt;<ref refid="structf__string__buffer_1a3f19eb114211edc9f6a16bf9de2cd32b" kindref="member">type</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa8864a933d9550594f59c00f015b5f033" kindref="member">CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6868"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaa7317447020d0b4e1bb6bb281e181c810" kindref="member">W_CHAR_BUF</ref>:</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(((uintptr_t)buffer-&gt;<ref refid="structf__string__buffer_1a6883c46655eda607e920a77f65abb0c0" kindref="member">str</ref>.<ref refid="structf__string__buffer_1a735984d41155bc1032e09bece8f8d66d" kindref="member">data</ref>)<sp/>&amp;<sp/>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal">)<sp/>-<sp/>1))<sp/>==<sp/>0;</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6872"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_UTF8</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aac6eaac439cc49e9382b6c239aa310aaacabcb5ee0b81a1bfdefc16b3c6979882" kindref="member">UTF8_BUF</ref>:</highlight></codeline>
<codeline lineno="6874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0);</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="6879"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6880"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"></highlight></codeline>
<codeline lineno="6882"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="6883"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;string_buffer.c&quot;</highlight></codeline>
<codeline lineno="6884"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6885"><highlight class="normal"></highlight></codeline>
<codeline lineno="6886"><highlight class="normal"></highlight></codeline>
<codeline lineno="6887"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="6888"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;table.c&quot;</highlight></codeline>
<codeline lineno="6889"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6890"><highlight class="normal"></highlight></codeline>
<codeline lineno="6891"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;table.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6892"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;string_buffer.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6893"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;cell.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6894"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;vector.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6895"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;row.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6896"><highlight class="normal"></highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*<ref refid="fort_8c_1a61340feda1ea158db1bd1da1671751ad" kindref="member">create_separator</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enabled)</highlight></codeline>
<codeline lineno="6899"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*res<sp/>=<sp/>(<ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(1,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__separator" kindref="compound">f_separator_t</ref>));</highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6903"><highlight class="normal"><sp/><sp/><sp/><sp/>res-&gt;<ref refid="structf__separator_1a03e6cca0c879c0443efb431c30c14f76" kindref="member">enabled</ref><sp/>=<sp/>enabled;</highlight></codeline>
<codeline lineno="6904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="6905"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6906"><highlight class="normal"></highlight></codeline>
<codeline lineno="6907"><highlight class="normal"></highlight></codeline>
<codeline lineno="6908"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6909"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a9a6706bef6f7dae20f91a49113fc2165" kindref="member">destroy_separator</ref>(<ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep)</highlight></codeline>
<codeline lineno="6910"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6911"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(sep);</highlight></codeline>
<codeline lineno="6912"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"></highlight></codeline>
<codeline lineno="6914"><highlight class="normal"></highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*<ref refid="fort_8c_1af3cff45d0b6bbd125b6119cfec729ed6" kindref="member">copy_separator</ref>(<ref refid="structf__separator" kindref="compound">f_separator_t</ref><sp/>*sep)</highlight></codeline>
<codeline lineno="6917"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(sep);</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a61340feda1ea158db1bd1da1671751ad" kindref="member">create_separator</ref>(sep-&gt;<ref refid="structf__separator_1a03e6cca0c879c0443efb431c30c14f76" kindref="member">enabled</ref>);</highlight></codeline>
<codeline lineno="6920"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"></highlight></codeline>
<codeline lineno="6922"><highlight class="normal"></highlight></codeline>
<codeline lineno="6923"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*get_row_impl(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879" kindref="member">f_get_policy</ref><sp/>policy)</highlight></codeline>
<codeline lineno="6925"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>==<sp/>NULL<sp/>||<sp/>table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"></highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(policy)<sp/>{</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc" kindref="member">DONT_CREATE_ON_NULL</ref>:</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>&lt;<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>))<sp/>{</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>row,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a" kindref="member">CREATE_ON_NULL</ref>:</highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(row<sp/>&gt;=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>))<sp/>{</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*new_row<sp/>=<sp/><ref refid="fort_8c_1a711b5fe08dee63887c4a430eae76b29c" kindref="member">create_row</ref>();</highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(<ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>&amp;new_row)))<sp/>{</highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1ab81fa66d96e3dee780fd63a6ca49e5e4" kindref="member">destroy_row</ref>(new_row);</highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>row,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"></highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Shouldn&apos;t<sp/>be<sp/>here!&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6951"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6952"><highlight class="normal"></highlight></codeline>
<codeline lineno="6953"><highlight class="normal"></highlight></codeline>
<codeline lineno="6954"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6955"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a409d9364981e54abbb8616d9b98b4dfe" kindref="member">get_row</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight></codeline>
<codeline lineno="6956"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_row_impl(table,<sp/>row,<sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879a6314d3c3f6e06cf754889e1774caecfc" kindref="member">DONT_CREATE_ON_NULL</ref>);</highlight></codeline>
<codeline lineno="6958"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6959"><highlight class="normal"></highlight></codeline>
<codeline lineno="6960"><highlight class="normal"></highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6962"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1a278381cdc233b3476f2660a5a422a1f5" kindref="member">get_row_c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight></codeline>
<codeline lineno="6963"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a409d9364981e54abbb8616d9b98b4dfe" kindref="member">get_row</ref>((<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*)table,<sp/>row);</highlight></codeline>
<codeline lineno="6965"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"></highlight></codeline>
<codeline lineno="6967"><highlight class="normal"></highlight></codeline>
<codeline lineno="6968"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6969"><highlight class="normal"><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*<ref refid="fort_8c_1ad4906ec40fada2d7ded7846d4dd0b2bf" kindref="member">get_row_and_create_if_not_exists</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row)</highlight></codeline>
<codeline lineno="6970"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get_row_impl(table,<sp/>row,<sp/><ref refid="fort_8c_1a637b893c0bf4371273b9746c62b58879ae156f80eb433e523b7dc5d66da39f77a" kindref="member">CREATE_ON_NULL</ref>);</highlight></codeline>
<codeline lineno="6972"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"></highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="6975"><highlight class="normal"><ref refid="structf__string__buffer" kindref="compound">f_string_buffer_t</ref><sp/>*<ref refid="fort_8c_1a6855260f3c1d1da0696e5d1e652bc4ef" kindref="member">get_cur_str_buffer_and_create_if_not_exists</ref>(<ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table)</highlight></codeline>
<codeline lineno="6976"><highlight class="normal">{</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(table);</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"></highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1ad4906ec40fada2d7ded7846d4dd0b2bf" kindref="member">get_row_and_create_if_not_exists</ref>(table,<sp/>table-&gt;<ref refid="structft__table_1aa18288d116dabe5bad87afc5b2e6a3d9" kindref="member">cur_row</ref>);</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(row<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6982"><highlight class="normal"></highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="6984"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfort__entire__table__properties" kindref="compound">fort_entire_table_properties_t</ref><sp/>*table_props<sp/>=<sp/>&amp;table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>;</highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(table_props-&gt;<ref refid="structfort__entire__table__properties_1a18b0b5e9a876a787e08d7f630d52152d" kindref="member">add_strategy</ref>)<sp/>{</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5acc1102bce0611e414231a7e41357300f" kindref="member">FT_STRATEGY_INSERT</ref>:</highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell<sp/>=<sp/><ref refid="fort_8c_1a40ddd32fd7bb25bdda626db532e7412b" kindref="member">create_cell_in_position</ref>(row,<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>);</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1aeed2958a1823084ca6e71883b075baa5aa620d123a0ac00710153d28a6ab65842" kindref="member">FT_STRATEGY_REPLACE</ref>:</highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cell<sp/>=<sp/><ref refid="fort_8c_1a7e7238097d84a571ae3d5189a8ec47c0" kindref="member">get_cell_and_create_if_not_exists</ref>(row,<sp/>table-&gt;<ref refid="structft__table_1a653b539936c9d83c9f1fad970f5f221f" kindref="member">cur_col</ref>);</highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&amp;&amp;<sp/></highlight><highlight class="stringliteral">&quot;Unexpected<sp/>situation<sp/>inside<sp/>libfort&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"></highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="6999"><highlight class="normal"></highlight></codeline>
<codeline lineno="7000"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ab4f0992198f9be12d538e0ae6080c94d" kindref="member">cell_get_string_buffer</ref>(cell);</highlight></codeline>
<codeline lineno="7001"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7002"><highlight class="normal"></highlight></codeline>
<codeline lineno="7003"><highlight class="normal"></highlight></codeline>
<codeline lineno="7004"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7005"><highlight class="comment"><sp/>*<sp/>Returns<sp/>number<sp/>of<sp/>cells<sp/>(rows<sp/>*<sp/>cols)</highlight></codeline>
<codeline lineno="7006"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a7c9835a2792ffbd846c844f28e01e557" kindref="member">get_table_sizes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*rows,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*cols)</highlight></codeline>
<codeline lineno="7009"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/>*rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/><sp/><sp/>*cols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>&amp;&amp;<sp/>table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*rows<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row_index<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row_index<sp/>=<sp/>0;<sp/>row_index<sp/>&lt;<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>);<sp/>++row_index)<sp/>{</highlight></codeline>
<codeline lineno="7016"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row<sp/>=<sp/><ref refid="fort_8c_1af1becbd43fa5c10fde1b0686eac68ea2" kindref="member">VECTOR_AT</ref>(table-&gt;<ref refid="structft__table_1a46c557e3a9f90e8164fadc411ade8b4e" kindref="member">rows</ref>,<sp/>row_index,<sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*);</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols_in_row<sp/>=<sp/><ref refid="fort_8c_1a3d540d4463a076f4852d2ff56a7d6012" kindref="member">columns_in_row</ref>(row);</highlight></codeline>
<codeline lineno="7018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cols_in_row<sp/>&gt;<sp/>*cols)</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*cols<sp/>=<sp/>cols_in_row;</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7023"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"></highlight></codeline>
<codeline lineno="7025"><highlight class="normal"></highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ac6a1014eacf8e41589fe6e7d6ffec493" kindref="member">table_rows_and_cols_geometry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>**col_width_arr_p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr_sz,</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>**row_height_arr_p,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*row_height_arr_sz,</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027" kindref="member">f_geometry_type</ref><sp/>geom)</highlight></codeline>
<codeline lineno="7031"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7035"><highlight class="normal"></highlight></codeline>
<codeline lineno="7036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_invis_codepoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7037"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1a7c9835a2792ffbd846c844f28e01e557" kindref="member">get_table_sizes</ref>(table,<sp/>&amp;rows,<sp/>&amp;cols);</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="7042"><highlight class="normal"></highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr<sp/>=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(cols,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*row_height_arr<sp/>=<sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*)<ref refid="fort_8c_1a292448526dc3d314e5573c19c45b8fa2" kindref="member">F_CALLOC</ref>(rows,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="7045"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(col_width_arr<sp/>==<sp/>NULL<sp/>||<sp/>row_height_arr<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(col_width_arr);</highlight></codeline>
<codeline lineno="7047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(row_height_arr);</highlight></codeline>
<codeline lineno="7048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="7049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7050"><highlight class="normal"></highlight></codeline>
<codeline lineno="7051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>combined_cells_found<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__context" kindref="compound">f_context_t</ref><sp/>context;</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref><sp/>=<sp/>(table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>?<sp/>table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref><sp/>:<sp/>&amp;<ref refid="fort_8c_1a7e383842a355b23739ccb9bb081cf543" kindref="member">g_table_properties</ref>);</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>col<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>cols;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_width_arr[col]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>rows;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row_p<sp/>=<sp/><ref refid="fort_8c_1a278381cdc233b3476f2660a5a422a1f5" kindref="member">get_row_c</ref>(table,<sp/>row);</highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(row_p,<sp/>col);</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref><sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref><sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell)<sp/>{</highlight></codeline>
<codeline lineno="7064"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" kindref="member">get_cell_type</ref>(cell))<sp/>{</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ad051cc4f661b418b4adfd1e7ffcd67dc" kindref="member">COMMON_CELL</ref>:</highlight></codeline>
<codeline lineno="7066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_width_arr[col]<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(col_width_arr[col],<sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref>(cell,<sp/>&amp;context));</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" kindref="member">GROUP_MASTER_CELL</ref>:</highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>combined_cells_found<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="7070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab23f446b03b09980fb5bcb456f168d86" kindref="member">GROUP_SLAVE_CELL</ref>:</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>;<sp/></highlight><highlight class="comment">/*<sp/>Do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_height_arr[row]<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(row_height_arr[row],<sp/><ref refid="fort_8c_1a4b4f366d1272078225219727401cde90" kindref="member">hint_height_cell</ref>(cell,<sp/>&amp;context));</highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cell_empty_string_height<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(context.<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>,<sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context.<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/><ref refid="fort_8h_1aadf8488e2ae0a4e7c2e4ecbc715d2b18" kindref="member">FT_CPROP_EMPTY_STR_HEIGHT</ref>);</highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell_empty_string_height)<sp/>{</highlight></codeline>
<codeline lineno="7079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cell_top_padding<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(context.<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>,<sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context.<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/><ref refid="fort_8h_1a2a5fd97edb51283e0baddcf896555e9d" kindref="member">FT_CPROP_TOP_PADDING</ref>);</highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cell_bottom_padding<sp/>=<sp/><ref refid="fort_8c_1a5b037958854d02c1fe2678a9be3295f6" kindref="member">get_cell_property_hierarchically</ref>(context.<ref refid="structf__context_1a886fe98f367d47951b769d97908604b0" kindref="member">table_properties</ref>,<sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref>,<sp/>context.<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref>,<sp/><ref refid="fort_8h_1a47c8f3a9d83e32ac8f3ab5997dc5b542" kindref="member">FT_CPROP_BOTTOM_PADDING</ref>);</highlight></codeline>
<codeline lineno="7081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_height_arr[row]<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(row_height_arr[row],<sp/>cell_empty_string_height<sp/>+<sp/>cell_top_padding<sp/>+<sp/>cell_bottom_padding);</highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7085"><highlight class="normal"></highlight></codeline>
<codeline lineno="7086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geom<sp/>==<sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027ae4419d33092d617c9f99d6ac234e7a33" kindref="member">INTERN_REPR_GEOMETRY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_invis_codepoints<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>rows;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="7089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row_p<sp/>=<sp/><ref refid="fort_8c_1a278381cdc233b3476f2660a5a422a1f5" kindref="member">get_row_c</ref>(table,<sp/>row);</highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(row_p,<sp/>col);</highlight></codeline>
<codeline lineno="7091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cell)</highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref><sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="7094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref><sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="7095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>inv_codepoints<sp/>=<sp/><ref refid="fort_8c_1a9c241d6f1cadd55e3b1ce1f5928b9556" kindref="member">cell_invis_codes_width</ref>(cell,<sp/>&amp;context);</highlight></codeline>
<codeline lineno="7096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_invis_codepoints<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(max_invis_codepoints,<sp/>inv_codepoints);</highlight></codeline>
<codeline lineno="7097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_width_arr[col]<sp/>+=<sp/>max_invis_codepoints;</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7101"><highlight class="normal"></highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(combined_cells_found)<sp/>{</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(col<sp/>=<sp/>0;<sp/>col<sp/>&lt;<sp/>cols;<sp/>++col)<sp/>{</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>row<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(row<sp/>=<sp/>0;<sp/>row<sp/>&lt;<sp/>rows;<sp/>++row)<sp/>{</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__row" kindref="compound">f_row_t</ref><sp/>*row_p<sp/>=<sp/><ref refid="fort_8c_1a278381cdc233b3476f2660a5a422a1f5" kindref="member">get_row_c</ref>(table,<sp/>row);</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__cell" kindref="compound">f_cell_t</ref><sp/>*cell<sp/>=<sp/><ref refid="fort_8c_1a3f99dbb688f5c24b74ed04fea920c0de" kindref="member">get_cell_c</ref>(row_p,<sp/>col);</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a85bed66e93e00dacf6642c86b0b5c013" kindref="member">column</ref><sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.<ref refid="structf__context_1a97ab3b8ef2f074e3774c66099d7ec59b" kindref="member">row</ref><sp/>=<sp/>row;</highlight></codeline>
<codeline lineno="7110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cell)<sp/>{</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a5c97b97ec34e15affaed2187d36c94c4" kindref="member">get_cell_type</ref>(cell)<sp/>==<sp/><ref refid="fort_8c_1a0d2f8345ecc481093a059fe2f0264eb4ab322ed6278dd2cdc3389001b26a2c1de" kindref="member">GROUP_MASTER_CELL</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>hint_width<sp/>=<sp/><ref refid="fort_8c_1a1934466a7efe261ddf2824204050b85b" kindref="member">cell_vis_width</ref>(cell,<sp/>&amp;context);</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(geom<sp/>==<sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027ae4419d33092d617c9f99d6ac234e7a33" kindref="member">INTERN_REPR_GEOMETRY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hint_width<sp/>+=<sp/><ref refid="fort_8c_1a9c241d6f1cadd55e3b1ce1f5928b9556" kindref="member">cell_invis_codes_width</ref>(cell,<sp/>&amp;context);</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>slave_col<sp/>=<sp/>col<sp/>+<sp/><ref refid="fort_8c_1ab36a4052c23098fca6dce54d6201d96b" kindref="member">group_cell_number</ref>(row_p,<sp/>col);</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cur_adj_col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>group_width<sp/>=<sp/>col_width_arr[col];</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>col<sp/>+<sp/>1;<sp/>i<sp/>&lt;<sp/>slave_col;<sp/>++i)</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_width<sp/>+=<sp/>col_width_arr[i]<sp/>+<sp/><ref refid="fort_8c_1ac22fb60cd88090750f4536ce213d7076" kindref="member">FORT_COL_SEPARATOR_LENGTH</ref>;</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>adjust<sp/>col.<sp/>widths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(1)<sp/>{</highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(group_width<sp/>&gt;=<sp/>hint_width)</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_width_arr[cur_adj_col]<sp/>+=<sp/>1;</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>group_width++;</highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_adj_col++;</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_adj_col<sp/>==<sp/>slave_col)</highlight></codeline>
<codeline lineno="7130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_adj_col<sp/>=<sp/>col;</highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"></highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>Maybe<sp/>it<sp/>is<sp/>better<sp/>to<sp/>move<sp/>min<sp/>width<sp/>checking<sp/>to<sp/>a<sp/>particular<sp/>cell</highlight></codeline>
<codeline lineno="7139"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>width<sp/>checking.<sp/>At<sp/>the<sp/>moment<sp/>min<sp/>width<sp/>includes<sp/>paddings.<sp/>Maybe<sp/>it<sp/>is</highlight></codeline>
<codeline lineno="7140"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>better<sp/>that<sp/>min<sp/>width<sp/>weren&apos;t<sp/>include<sp/>paddings<sp/>but<sp/>be<sp/>min<sp/>width<sp/>of<sp/>the</highlight></codeline>
<codeline lineno="7141"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>cell<sp/>content<sp/>without<sp/>padding</highlight></codeline>
<codeline lineno="7142"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7144"><highlight class="comment"><sp/><sp/><sp/><sp/>if<sp/>(table-&gt;properties)<sp/>{</highlight></codeline>
<codeline lineno="7145"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="7146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col_width_arr[i]<sp/>=<sp/>MAX((int)col_width_arr[i],<sp/>fort_props_column_width(table-&gt;properties,<sp/>i));</highlight></codeline>
<codeline lineno="7147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7148"><highlight class="comment"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7149"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7150"><highlight class="normal"></highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/>*col_width_arr_p<sp/>=<sp/>col_width_arr;</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/>*col_width_arr_sz<sp/>=<sp/>cols;</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/>*row_height_arr_p<sp/>=<sp/>row_height_arr;</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/><sp/><sp/>*row_height_arr_sz<sp/>=<sp/>rows;</highlight></codeline>
<codeline lineno="7155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7156"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7157"><highlight class="normal"></highlight></codeline>
<codeline lineno="7158"><highlight class="normal"></highlight></codeline>
<codeline lineno="7159"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7160"><highlight class="comment"><sp/>*<sp/>Returns<sp/>geometry<sp/>in<sp/>characters</highlight></codeline>
<codeline lineno="7161"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a70608495ec687e0f65fec1cdad97a12f" kindref="member">table_geometry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width)</highlight></codeline>
<codeline lineno="7164"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(table<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="7167"><highlight class="normal"></highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/>*height<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/>*width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cols<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rows<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*col_width_arr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*row_height_arr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"></highlight></codeline>
<codeline lineno="7175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status<sp/>=<sp/><ref refid="fort_8c_1ac6a1014eacf8e41589fe6e7d6ffec493" kindref="member">table_rows_and_cols_geometry</ref>(table,<sp/>&amp;col_width_arr,<sp/>&amp;cols,<sp/>&amp;row_height_arr,<sp/>&amp;rows,<sp/><ref refid="fort_8c_1af04f170451a6d8600ba71c318b2b6027ae4419d33092d617c9f99d6ac234e7a33" kindref="member">INTERN_REPR_GEOMETRY</ref>);</highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8h_1acca4660b494725c897b9fd09ec0be057" kindref="member">FT_IS_ERROR</ref>(status))</highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"></highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/>*width<sp/>=<sp/>1<sp/>+<sp/>(cols<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>cols)<sp/>+<sp/>1;<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>boundaries<sp/>(that<sp/>take<sp/>1<sp/>symbol)<sp/>+<sp/>newline<sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>cols;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/>+=<sp/>col_width_arr[i];</highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"></highlight></codeline>
<codeline lineno="7185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>todo:<sp/>add<sp/>check<sp/>for<sp/>non<sp/>printable<sp/>horizontal<sp/>row<sp/>separators<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7186"><highlight class="normal"><sp/><sp/><sp/><sp/>*height<sp/>=<sp/>1<sp/>+<sp/>(rows<sp/>==<sp/>0<sp/>?<sp/>1<sp/>:<sp/>rows);<sp/></highlight><highlight class="comment">/*<sp/>for<sp/>boundaries<sp/>(that<sp/>take<sp/>1<sp/>symbol)<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rows;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="7188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height<sp/>+=<sp/>row_height_arr[i];</highlight></codeline>
<codeline lineno="7189"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(col_width_arr);</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(row_height_arr);</highlight></codeline>
<codeline lineno="7192"><highlight class="normal"></highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*properties<sp/>=<sp/>table-&gt;<ref refid="structft__table_1a53e2aea4583b02c30650fb03741d9e94" kindref="member">properties</ref>;</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties)<sp/>{</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height<sp/>+=<sp/>properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>.<ref refid="structfort__entire__table__properties_1aae43b762bb8a8ee14752f7a1056f85de" kindref="member">top_margin</ref>;</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*height<sp/>+=<sp/>properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>.<ref refid="structfort__entire__table__properties_1aa80ec529af79ff50c442c24c505f512a" kindref="member">bottom_margin</ref>;</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/>+=<sp/>properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>.<ref refid="structfort__entire__table__properties_1a87484e19e9dff2efeabfbbcfdc0c0f80" kindref="member">left_margin</ref>;</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*width<sp/>+=<sp/>properties-&gt;<ref refid="structf__table__properties_1a3481bfe08e80e699cabb779a5086e5d1" kindref="member">entire_table_properties</ref>.<ref refid="structfort__entire__table__properties_1a3d505e3f1169ea3f86ecf36aefe24be3" kindref="member">right_margin</ref>;</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7200"><highlight class="normal"></highlight></codeline>
<codeline lineno="7201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Take<sp/>into<sp/>account<sp/>that<sp/>border<sp/>elements<sp/>can<sp/>be<sp/>more<sp/>than<sp/>one<sp/>byte<sp/>long<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__table__properties" kindref="compound">f_table_properties_t</ref><sp/>*table_properties<sp/>=<sp/>properties<sp/>?<sp/>properties<sp/>:<sp/>&amp;<ref refid="fort_8c_1a7e383842a355b23739ccb9bb081cf543" kindref="member">g_table_properties</ref>;</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>max_border_elem_len<sp/>=<sp/><ref refid="fort_8c_1a218b12058c9822ff0ad91544aedd2a13" kindref="member">max_border_elem_strlen</ref>(table_properties);</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/><sp/><sp/>*width<sp/>*=<sp/>max_border_elem_len;</highlight></codeline>
<codeline lineno="7205"><highlight class="normal"></highlight></codeline>
<codeline lineno="7206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7207"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7208"><highlight class="normal"></highlight></codeline>
<codeline lineno="7209"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7210"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1ae8047e766a703ad17a2dcc58645eb4df" kindref="member">table_internal_codepoints_geometry</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structft__table" kindref="compound">ft_table_t</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*height,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*width)</highlight></codeline>
<codeline lineno="7211"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a70608495ec687e0f65fec1cdad97a12f" kindref="member">table_geometry</ref>(table,<sp/>height,<sp/>width);</highlight></codeline>
<codeline lineno="7213"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7214"><highlight class="normal"></highlight></codeline>
<codeline lineno="7215"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="7216"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;table.c&quot;</highlight></codeline>
<codeline lineno="7217"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7218"><highlight class="normal"></highlight></codeline>
<codeline lineno="7219"><highlight class="normal"></highlight></codeline>
<codeline lineno="7220"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="7221"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;vector.c&quot;</highlight></codeline>
<codeline lineno="7222"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7223"><highlight class="normal"></highlight></codeline>
<codeline lineno="7224"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;vector.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7225"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7226"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7227"><highlight class="normal"></highlight></codeline>
<codeline lineno="7228" refid="structf__vector" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector</ref><sp/>{</highlight></codeline>
<codeline lineno="7229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/>*<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>;</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref>;</highlight></codeline>
<codeline lineno="7232"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7233"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"></highlight></codeline>
<codeline lineno="7235"><highlight class="normal"></highlight></codeline>
<codeline lineno="7236"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vector_reallocate_(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_capacity)</highlight></codeline>
<codeline lineno="7237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(new_capacity<sp/>&gt;<sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref>);</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"></highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_size<sp/>=<sp/>new_capacity<sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>=<sp/><ref refid="fort_8c_1a51798cbeb535b232ea9905516cfcdb4c" kindref="member">F_REALLOC</ref>(vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>,<sp/>new_size);</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7246"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7247"><highlight class="normal"></highlight></codeline>
<codeline lineno="7248"><highlight class="normal"></highlight></codeline>
<codeline lineno="7249"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*<ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>item_size,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>capacity)</highlight></codeline>
<codeline lineno="7251"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector<sp/>=<sp/>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*)<ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structf__vector" kindref="compound">f_vector_t</ref>));</highlight></codeline>
<codeline lineno="7253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"></highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>init_size<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(item_size<sp/>*<sp/>capacity,<sp/>1);</highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>=<sp/><ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(init_size);</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(vector);</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"></highlight></codeline>
<codeline lineno="7264"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/><sp/>=<sp/>capacity;</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>=<sp/>item_size;</highlight></codeline>
<codeline lineno="7267"><highlight class="normal"></highlight></codeline>
<codeline lineno="7268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector;</highlight></codeline>
<codeline lineno="7269"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7270"><highlight class="normal"></highlight></codeline>
<codeline lineno="7271"><highlight class="normal"></highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7273"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector)</highlight></codeline>
<codeline lineno="7274"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>);</highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(vector);</highlight></codeline>
<codeline lineno="7278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7279"><highlight class="normal"></highlight></codeline>
<codeline lineno="7280"><highlight class="normal"></highlight></codeline>
<codeline lineno="7281"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7282"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector)</highlight></codeline>
<codeline lineno="7283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>;</highlight></codeline>
<codeline lineno="7286"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"></highlight></codeline>
<codeline lineno="7288"><highlight class="normal"></highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7290"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a81f0b5b62d8a431c44be2bac0f6f8465" kindref="member">vector_capacity</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector)</highlight></codeline>
<codeline lineno="7291"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7292"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref>;</highlight></codeline>
<codeline lineno="7294"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7295"><highlight class="normal"></highlight></codeline>
<codeline lineno="7296"><highlight class="normal"></highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7298"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a48a4c572a9523b30ea430a9aefde654d" kindref="member">vector_push</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item)</highlight></codeline>
<codeline lineno="7299"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(item);</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"></highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>==<sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector_reallocate_(vector,<sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/>*<sp/>2)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/>=<sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/>*<sp/>2;</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"></highlight></codeline>
<codeline lineno="7309"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset,<sp/>item,<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>);</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"></highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><sp/><sp/>++(vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"></highlight></codeline>
<codeline lineno="7314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7315"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7316"><highlight class="normal"></highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7318"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a5ca29d2ab42c28eff3a8fc5fae7b9829" kindref="member">vector_insert</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="7319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(item);</highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>needed_capacity<sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(pos<sp/>+<sp/>1,<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/>&lt;<sp/>needed_capacity)<sp/>{</highlight></codeline>
<codeline lineno="7324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector_reallocate_(vector,<sp/>needed_capacity)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="7325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/>=<sp/>needed_capacity;</highlight></codeline>
<codeline lineno="7327"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7328"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>pos<sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pos<sp/>&gt;=<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>)<sp/>{</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Data<sp/>in<sp/>the<sp/>middle<sp/>are<sp/>not<sp/>initialized<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset,<sp/>item,<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>);</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>=<sp/>pos<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Shift<sp/>following<sp/>data<sp/>by<sp/>one<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memmove((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset<sp/>+<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>,</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset,</highlight></codeline>
<codeline lineno="7338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>(vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>-<sp/>pos));</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset,<sp/>item,<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>);</highlight></codeline>
<codeline lineno="7340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++(vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7343"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"></highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*<ref refid="fort_8c_1acb4f5f3823ce6b50e51c8223c5fb9c2a" kindref="member">vector_split</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="7347"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>trailing_sz<sp/>=<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>&gt;<sp/>pos<sp/>?<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>-<sp/>pos<sp/>:<sp/>0;</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*new_vector<sp/>=<sp/><ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>,<sp/>trailing_sz);</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!new_vector)</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_vector;</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_vector-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/>&lt;<sp/>trailing_sz)<sp/>{</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="fort_8c_1aaa939159462e5f06f44aa3d2d64e8a76" kindref="member">destroy_vector</ref>(new_vector);</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"></highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(trailing_sz<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_vector;</highlight></codeline>
<codeline lineno="7359"><highlight class="normal"></highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>pos;</highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(new_vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset,</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trailing_sz<sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>);</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/><sp/><sp/>new_vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>=<sp/>trailing_sz;</highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>=<sp/>pos;</highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_vector;</highlight></codeline>
<codeline lineno="7366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7367"><highlight class="normal"></highlight></codeline>
<codeline lineno="7368"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7369"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1a91644aa66c95f718abb2f0ad731c604b" kindref="member">vector_at_c</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="7370"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>)</highlight></codeline>
<codeline lineno="7372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7373"><highlight class="normal"></highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>index<sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7375"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7376"><highlight class="normal"></highlight></codeline>
<codeline lineno="7377"><highlight class="normal"></highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="fort_8c_1abb033777a1a8c0b490f14541bc0332fa" kindref="member">vector_at</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="7380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(index<sp/>&gt;=<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>)</highlight></codeline>
<codeline lineno="7382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"></highlight></codeline>
<codeline lineno="7384"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>index<sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7385"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"></highlight></codeline>
<codeline lineno="7387"><highlight class="normal"></highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><ref refid="fort_8c_1af2b63f358e58e9800b9303ee84d0dc58" kindref="member">f_status</ref><sp/><ref refid="fort_8c_1a844f2a888602cd950e5a2d7c332c3b07" kindref="member">vector_swap</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*cur_vec,<sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*mv_vec,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>pos)</highlight></codeline>
<codeline lineno="7390"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cur_vec);</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(mv_vec);</highlight></codeline>
<codeline lineno="7393"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cur_vec<sp/>!=<sp/>mv_vec);</highlight></codeline>
<codeline lineno="7394"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(cur_vec-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>==<sp/>mv_vec-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>);</highlight></codeline>
<codeline lineno="7395"><highlight class="normal"></highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>cur_sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(cur_vec);</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>mv_sz<sp/>=<sp/><ref refid="fort_8c_1acfa98cf131fd5f058792ed59dcd83c6b" kindref="member">vector_size</ref>(mv_vec);</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mv_sz<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7401"><highlight class="normal"></highlight></codeline>
<codeline lineno="7402"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>min_targ_size<sp/>=<sp/>pos<sp/>+<sp/>mv_sz;</highlight></codeline>
<codeline lineno="7403"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="fort_8c_1a81f0b5b62d8a431c44be2bac0f6f8465" kindref="member">vector_capacity</ref>(cur_vec)<sp/>&lt;<sp/>min_targ_size)<sp/>{</highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector_reallocate_(cur_vec,<sp/>min_targ_size)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_vec-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref><sp/>=<sp/>min_targ_size;</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7408"><highlight class="normal"></highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>offset<sp/>=<sp/>pos<sp/>*<sp/>cur_vec-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tmp<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>new_mv_sz<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cur_sz<sp/>&gt;<sp/>pos)<sp/>{</highlight></codeline>
<codeline lineno="7413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>new_mv_sz<sp/>=<sp/><ref refid="fort_8c_1a3acffbd305ee72dcd4593c0d8af64a4f" kindref="member">MIN</ref>(cur_sz<sp/>-<sp/>pos,<sp/>mv_sz);</highlight></codeline>
<codeline lineno="7414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>=<sp/><ref refid="fort_8c_1a62d5e3834ceef771f05d50e71ed45c95" kindref="member">F_MALLOC</ref>(cur_vec-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>new_mv_sz);</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="7416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a1d63717d26b0623b922dd4c7e3ad56e8" kindref="member">FT_MEMORY_ERROR</ref>;</highlight></codeline>
<codeline lineno="7417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7419"><highlight class="normal"></highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp)<sp/>{</highlight></codeline>
<codeline lineno="7421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(tmp,</highlight></codeline>
<codeline lineno="7422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)cur_vec-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset,</highlight></codeline>
<codeline lineno="7423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_vec-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>new_mv_sz);</highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7425"><highlight class="normal"></highlight></codeline>
<codeline lineno="7426"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)cur_vec-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>offset,</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mv_vec-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>,</highlight></codeline>
<codeline lineno="7428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_vec-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>mv_sz);</highlight></codeline>
<codeline lineno="7429"><highlight class="normal"></highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp)<sp/>{</highlight></codeline>
<codeline lineno="7431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(mv_vec-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>,</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp,</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cur_vec-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>new_mv_sz);</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"></highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/><sp/><sp/>cur_vec-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>=<sp/><ref refid="fort_8c_1afa99ec4acc4ecb2dc3c2d05da15d0e3f" kindref="member">MAX</ref>(cur_vec-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>,<sp/>min_targ_size);</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/>mv_vec-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>=<sp/>new_mv_sz;</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="fort_8c_1add196043a1d5633940925baaba3bae1d" kindref="member">F_FREE</ref>(tmp);</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7440"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"></highlight></codeline>
<codeline lineno="7442"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7443"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1aeed5528bb1a8124b530766b5cdd607f4" kindref="member">vector_clear</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector)</highlight></codeline>
<codeline lineno="7444"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7447"><highlight class="normal"></highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7449"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1ae1d70435626d59e4d41971e22fa90fec" kindref="member">vector_erase</ref>(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>index)</highlight></codeline>
<codeline lineno="7450"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7452"><highlight class="normal"></highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>==<sp/>0<sp/>||<sp/>index<sp/>&gt;=<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>)</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a292e7b1093ae354cd2f2e122d0eff729" kindref="member">FT_GEN_ERROR</ref>;</highlight></codeline>
<codeline lineno="7455"><highlight class="normal"></highlight></codeline>
<codeline lineno="7456"><highlight class="normal"><sp/><sp/><sp/><sp/>memmove((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>index,</highlight></codeline>
<codeline lineno="7457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>(index<sp/>+<sp/>1),</highlight></codeline>
<codeline lineno="7458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>-<sp/>1<sp/>-<sp/>index)<sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>);</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"><sp/><sp/><sp/><sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>--;</highlight></codeline>
<codeline lineno="7460"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8h_1a07f0c8ab6e4b3cff5d02dfd41dc4ffe0" kindref="member">FT_SUCCESS</ref>;</highlight></codeline>
<codeline lineno="7461"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"></highlight></codeline>
<codeline lineno="7463"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_TEST_BUILD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7464"><highlight class="normal"></highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*copy_vector(<ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*v)</highlight></codeline>
<codeline lineno="7466"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(v<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"></highlight></codeline>
<codeline lineno="7470"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*new_vector<sp/>=<sp/><ref refid="fort_8c_1a06be2f0a19611886237dcde275f8d678" kindref="member">create_vector</ref>(v-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>,<sp/>v-&gt;<ref refid="structf__vector_1a5deef5114ecf92bcf952bd0b30d7ba16" kindref="member">m_capacity</ref>);</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_vector<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="7472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"></highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(new_vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>,<sp/>v-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref>,<sp/>v-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>*<sp/>v-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>);</highlight></codeline>
<codeline lineno="7475"><highlight class="normal"><sp/><sp/><sp/><sp/>new_vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>v-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref><sp/>;</highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/><sp/>new_vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>=<sp/>v-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref><sp/>;</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>new_vector;</highlight></codeline>
<codeline lineno="7478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7479"><highlight class="normal"></highlight></codeline>
<codeline lineno="7480"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>vector_index_of(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structf__vector" kindref="compound">f_vector_t</ref><sp/>*vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*item)</highlight></codeline>
<codeline lineno="7481"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(vector);</highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/><sp/><sp/>assert(item);</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"></highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vector-&gt;<ref refid="structf__vector_1a0dc3c363255f193681c77b4d2a82e995" kindref="member">m_size</ref>;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data_pos<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)vector-&gt;<ref refid="structf__vector_1af94888500189e64dce0a95c5b3665c7d" kindref="member">m_data</ref><sp/>+<sp/>i<sp/>*<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>;</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(memcmp(data_pos,<sp/>item,<sp/>vector-&gt;<ref refid="structf__vector_1ab2559204e1d28e969ce23b6e3947cd37" kindref="member">m_item_size</ref>)<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="7490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7491"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a55a8000149f7d5b04b4b07cc44c4dc79" kindref="member">INVALID_VEC_INDEX</ref>;</highlight></codeline>
<codeline lineno="7493"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"></highlight></codeline>
<codeline lineno="7495"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7496"><highlight class="normal"></highlight></codeline>
<codeline lineno="7497"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="7498"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;vector.c&quot;</highlight></codeline>
<codeline lineno="7499"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7500"><highlight class="normal"></highlight></codeline>
<codeline lineno="7501"><highlight class="normal"></highlight></codeline>
<codeline lineno="7502"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="7503"><highlight class="comment"><sp/><sp/><sp/>Begin<sp/>of<sp/>file<sp/>&quot;wcwidth.c&quot;</highlight></codeline>
<codeline lineno="7504"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7505"><highlight class="normal"></highlight></codeline>
<codeline lineno="7506"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="7507"><highlight class="comment"><sp/>*<sp/>This<sp/>is<sp/>an<sp/>implementation<sp/>of<sp/>wcwidth()<sp/>and<sp/>wcswidth()<sp/>(defined<sp/>in</highlight></codeline>
<codeline lineno="7508"><highlight class="comment"><sp/>*<sp/>IEEE<sp/>Std<sp/>1002.1-2001)<sp/>for<sp/>Unicode.</highlight></codeline>
<codeline lineno="7509"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7510"><highlight class="comment"><sp/>*<sp/>http://www.opengroup.org/onlinepubs/007904975/functions/wcwidth.html</highlight></codeline>
<codeline lineno="7511"><highlight class="comment"><sp/>*<sp/>http://www.opengroup.org/onlinepubs/007904975/functions/wcswidth.html</highlight></codeline>
<codeline lineno="7512"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7513"><highlight class="comment"><sp/>*<sp/>In<sp/>fixed-width<sp/>output<sp/>devices,<sp/>Latin<sp/>characters<sp/>all<sp/>occupy<sp/>a<sp/>single</highlight></codeline>
<codeline lineno="7514"><highlight class="comment"><sp/>*<sp/>&quot;cell&quot;<sp/>position<sp/>of<sp/>equal<sp/>width,<sp/>whereas<sp/>ideographic<sp/>CJK<sp/>characters</highlight></codeline>
<codeline lineno="7515"><highlight class="comment"><sp/>*<sp/>occupy<sp/>two<sp/>such<sp/>cells.<sp/>Interoperability<sp/>between<sp/>terminal-line</highlight></codeline>
<codeline lineno="7516"><highlight class="comment"><sp/>*<sp/>applications<sp/>and<sp/>(teletype-style)<sp/>character<sp/>terminals<sp/>using<sp/>the</highlight></codeline>
<codeline lineno="7517"><highlight class="comment"><sp/>*<sp/>UTF-8<sp/>encoding<sp/>requires<sp/>agreement<sp/>on<sp/>which<sp/>character<sp/>should<sp/>advance</highlight></codeline>
<codeline lineno="7518"><highlight class="comment"><sp/>*<sp/>the<sp/>cursor<sp/>by<sp/>how<sp/>many<sp/>cell<sp/>positions.<sp/>No<sp/>established<sp/>formal</highlight></codeline>
<codeline lineno="7519"><highlight class="comment"><sp/>*<sp/>standards<sp/>exist<sp/>at<sp/>present<sp/>on<sp/>which<sp/>Unicode<sp/>character<sp/>shall<sp/>occupy</highlight></codeline>
<codeline lineno="7520"><highlight class="comment"><sp/>*<sp/>how<sp/>many<sp/>cell<sp/>positions<sp/>on<sp/>character<sp/>terminals.<sp/>These<sp/>routines<sp/>are</highlight></codeline>
<codeline lineno="7521"><highlight class="comment"><sp/>*<sp/>a<sp/>first<sp/>attempt<sp/>of<sp/>defining<sp/>such<sp/>behavior<sp/>based<sp/>on<sp/>simple<sp/>rules</highlight></codeline>
<codeline lineno="7522"><highlight class="comment"><sp/>*<sp/>applied<sp/>to<sp/>data<sp/>provided<sp/>by<sp/>the<sp/>Unicode<sp/>Consortium.</highlight></codeline>
<codeline lineno="7523"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7524"><highlight class="comment"><sp/>*<sp/>For<sp/>some<sp/>graphical<sp/>characters,<sp/>the<sp/>Unicode<sp/>standard<sp/>explicitly</highlight></codeline>
<codeline lineno="7525"><highlight class="comment"><sp/>*<sp/>defines<sp/>a<sp/>character-cell<sp/>width<sp/>via<sp/>the<sp/>definition<sp/>of<sp/>the<sp/>East<sp/>Asian</highlight></codeline>
<codeline lineno="7526"><highlight class="comment"><sp/>*<sp/>FullWidth<sp/>(F),<sp/>Wide<sp/>(W),<sp/>Half-width<sp/>(H),<sp/>and<sp/>Narrow<sp/>(Na)<sp/>classes.</highlight></codeline>
<codeline lineno="7527"><highlight class="comment"><sp/>*<sp/>In<sp/>all<sp/>these<sp/>cases,<sp/>there<sp/>is<sp/>no<sp/>ambiguity<sp/>about<sp/>which<sp/>width<sp/>a</highlight></codeline>
<codeline lineno="7528"><highlight class="comment"><sp/>*<sp/>terminal<sp/>shall<sp/>use.<sp/>For<sp/>characters<sp/>in<sp/>the<sp/>East<sp/>Asian<sp/>Ambiguous<sp/>(A)</highlight></codeline>
<codeline lineno="7529"><highlight class="comment"><sp/>*<sp/>class,<sp/>the<sp/>width<sp/>choice<sp/>depends<sp/>purely<sp/>on<sp/>a<sp/>preference<sp/>of<sp/>backward</highlight></codeline>
<codeline lineno="7530"><highlight class="comment"><sp/>*<sp/>compatibility<sp/>with<sp/>either<sp/>historic<sp/>CJK<sp/>or<sp/>Western<sp/>practice.</highlight></codeline>
<codeline lineno="7531"><highlight class="comment"><sp/>*<sp/>Choosing<sp/>single-width<sp/>for<sp/>these<sp/>characters<sp/>is<sp/>easy<sp/>to<sp/>justify<sp/>as</highlight></codeline>
<codeline lineno="7532"><highlight class="comment"><sp/>*<sp/>the<sp/>appropriate<sp/>long-term<sp/>solution,<sp/>as<sp/>the<sp/>CJK<sp/>practice<sp/>of</highlight></codeline>
<codeline lineno="7533"><highlight class="comment"><sp/>*<sp/>displaying<sp/>these<sp/>characters<sp/>as<sp/>double-width<sp/>comes<sp/>from<sp/>historic</highlight></codeline>
<codeline lineno="7534"><highlight class="comment"><sp/>*<sp/>implementation<sp/>simplicity<sp/>(8-bit<sp/>encoded<sp/>characters<sp/>were<sp/>displayed</highlight></codeline>
<codeline lineno="7535"><highlight class="comment"><sp/>*<sp/>single-width<sp/>and<sp/>16-bit<sp/>ones<sp/>double-width,<sp/>even<sp/>for<sp/>Greek,</highlight></codeline>
<codeline lineno="7536"><highlight class="comment"><sp/>*<sp/>Cyrillic,<sp/>etc.)<sp/>and<sp/>not<sp/>any<sp/>typographic<sp/>considerations.</highlight></codeline>
<codeline lineno="7537"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7538"><highlight class="comment"><sp/>*<sp/>Much<sp/>less<sp/>clear<sp/>is<sp/>the<sp/>choice<sp/>of<sp/>width<sp/>for<sp/>the<sp/>Not<sp/>East<sp/>Asian</highlight></codeline>
<codeline lineno="7539"><highlight class="comment"><sp/>*<sp/>(Neutral)<sp/>class.<sp/>Existing<sp/>practice<sp/>does<sp/>not<sp/>dictate<sp/>a<sp/>width<sp/>for<sp/>any</highlight></codeline>
<codeline lineno="7540"><highlight class="comment"><sp/>*<sp/>of<sp/>these<sp/>characters.<sp/>It<sp/>would<sp/>nevertheless<sp/>make<sp/>sense</highlight></codeline>
<codeline lineno="7541"><highlight class="comment"><sp/>*<sp/>typographically<sp/>to<sp/>allocate<sp/>two<sp/>character<sp/>cells<sp/>to<sp/>characters<sp/>such</highlight></codeline>
<codeline lineno="7542"><highlight class="comment"><sp/>*<sp/>as<sp/>for<sp/>instance<sp/>EM<sp/>SPACE<sp/>or<sp/>VOLUME<sp/>INTEGRAL,<sp/>which<sp/>cannot<sp/>be</highlight></codeline>
<codeline lineno="7543"><highlight class="comment"><sp/>*<sp/>represented<sp/>adequately<sp/>with<sp/>a<sp/>single-width<sp/>glyph.<sp/>The<sp/>following</highlight></codeline>
<codeline lineno="7544"><highlight class="comment"><sp/>*<sp/>routines<sp/>at<sp/>present<sp/>merely<sp/>assign<sp/>a<sp/>single-cell<sp/>width<sp/>to<sp/>all</highlight></codeline>
<codeline lineno="7545"><highlight class="comment"><sp/>*<sp/>neutral<sp/>characters,<sp/>in<sp/>the<sp/>interest<sp/>of<sp/>simplicity.<sp/>This<sp/>is<sp/>not</highlight></codeline>
<codeline lineno="7546"><highlight class="comment"><sp/>*<sp/>entirely<sp/>satisfactory<sp/>and<sp/>should<sp/>be<sp/>reconsidered<sp/>before</highlight></codeline>
<codeline lineno="7547"><highlight class="comment"><sp/>*<sp/>establishing<sp/>a<sp/>formal<sp/>standard<sp/>in<sp/>this<sp/>area.<sp/>At<sp/>the<sp/>moment,<sp/>the</highlight></codeline>
<codeline lineno="7548"><highlight class="comment"><sp/>*<sp/>decision<sp/>which<sp/>Not<sp/>East<sp/>Asian<sp/>(Neutral)<sp/>characters<sp/>should<sp/>be</highlight></codeline>
<codeline lineno="7549"><highlight class="comment"><sp/>*<sp/>represented<sp/>by<sp/>double-width<sp/>glyphs<sp/>cannot<sp/>yet<sp/>be<sp/>answered<sp/>by</highlight></codeline>
<codeline lineno="7550"><highlight class="comment"><sp/>*<sp/>applying<sp/>a<sp/>simple<sp/>rule<sp/>from<sp/>the<sp/>Unicode<sp/>database<sp/>content.<sp/>Setting</highlight></codeline>
<codeline lineno="7551"><highlight class="comment"><sp/>*<sp/>up<sp/>a<sp/>proper<sp/>standard<sp/>for<sp/>the<sp/>behavior<sp/>of<sp/>UTF-8<sp/>character<sp/>terminals</highlight></codeline>
<codeline lineno="7552"><highlight class="comment"><sp/>*<sp/>will<sp/>require<sp/>a<sp/>careful<sp/>analysis<sp/>not<sp/>only<sp/>of<sp/>each<sp/>Unicode<sp/>character,</highlight></codeline>
<codeline lineno="7553"><highlight class="comment"><sp/>*<sp/>but<sp/>also<sp/>of<sp/>each<sp/>presentation<sp/>form,<sp/>something<sp/>the<sp/>author<sp/>of<sp/>these</highlight></codeline>
<codeline lineno="7554"><highlight class="comment"><sp/>*<sp/>routines<sp/>has<sp/>avoided<sp/>to<sp/>do<sp/>so<sp/>far.</highlight></codeline>
<codeline lineno="7555"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7556"><highlight class="comment"><sp/>*<sp/>http://www.unicode.org/unicode/reports/tr11/</highlight></codeline>
<codeline lineno="7557"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7558"><highlight class="comment"><sp/>*<sp/>Markus<sp/>Kuhn<sp/>--<sp/>2007-05-26<sp/>(Unicode<sp/>5.0)</highlight></codeline>
<codeline lineno="7559"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7560"><highlight class="comment"><sp/>*<sp/>Permission<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>and<sp/>distribute<sp/>this<sp/>software</highlight></codeline>
<codeline lineno="7561"><highlight class="comment"><sp/>*<sp/>for<sp/>any<sp/>purpose<sp/>and<sp/>without<sp/>fee<sp/>is<sp/>hereby<sp/>granted.<sp/>The<sp/>author</highlight></codeline>
<codeline lineno="7562"><highlight class="comment"><sp/>*<sp/>disclaims<sp/>all<sp/>warranties<sp/>with<sp/>regard<sp/>to<sp/>this<sp/>software.</highlight></codeline>
<codeline lineno="7563"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7564"><highlight class="comment"><sp/>*<sp/>Latest<sp/>version:<sp/>http://www.cl.cam.ac.uk/~mgk25/ucs/wcwidth.c</highlight></codeline>
<codeline lineno="7565"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7566"><highlight class="normal"></highlight></codeline>
<codeline lineno="7567"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>#include<sp/>&quot;wcwidth.h&quot;<sp/>*/</highlight><highlight class="normal"><sp/></highlight><highlight class="comment">/*<sp/>Commented<sp/>by<sp/>amalgamation<sp/>script<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7568"><highlight class="normal"></highlight></codeline>
<codeline lineno="7569"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>FT_HAVE_WCHAR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7570"><highlight class="normal"></highlight></codeline>
<codeline lineno="7571"><highlight class="normal"></highlight></codeline>
<codeline lineno="7572" refid="structinterval" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinterval" kindref="compound">interval</ref><sp/>{</highlight></codeline>
<codeline lineno="7573"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structinterval_1a791a2b329bfbf37ac3f72dc0f27979b0" kindref="member">first</ref>;</highlight></codeline>
<codeline lineno="7574"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/><ref refid="structinterval_1a5a79a99f8f7d17cd3d793a3d777b3f69" kindref="member">last</ref>;</highlight></codeline>
<codeline lineno="7575"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7576"><highlight class="normal"></highlight></codeline>
<codeline lineno="7577"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>auxiliary<sp/>function<sp/>for<sp/>binary<sp/>search<sp/>in<sp/>interval<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7578"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>bisearch(int32_t<sp/>ucs,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinterval" kindref="compound">interval</ref><sp/>*table,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max)</highlight></codeline>
<codeline lineno="7579"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>min<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7581"><highlight class="normal"></highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucs<sp/>&lt;<sp/>table[0].first<sp/>||<sp/>ucs<sp/>&gt;<sp/>table[max].last)</highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(max<sp/>&gt;=<sp/>min)<sp/>{</highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mid<sp/>=<sp/>(min<sp/>+<sp/>max)<sp/>/<sp/>2;</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucs<sp/>&gt;<sp/>table[mid].last)</highlight></codeline>
<codeline lineno="7587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>min<sp/>=<sp/>mid<sp/>+<sp/>1;</highlight></codeline>
<codeline lineno="7588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucs<sp/>&lt;<sp/>table[mid].first)</highlight></codeline>
<codeline lineno="7589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max<sp/>=<sp/>mid<sp/>-<sp/>1;</highlight></codeline>
<codeline lineno="7590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="7592"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7593"><highlight class="normal"></highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7595"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7596"><highlight class="normal"></highlight></codeline>
<codeline lineno="7597"><highlight class="normal"></highlight></codeline>
<codeline lineno="7598"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>following<sp/>two<sp/>functions<sp/>define<sp/>the<sp/>column<sp/>width<sp/>of<sp/>an<sp/>ISO<sp/>10646</highlight></codeline>
<codeline lineno="7599"><highlight class="comment"><sp/>*<sp/>character<sp/>as<sp/>follows:</highlight></codeline>
<codeline lineno="7600"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7601"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>The<sp/>null<sp/>character<sp/>(U+0000)<sp/>has<sp/>a<sp/>column<sp/>width<sp/>of<sp/>0.</highlight></codeline>
<codeline lineno="7602"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7603"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>Other<sp/>C0/C1<sp/>control<sp/>characters<sp/>and<sp/>DEL<sp/>will<sp/>lead<sp/>to<sp/>a<sp/>return</highlight></codeline>
<codeline lineno="7604"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>value<sp/>of<sp/>-1.</highlight></codeline>
<codeline lineno="7605"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7606"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>Non-spacing<sp/>and<sp/>enclosing<sp/>combining<sp/>characters<sp/>(general</highlight></codeline>
<codeline lineno="7607"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>category<sp/>code<sp/>Mn<sp/>or<sp/>Me<sp/>in<sp/>the<sp/>Unicode<sp/>database)<sp/>have<sp/>a</highlight></codeline>
<codeline lineno="7608"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>column<sp/>width<sp/>of<sp/>0.</highlight></codeline>
<codeline lineno="7609"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7610"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>SOFT<sp/>HYPHEN<sp/>(U+00AD)<sp/>has<sp/>a<sp/>column<sp/>width<sp/>of<sp/>1.</highlight></codeline>
<codeline lineno="7611"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7612"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>Other<sp/>format<sp/>characters<sp/>(general<sp/>category<sp/>code<sp/>Cf<sp/>in<sp/>the<sp/>Unicode</highlight></codeline>
<codeline lineno="7613"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>database)<sp/>and<sp/>ZERO<sp/>WIDTH<sp/>SPACE<sp/>(U+200B)<sp/>have<sp/>a<sp/>column<sp/>width<sp/>of<sp/>0.</highlight></codeline>
<codeline lineno="7614"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7615"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>Hangul<sp/>Jamo<sp/>medial<sp/>vowels<sp/>and<sp/>final<sp/>consonants<sp/>(U+1160-U+11FF)</highlight></codeline>
<codeline lineno="7616"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>have<sp/>a<sp/>column<sp/>width<sp/>of<sp/>0.</highlight></codeline>
<codeline lineno="7617"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7618"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>Spacing<sp/>characters<sp/>in<sp/>the<sp/>East<sp/>Asian<sp/>Wide<sp/>(W)<sp/>or<sp/>East<sp/>Asian</highlight></codeline>
<codeline lineno="7619"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Full-width<sp/>(F)<sp/>category<sp/>as<sp/>defined<sp/>in<sp/>Unicode<sp/>Technical</highlight></codeline>
<codeline lineno="7620"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Report<sp/>#11<sp/>have<sp/>a<sp/>column<sp/>width<sp/>of<sp/>2.</highlight></codeline>
<codeline lineno="7621"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7622"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>-<sp/>All<sp/>remaining<sp/>characters<sp/>(including<sp/>all<sp/>printable</highlight></codeline>
<codeline lineno="7623"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>ISO<sp/>8859-1<sp/>and<sp/>WGL4<sp/>characters,<sp/>Unicode<sp/>control<sp/>characters,</highlight></codeline>
<codeline lineno="7624"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>etc.)<sp/>have<sp/>a<sp/>column<sp/>width<sp/>of<sp/>1.</highlight></codeline>
<codeline lineno="7625"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="7626"><highlight class="comment"><sp/>*<sp/>This<sp/>implementation<sp/>assumes<sp/>that<sp/>wchar_t<sp/>characters<sp/>are<sp/>encoded</highlight></codeline>
<codeline lineno="7627"><highlight class="comment"><sp/>*<sp/>in<sp/>ISO<sp/>10646.</highlight></codeline>
<codeline lineno="7628"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7629"><highlight class="normal"></highlight></codeline>
<codeline lineno="7630"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>mk_wcwidth(</highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>wcs)</highlight></codeline>
<codeline lineno="7631"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7632"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>sorted<sp/>list<sp/>of<sp/>non-overlapping<sp/>intervals<sp/>of<sp/>non-spacing<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>generated<sp/>by<sp/>&quot;uniset<sp/>+cat=Me<sp/>+cat=Mn<sp/>+cat=Cf<sp/>-00AD<sp/>+1160-11FF<sp/>+200B<sp/>c&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structinterval" kindref="compound">interval</ref><sp/>combining[]<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="7635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0300,<sp/>0x036F<sp/>},<sp/>{<sp/>0x0483,<sp/>0x0486<sp/>},<sp/>{<sp/>0x0488,<sp/>0x0489<sp/>},</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0591,<sp/>0x05BD<sp/>},<sp/>{<sp/>0x05BF,<sp/>0x05BF<sp/>},<sp/>{<sp/>0x05C1,<sp/>0x05C2<sp/>},</highlight></codeline>
<codeline lineno="7637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x05C4,<sp/>0x05C5<sp/>},<sp/>{<sp/>0x05C7,<sp/>0x05C7<sp/>},<sp/>{<sp/>0x0600,<sp/>0x0603<sp/>},</highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0610,<sp/>0x0615<sp/>},<sp/>{<sp/>0x064B,<sp/>0x065E<sp/>},<sp/>{<sp/>0x0670,<sp/>0x0670<sp/>},</highlight></codeline>
<codeline lineno="7639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x06D6,<sp/>0x06E4<sp/>},<sp/>{<sp/>0x06E7,<sp/>0x06E8<sp/>},<sp/>{<sp/>0x06EA,<sp/>0x06ED<sp/>},</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x070F,<sp/>0x070F<sp/>},<sp/>{<sp/>0x0711,<sp/>0x0711<sp/>},<sp/>{<sp/>0x0730,<sp/>0x074A<sp/>},</highlight></codeline>
<codeline lineno="7641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x07A6,<sp/>0x07B0<sp/>},<sp/>{<sp/>0x07EB,<sp/>0x07F3<sp/>},<sp/>{<sp/>0x0901,<sp/>0x0902<sp/>},</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x093C,<sp/>0x093C<sp/>},<sp/>{<sp/>0x0941,<sp/>0x0948<sp/>},<sp/>{<sp/>0x094D,<sp/>0x094D<sp/>},</highlight></codeline>
<codeline lineno="7643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0951,<sp/>0x0954<sp/>},<sp/>{<sp/>0x0962,<sp/>0x0963<sp/>},<sp/>{<sp/>0x0981,<sp/>0x0981<sp/>},</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x09BC,<sp/>0x09BC<sp/>},<sp/>{<sp/>0x09C1,<sp/>0x09C4<sp/>},<sp/>{<sp/>0x09CD,<sp/>0x09CD<sp/>},</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x09E2,<sp/>0x09E3<sp/>},<sp/>{<sp/>0x0A01,<sp/>0x0A02<sp/>},<sp/>{<sp/>0x0A3C,<sp/>0x0A3C<sp/>},</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0A41,<sp/>0x0A42<sp/>},<sp/>{<sp/>0x0A47,<sp/>0x0A48<sp/>},<sp/>{<sp/>0x0A4B,<sp/>0x0A4D<sp/>},</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0A70,<sp/>0x0A71<sp/>},<sp/>{<sp/>0x0A81,<sp/>0x0A82<sp/>},<sp/>{<sp/>0x0ABC,<sp/>0x0ABC<sp/>},</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0AC1,<sp/>0x0AC5<sp/>},<sp/>{<sp/>0x0AC7,<sp/>0x0AC8<sp/>},<sp/>{<sp/>0x0ACD,<sp/>0x0ACD<sp/>},</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0AE2,<sp/>0x0AE3<sp/>},<sp/>{<sp/>0x0B01,<sp/>0x0B01<sp/>},<sp/>{<sp/>0x0B3C,<sp/>0x0B3C<sp/>},</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0B3F,<sp/>0x0B3F<sp/>},<sp/>{<sp/>0x0B41,<sp/>0x0B43<sp/>},<sp/>{<sp/>0x0B4D,<sp/>0x0B4D<sp/>},</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0B56,<sp/>0x0B56<sp/>},<sp/>{<sp/>0x0B82,<sp/>0x0B82<sp/>},<sp/>{<sp/>0x0BC0,<sp/>0x0BC0<sp/>},</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0BCD,<sp/>0x0BCD<sp/>},<sp/>{<sp/>0x0C3E,<sp/>0x0C40<sp/>},<sp/>{<sp/>0x0C46,<sp/>0x0C48<sp/>},</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0C4A,<sp/>0x0C4D<sp/>},<sp/>{<sp/>0x0C55,<sp/>0x0C56<sp/>},<sp/>{<sp/>0x0CBC,<sp/>0x0CBC<sp/>},</highlight></codeline>
<codeline lineno="7654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0CBF,<sp/>0x0CBF<sp/>},<sp/>{<sp/>0x0CC6,<sp/>0x0CC6<sp/>},<sp/>{<sp/>0x0CCC,<sp/>0x0CCD<sp/>},</highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0CE2,<sp/>0x0CE3<sp/>},<sp/>{<sp/>0x0D41,<sp/>0x0D43<sp/>},<sp/>{<sp/>0x0D4D,<sp/>0x0D4D<sp/>},</highlight></codeline>
<codeline lineno="7656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0DCA,<sp/>0x0DCA<sp/>},<sp/>{<sp/>0x0DD2,<sp/>0x0DD4<sp/>},<sp/>{<sp/>0x0DD6,<sp/>0x0DD6<sp/>},</highlight></codeline>
<codeline lineno="7657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0E31,<sp/>0x0E31<sp/>},<sp/>{<sp/>0x0E34,<sp/>0x0E3A<sp/>},<sp/>{<sp/>0x0E47,<sp/>0x0E4E<sp/>},</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0EB1,<sp/>0x0EB1<sp/>},<sp/>{<sp/>0x0EB4,<sp/>0x0EB9<sp/>},<sp/>{<sp/>0x0EBB,<sp/>0x0EBC<sp/>},</highlight></codeline>
<codeline lineno="7659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0EC8,<sp/>0x0ECD<sp/>},<sp/>{<sp/>0x0F18,<sp/>0x0F19<sp/>},<sp/>{<sp/>0x0F35,<sp/>0x0F35<sp/>},</highlight></codeline>
<codeline lineno="7660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0F37,<sp/>0x0F37<sp/>},<sp/>{<sp/>0x0F39,<sp/>0x0F39<sp/>},<sp/>{<sp/>0x0F71,<sp/>0x0F7E<sp/>},</highlight></codeline>
<codeline lineno="7661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0F80,<sp/>0x0F84<sp/>},<sp/>{<sp/>0x0F86,<sp/>0x0F87<sp/>},<sp/>{<sp/>0x0F90,<sp/>0x0F97<sp/>},</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x0F99,<sp/>0x0FBC<sp/>},<sp/>{<sp/>0x0FC6,<sp/>0x0FC6<sp/>},<sp/>{<sp/>0x102D,<sp/>0x1030<sp/>},</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1032,<sp/>0x1032<sp/>},<sp/>{<sp/>0x1036,<sp/>0x1037<sp/>},<sp/>{<sp/>0x1039,<sp/>0x1039<sp/>},</highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1058,<sp/>0x1059<sp/>},<sp/>{<sp/>0x1160,<sp/>0x11FF<sp/>},<sp/>{<sp/>0x135F,<sp/>0x135F<sp/>},</highlight></codeline>
<codeline lineno="7665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1712,<sp/>0x1714<sp/>},<sp/>{<sp/>0x1732,<sp/>0x1734<sp/>},<sp/>{<sp/>0x1752,<sp/>0x1753<sp/>},</highlight></codeline>
<codeline lineno="7666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1772,<sp/>0x1773<sp/>},<sp/>{<sp/>0x17B4,<sp/>0x17B5<sp/>},<sp/>{<sp/>0x17B7,<sp/>0x17BD<sp/>},</highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x17C6,<sp/>0x17C6<sp/>},<sp/>{<sp/>0x17C9,<sp/>0x17D3<sp/>},<sp/>{<sp/>0x17DD,<sp/>0x17DD<sp/>},</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x180B,<sp/>0x180D<sp/>},<sp/>{<sp/>0x18A9,<sp/>0x18A9<sp/>},<sp/>{<sp/>0x1920,<sp/>0x1922<sp/>},</highlight></codeline>
<codeline lineno="7669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1927,<sp/>0x1928<sp/>},<sp/>{<sp/>0x1932,<sp/>0x1932<sp/>},<sp/>{<sp/>0x1939,<sp/>0x193B<sp/>},</highlight></codeline>
<codeline lineno="7670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1A17,<sp/>0x1A18<sp/>},<sp/>{<sp/>0x1B00,<sp/>0x1B03<sp/>},<sp/>{<sp/>0x1B34,<sp/>0x1B34<sp/>},</highlight></codeline>
<codeline lineno="7671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1B36,<sp/>0x1B3A<sp/>},<sp/>{<sp/>0x1B3C,<sp/>0x1B3C<sp/>},<sp/>{<sp/>0x1B42,<sp/>0x1B42<sp/>},</highlight></codeline>
<codeline lineno="7672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1B6B,<sp/>0x1B73<sp/>},<sp/>{<sp/>0x1DC0,<sp/>0x1DCA<sp/>},<sp/>{<sp/>0x1DFE,<sp/>0x1DFF<sp/>},</highlight></codeline>
<codeline lineno="7673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x200B,<sp/>0x200F<sp/>},<sp/>{<sp/>0x202A,<sp/>0x202E<sp/>},<sp/>{<sp/>0x2060,<sp/>0x2063<sp/>},</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x206A,<sp/>0x206F<sp/>},<sp/>{<sp/>0x20D0,<sp/>0x20EF<sp/>},<sp/>{<sp/>0x302A,<sp/>0x302F<sp/>},</highlight></codeline>
<codeline lineno="7675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x3099,<sp/>0x309A<sp/>},<sp/>{<sp/>0xA806,<sp/>0xA806<sp/>},<sp/>{<sp/>0xA80B,<sp/>0xA80B<sp/>},</highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0xA825,<sp/>0xA826<sp/>},<sp/>{<sp/>0xFB1E,<sp/>0xFB1E<sp/>},<sp/>{<sp/>0xFE00,<sp/>0xFE0F<sp/>},</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0xFE20,<sp/>0xFE23<sp/>},<sp/>{<sp/>0xFEFF,<sp/>0xFEFF<sp/>},<sp/>{<sp/>0xFFF9,<sp/>0xFFFB<sp/>},</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x10A01,<sp/>0x10A03<sp/>},<sp/>{<sp/>0x10A05,<sp/>0x10A06<sp/>},<sp/>{<sp/>0x10A0C,<sp/>0x10A0F<sp/>},</highlight></codeline>
<codeline lineno="7679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x10A38,<sp/>0x10A3A<sp/>},<sp/>{<sp/>0x10A3F,<sp/>0x10A3F<sp/>},<sp/>{<sp/>0x1D167,<sp/>0x1D169<sp/>},</highlight></codeline>
<codeline lineno="7680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1D173,<sp/>0x1D182<sp/>},<sp/>{<sp/>0x1D185,<sp/>0x1D18B<sp/>},<sp/>{<sp/>0x1D1AA,<sp/>0x1D1AD<sp/>},</highlight></codeline>
<codeline lineno="7681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0x1D242,<sp/>0x1D244<sp/>},<sp/>{<sp/>0xE0001,<sp/>0xE0001<sp/>},<sp/>{<sp/>0xE0020,<sp/>0xE007F<sp/>},</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>0xE0100,<sp/>0xE01EF<sp/>}</highlight></codeline>
<codeline lineno="7683"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"></highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>We<sp/>convert<sp/>wchar_t<sp/>to<sp/>int32_t<sp/>to<sp/>avoid<sp/>compiler<sp/>warnings</highlight></codeline>
<codeline lineno="7686"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>about<sp/>implicit<sp/>integer<sp/>conversions</highlight></codeline>
<codeline lineno="7687"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>https://github.com/seleznevae/libfort/issues/20</highlight></codeline>
<codeline lineno="7688"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="7689"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*<sp/>note:<sp/>didn&apos;t<sp/>test<sp/>if<sp/>we<sp/>can<sp/>do<sp/>it</highlight></codeline>
<codeline lineno="7690"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/><sp/><sp/>int32_t<sp/>ucs<sp/>=<sp/>(int32_t)wcs;</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"></highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>test<sp/>for<sp/>8-bit<sp/>control<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucs<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7696"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ucs<sp/>&lt;<sp/>32<sp/>||<sp/>(ucs<sp/>&gt;=<sp/>0x7f<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;<sp/>0xa0))</highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7698"><highlight class="normal"></highlight></codeline>
<codeline lineno="7699"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>binary<sp/>search<sp/>in<sp/>table<sp/>of<sp/>non-spacing<sp/>characters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bisearch(ucs,<sp/>combining,</highlight></codeline>
<codeline lineno="7701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(combining)<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structinterval" kindref="compound">interval</ref>)<sp/>-<sp/>1))</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="7703"><highlight class="normal"></highlight></codeline>
<codeline lineno="7704"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>we<sp/>arrive<sp/>here,<sp/>ucs<sp/>is<sp/>not<sp/>a<sp/>combining<sp/>or<sp/>C0/C1<sp/>control<sp/>character<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7705"><highlight class="normal"></highlight></codeline>
<codeline lineno="7706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1<sp/>+</highlight></codeline>
<codeline lineno="7707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0x1100<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&lt;=<sp/>0x115f<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Hangul<sp/>Jamo<sp/>init.<sp/>consonants<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucs<sp/>==<sp/>0x2329<sp/>||<sp/>ucs<sp/>==<sp/>0x232a<sp/>||</highlight></codeline>
<codeline lineno="7710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0x2e80<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0xa4cf<sp/>&amp;&amp;</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ucs<sp/>!=<sp/>0x303f)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CJK<sp/>...<sp/>Yi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0xac00<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0xd7a3)<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>Hangul<sp/>Syllables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0xf900<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0xfaff)<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>CJK<sp/>Compatibility<sp/>Ideographs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0xfe10<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0xfe19)<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>Vertical<sp/>forms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0xfe30<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0xfe6f)<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>CJK<sp/>Compatibility<sp/>Forms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0xff00<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0xff60)<sp/>||<sp/></highlight><highlight class="comment">/*<sp/>Fullwidth<sp/>Forms<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0xffe0<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0xffe6)<sp/>||</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0x20000<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0x2fffd)<sp/>||</highlight></codeline>
<codeline lineno="7719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(ucs<sp/>&gt;=<sp/>0x30000<sp/>&amp;&amp;<sp/>ucs<sp/>&lt;=<sp/>0x3fffd)));</highlight></codeline>
<codeline lineno="7720"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7721"><highlight class="normal"></highlight></codeline>
<codeline lineno="7722"><highlight class="normal"></highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><ref refid="fort_8c_1af0c41e082800b552ff6a3f4b7783893e" kindref="member">FT_INTERNAL</ref></highlight></codeline>
<codeline lineno="7724"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="fort_8c_1a8c6234fb096b466971193e24d3f9c85b" kindref="member">mk_wcswidth</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">wchar_t</highlight><highlight class="normal"><sp/>*pwcs,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n)</highlight></codeline>
<codeline lineno="7725"><highlight class="normal">{</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>width<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"></highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(;<sp/>*pwcs<sp/>&amp;&amp;<sp/>n--<sp/>&gt;<sp/>0;<sp/>pwcs++)<sp/>{</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w;</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((w<sp/>=<sp/>mk_wcwidth(*pwcs))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width<sp/>+=<sp/>w;</highlight></codeline>
<codeline lineno="7734"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"></highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>width;</highlight></codeline>
<codeline lineno="7737"><highlight class="normal">}</highlight></codeline>
<codeline lineno="7738"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FT_HAVE_WCHAR<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7739"><highlight class="normal"></highlight></codeline>
<codeline lineno="7740"><highlight class="normal"></highlight><highlight class="comment">/********************************************************</highlight></codeline>
<codeline lineno="7741"><highlight class="comment"><sp/><sp/><sp/>End<sp/>of<sp/>file<sp/>&quot;wcwidth.c&quot;</highlight></codeline>
<codeline lineno="7742"><highlight class="comment"><sp/>********************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7743"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="src/fort.c"/>
  </compounddef>
</doxygen>
